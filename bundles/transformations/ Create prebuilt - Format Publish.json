{
  "_id": "6197e2fcda174d24c34d36dc",
  "name": " Create prebuilt - Format Publish",
  "description": "Takes in the output of the AppArtifacts componentDiscovery task and some other data to form the input of the createPublishedArtifactFromScratch task.",
  "incoming": [
    {
      "$id": "name",
      "type": "string",
      "examples": [
        "Example Name"
      ]
    },
    {
      "$id": "description",
      "type": "string",
      "examples": [
        "A prebuilt that accomplishes xyz"
      ]
    },
    {
      "$id": "contributor",
      "type": "string",
      "examples": [
        "Employee x"
      ]
    },
    {
      "$id": "readme",
      "type": "string",
      "examples": [
        "Example readme"
      ]
    },
    {
      "$id": "license",
      "type": "string",
      "examples": [
        "Apache 2%2E0"
      ],
      "default": "Apache 2%2E0"
    },
    {
      "$id": "categories",
      "type": "array"
    },
    {
      "$id": "keywords",
      "type": "array"
    },
    {
      "$id": "discoverComponentsOutput",
      "type": "object",
      "properties": {
        "dependencies": {
          "type": "array",
          "items": {
            "type": "string",
            "examples": [
              "@itential/app-automation_catalog"
            ]
          }
        }
      },
      "required": []
    },
    {
      "$id": "componentsFormSelection",
      "type": "object",
      "properties": {
        "components": {
          "type": "object",
          "properties": {
            "catalogAutomations": {
              "type": "array"
            },
            "operationsAutomations": {
              "type": "array"
            },
            "workflows": {
              "type": "array"
            },
            "jsonForms": {
              "type": "array"
            },
            "forms": {
              "type": "array"
            },
            "templates": {
              "type": "array"
            },
            "commandTemplates": {
              "type": "array"
            },
            "analyticTemplates": {
              "type": "array"
            },
            "goldenConfigTrees": {
              "type": "array"
            },
            "transformations": {
              "type": "array"
            },
            "triggers": {
              "type": "array"
            }
          },
          "required": []
        }
      },
      "required": []
    },
    {
      "$id": "scope",
      "type": "string"
    }
  ],
  "outgoing": [
    {
      "$id": "artifactData",
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "examples": [
                "Example Name"
              ]
            },
            "description": {
              "type": "string",
              "examples": [
                "Example Description"
              ]
            },
            "contributor": {
              "type": "string",
              "examples": [
                "Example Contributor"
              ]
            },
            "readme": {
              "type": "string",
              "examples": [
                "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->\n\n<!-- Update the below line with your Pre-Built name -->\n# Pre-Built Name\n\n<!-- Leave TOC intact unless you've added or removed headers -->\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n* [Additional Information](#additional-information)\n\n## Overview\n\n<!-- Write a few sentences about the Pre-Built and explain the use case(s) -->\n<!-- Avoid using the word Artifact%2E Please use Pre-Built, Pre-Built Transformation or Pre-Built Automation -->\n<!-- Ex%2E: The Migration Wizard enables IAP users to conveniently move their automation use cases between different IAP environments -->\n<!-- (e%2Eg%2E from Dev to Pre-Production or from Lab to Production)%2E -->\n\n<!-- Workflow(s) Image Placeholder - TO BE ADDED DIRECTLY TO GitLab -->\n<!-- REPLACE COMMENT BELOW WITH IMAGE OF YOUR MAIN WORKFLOW -->\n<!--\n<table><tr><td>\n  <img src=\"./images/workflow.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n-->\n<!-- REPLACE COMMENT ABOVE WITH IMAGE OF YOUR MAIN WORKFLOW -->\n\n<!-- ADD ESTIMATED RUN TIME HERE -->\n<!-- e%2Eg%2E Estimated Run Time: 34 min%2E -->\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n<!-- Include any other required apps or adapters in this list -->\n<!-- Ex%2E: EC2 Adapter -->\n* Itential Automation Platform\n  * `^2020%2Ex%2Ex`\n\n## Requirements\n\nThis Pre-Built requires the following:\n\n<!-- Unordered list highlighting the requirements of the Pre-Built -->\n<!-- EXAMPLE -->\n<!-- * cisco ios device -->\n<!-- * Ansible or NSO (with F5 NED) * -->\n\n## Features\n\nThe main benefits and features of the Pre-Built are outlined below%2E\n\n<!-- Unordered list highlighting the most exciting features of the Pre-Built -->\n<!-- EXAMPLE -->\n<!-- * Automatically checks for device type -->\n<!-- * Displays dry-run to user (asking for confirmation) prior to pushing config to the device -->\n<!-- * Verifies downloaded file integrity (using md5), will try to download again if failed -->\n\n\n## Future Enhancements\n\n<!-- OPTIONAL - Mention if the Pre-Built will be enhanced with additional features on the road map -->\n<!-- Ex%2E: This Pre-Built would support Cisco XR and F5 devices -->\n\n## How to Install\n\nTo install the Pre-Built:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the Pre-Built%2E \n* The Pre-Built can be installed from within App-Admin_Essential%2E Simply search for the name of your desired Pre-Built and click the install button (as shown below)%2E\n\n<!-- REPLACE BELOW WITH IMAGE OF YOUR PUBLISHED PRE-BUILT -->\n<!--\n<table><tr><td>\n  <img src=\"./images/install.png\" alt=\"install\" width=\"600px\">\n</td></tr></table>\n-->\n<!-- REPLACE ABOVE WITH IMAGE OF YOUR PUBLISHED PRE-BUILT -->\n\n<!-- OPTIONAL - Explain if external components are required outside of IAP -->\n<!-- Ex%2E: The Ansible roles required for this Pre-Built can be found in the repository located at https://gitlab%2Ecom/itentialopensource/pre-built-automations/hello-world -->\n\n## How to Run\n\nUse the following to run the Pre-Built:\n\n<!-- Explain the main entrypoint(s) for this Pre-Built: Automation Catalog item, Workflow, Postman, etc%2E -->\n\n## Additional Information\n\nPlease use your Itential Customer Success account if you need support when using this Pre-Built%2E"
              ]
            },
            "license": {
              "type": "string",
              "examples": [
                "Apache 2%2E0"
              ]
            },
            "categories": {
              "type": "array"
            },
            "keywords": {
              "type": "array"
            },
            "dependencies": {
              "type": "array",
              "items": {
                "type": "string",
                "examples": [
                  "@itential/app-automation_catalog"
                ]
              }
            }
          },
          "required": []
        },
        "components": {
          "type": "object",
          "properties": {
            "ac-agenda-job": {
              "type": "array"
            },
            "automation": {
              "type": "array"
            },
            "workflow": {
              "type": "array"
            },
            "json-forms": {
              "type": "array"
            },
            "forms": {
              "type": "array"
            },
            "template": {
              "type": "array"
            },
            "mop-template": {
              "type": "array"
            },
            "mop-analytic-template": {
              "type": "array"
            },
            "golden-config": {
              "type": "array"
            },
            "transformation": {
              "type": "array"
            },
            "triggers": {
              "type": "array"
            }
          },
          "required": []
        }
      },
      "required": []
    },
    {
      "$id": "modules",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "package_id": {
            "type": "string",
            "examples": [
              "@itential/app-automation_catalog"
            ]
          },
          "version": {
            "type": "string"
          }
        },
        "required": []
      }
    },
    {
      "$id": "defaultPackageJson",
      "type": "object"
    }
  ],
  "steps": [
    {
      "id": 11,
      "type": "method",
      "library": "Array",
      "method": "map",
      "args": [
        null,
        "createModuleObject"
      ],
      "view": {
        "row": 5,
        "col": 1
      }
    },
    {
      "id": 13,
      "type": "assign",
      "from": {
        "location": "method",
        "name": 11,
        "ptr": "/return"
      },
      "to": {
        "location": "outgoing",
        "name": "modules",
        "ptr": ""
      }
    },
    {
      "id": 15,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "discoverComponentsOutput",
        "ptr": "/dependencies"
      },
      "to": {
        "location": "method",
        "name": 11,
        "ptr": "/args/0/value"
      }
    },
    {
      "id": 20,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "name",
        "ptr": ""
      },
      "to": {
        "location": "outgoing",
        "name": "artifactData",
        "ptr": "/metadata/name"
      }
    },
    {
      "id": 21,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "description",
        "ptr": ""
      },
      "to": {
        "location": "outgoing",
        "name": "artifactData",
        "ptr": "/metadata/description"
      }
    },
    {
      "id": 22,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "contributor",
        "ptr": ""
      },
      "to": {
        "location": "outgoing",
        "name": "artifactData",
        "ptr": "/metadata/contributor"
      }
    },
    {
      "id": 23,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "readme",
        "ptr": ""
      },
      "to": {
        "location": "outgoing",
        "name": "artifactData",
        "ptr": "/metadata/readme"
      }
    },
    {
      "id": 24,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "license",
        "ptr": ""
      },
      "to": {
        "location": "outgoing",
        "name": "artifactData",
        "ptr": "/metadata/license"
      }
    },
    {
      "id": 26,
      "type": "declaration",
      "library": "Object",
      "method": "new Object",
      "args": [
        {
          "name": "@itentialopensource/artifact-template",
          "version": "0.0.7",
          "description": "Template for creating new artifacts",
          "scripts": {
            "test": "echo \"Error: no test specified\" && exit 1",
            "deploy": "echo not needed npm publish --access=public --registry=http://registry.npmjs.org",
            "validateSchema": "node test/manifestTester.js manifest.json manifest-schema.json",
            "validateSchemaLinks": "node test/manifestLinkTester.js manifest.json",
            "generateImageLinks": "node utils/generateImageLinks.js"
          },
          "repository": {
            "type": "gitlab",
            "hostname": "gitlab.com",
            "path": "itentialopensource/pre-built-automations"
          },
          "keywords": [
            "Itential",
            "IAP",
            "artifacts"
          ],
          "contributors": [
            "Itential Artifacts"
          ],
          "author": "Itential Artifacts",
          "license": "Apache-2.0",
          "devDependencies": {
            "r2": "^2.0.1",
            "ajv": "6.10.0",
            "better-ajv-errors": "^0.6.1",
            "fs-extra": "^7.0.1"
          }
        }
      ],
      "view": {
        "row": 6,
        "col": 1
      }
    },
    {
      "id": 28,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "componentsFormSelection",
        "ptr": "/components/catalogAutomations"
      },
      "to": {
        "location": "outgoing",
        "name": "artifactData",
        "ptr": "/components/ac-agenda-job"
      }
    },
    {
      "id": 29,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "componentsFormSelection",
        "ptr": "/components/operationsAutomations"
      },
      "to": {
        "location": "outgoing",
        "name": "artifactData",
        "ptr": "/components/automation"
      }
    },
    {
      "id": 30,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "componentsFormSelection",
        "ptr": "/components/workflows"
      },
      "to": {
        "location": "outgoing",
        "name": "artifactData",
        "ptr": "/components/workflow"
      }
    },
    {
      "id": 31,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "componentsFormSelection",
        "ptr": "/components/jsonForms"
      },
      "to": {
        "location": "outgoing",
        "name": "artifactData",
        "ptr": "/components/json-forms"
      }
    },
    {
      "id": 32,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "componentsFormSelection",
        "ptr": "/components/forms"
      },
      "to": {
        "location": "outgoing",
        "name": "artifactData",
        "ptr": "/components/forms"
      }
    },
    {
      "id": 33,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "componentsFormSelection",
        "ptr": "/components/templates"
      },
      "to": {
        "location": "outgoing",
        "name": "artifactData",
        "ptr": "/components/template"
      }
    },
    {
      "id": 34,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "componentsFormSelection",
        "ptr": "/components/commandTemplates"
      },
      "to": {
        "location": "outgoing",
        "name": "artifactData",
        "ptr": "/components/mop-template"
      }
    },
    {
      "id": 35,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "componentsFormSelection",
        "ptr": "/components/analyticTemplates"
      },
      "to": {
        "location": "outgoing",
        "name": "artifactData",
        "ptr": "/components/mop-analytic-template"
      }
    },
    {
      "id": 36,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "componentsFormSelection",
        "ptr": "/components/goldenConfigTrees"
      },
      "to": {
        "location": "outgoing",
        "name": "artifactData",
        "ptr": "/components/golden-config"
      }
    },
    {
      "id": 37,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "componentsFormSelection",
        "ptr": "/components/transformations"
      },
      "to": {
        "location": "outgoing",
        "name": "artifactData",
        "ptr": "/components/transformation"
      }
    },
    {
      "id": 38,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "discoverComponentsOutput",
        "ptr": "/dependencies"
      },
      "to": {
        "location": "outgoing",
        "name": "artifactData",
        "ptr": "/metadata/dependencies"
      }
    },
    {
      "id": 39,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "componentsFormSelection",
        "ptr": "/components/triggers"
      },
      "to": {
        "location": "outgoing",
        "name": "artifactData",
        "ptr": "/components/triggers"
      }
    },
    {
      "id": 40,
      "type": "method",
      "library": "Array",
      "method": "map",
      "args": [
        null,
        "ƒ_map_1",
        null
      ],
      "view": {
        "row": 4,
        "col": 2
      }
    },
    {
      "id": 41,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "keywords",
        "ptr": ""
      },
      "to": {
        "location": "method",
        "name": 40,
        "ptr": "/args/0/value"
      }
    },
    {
      "id": 42,
      "type": "declaration",
      "library": "String",
      "method": "new String",
      "args": [
        "keyword"
      ],
      "view": {
        "row": 4,
        "col": 1
      }
    },
    {
      "id": 43,
      "type": "assign",
      "from": {
        "location": "declaration",
        "name": 42,
        "ptr": "/return"
      },
      "to": {
        "location": "method",
        "name": 40,
        "ptr": "/args/2/value"
      }
    },
    {
      "id": 44,
      "type": "method",
      "library": "Array",
      "method": "map",
      "args": [
        null,
        "ƒ_map_1",
        null
      ],
      "view": {
        "row": 3,
        "col": 2
      }
    },
    {
      "id": 45,
      "type": "declaration",
      "library": "String",
      "method": "new String",
      "args": [
        "category"
      ],
      "view": {
        "row": 3,
        "col": 1
      }
    },
    {
      "id": 46,
      "type": "assign",
      "from": {
        "location": "declaration",
        "name": 45,
        "ptr": "/return"
      },
      "to": {
        "location": "method",
        "name": 44,
        "ptr": "/args/2/value"
      }
    },
    {
      "id": 47,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "categories",
        "ptr": ""
      },
      "to": {
        "location": "method",
        "name": 44,
        "ptr": "/args/0/value"
      }
    },
    {
      "id": 48,
      "type": "assign",
      "from": {
        "location": "method",
        "name": 40,
        "ptr": "/return"
      },
      "to": {
        "location": "outgoing",
        "name": "artifactData",
        "ptr": "/metadata/keywords"
      }
    },
    {
      "id": 49,
      "type": "assign",
      "from": {
        "location": "method",
        "name": 44,
        "ptr": "/return"
      },
      "to": {
        "location": "outgoing",
        "name": "artifactData",
        "ptr": "/metadata/categories"
      }
    },
    {
      "id": 50,
      "type": "function",
      "function": "setScope",
      "args": [
        "",
        ""
      ],
      "view": {
        "row": 6,
        "col": 3
      }
    },
    {
      "id": 51,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "scope",
        "ptr": ""
      },
      "to": {
        "location": "function",
        "name": 50,
        "ptr": "/args/0/value"
      }
    },
    {
      "id": 52,
      "type": "method",
      "library": "Object",
      "method": "getProperty",
      "args": [
        null,
        "name"
      ],
      "view": {
        "row": 6,
        "col": 2
      }
    },
    {
      "id": 53,
      "type": "assign",
      "from": {
        "location": "declaration",
        "name": 26,
        "ptr": "/return"
      },
      "to": {
        "location": "method",
        "name": 52,
        "ptr": "/args/0/value"
      }
    },
    {
      "id": 54,
      "type": "assign",
      "from": {
        "location": "method",
        "name": 52,
        "ptr": "/return"
      },
      "to": {
        "location": "function",
        "name": 50,
        "ptr": "/args/1/value"
      }
    },
    {
      "id": 55,
      "type": "method",
      "library": "Object",
      "method": "deleteProperty",
      "args": [
        null,
        "name"
      ],
      "view": {
        "row": 7,
        "col": 2
      }
    },
    {
      "id": 56,
      "type": "method",
      "library": "Object",
      "method": "setProperty",
      "args": [
        null,
        "name",
        null
      ],
      "view": {
        "row": 7,
        "col": 3
      }
    },
    {
      "id": 57,
      "type": "assign",
      "from": {
        "location": "declaration",
        "name": 26,
        "ptr": "/return"
      },
      "to": {
        "location": "method",
        "name": 55,
        "ptr": "/args/0/value"
      }
    },
    {
      "id": 58,
      "type": "assign",
      "from": {
        "location": "method",
        "name": 55,
        "ptr": "/return"
      },
      "to": {
        "location": "method",
        "name": 56,
        "ptr": "/args/0/value"
      }
    },
    {
      "id": 59,
      "type": "assign",
      "from": {
        "location": "function",
        "name": 50,
        "ptr": "/return/scope"
      },
      "to": {
        "location": "method",
        "name": 56,
        "ptr": "/args/2/value"
      }
    },
    {
      "id": 60,
      "type": "assign",
      "from": {
        "location": "method",
        "name": 56,
        "ptr": "/return"
      },
      "to": {
        "location": "outgoing",
        "name": "defaultPackageJson",
        "ptr": ""
      }
    }
  ],
  "functions": [
    {
      "incoming": [
        {
          "type": "string",
          "examples": [
            "@itential/app-automation_catalog"
          ],
          "$id": "currentValue"
        },
        {
          "title": "index",
          "type": "number",
          "optional": true,
          "$id": "index"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "examples": [
              "@itential/app-automation_catalog"
            ]
          },
          "$id": "array",
          "optional": true
        },
        {
          "$id": "thisArg",
          "type": "object",
          "properties": {},
          "isContext": true,
          "isThis": true,
          "isIndexed": true
        }
      ],
      "outgoing": [
        {
          "title": "newValue",
          "type": [
            "array",
            "boolean",
            "number",
            "integer",
            "string",
            "object",
            "null"
          ],
          "editable": true,
          "$id": "newValue"
        }
      ],
      "functions": [],
      "name": "createModuleObject",
      "steps": [
        {
          "id": 1,
          "type": "declaration",
          "library": "Object",
          "method": "new Object",
          "args": [
            null
          ],
          "view": {
            "row": 1,
            "col": 1
          }
        },
        {
          "id": 3,
          "type": "method",
          "library": "Object",
          "method": "setProperty",
          "args": [
            null,
            "version",
            null
          ],
          "view": {
            "row": 1,
            "col": 3
          }
        },
        {
          "id": 5,
          "type": "declaration",
          "library": "String",
          "method": "new String",
          "args": [
            null
          ],
          "view": {
            "row": 2,
            "col": 2
          }
        },
        {
          "id": 6,
          "type": "assign",
          "from": {
            "location": "declaration",
            "name": 5,
            "ptr": "/return"
          },
          "to": {
            "location": "method",
            "name": 3,
            "ptr": "/args/2/value"
          }
        },
        {
          "id": 7,
          "type": "assign",
          "from": {
            "location": "method",
            "name": 3,
            "ptr": "/return"
          },
          "to": {
            "location": "outgoing",
            "name": "newValue",
            "ptr": ""
          }
        },
        {
          "id": 8,
          "type": "method",
          "library": "Object",
          "method": "setProperty",
          "args": [
            null,
            "package_id",
            null
          ],
          "view": {
            "row": 1,
            "col": 2
          }
        },
        {
          "id": 9,
          "type": "assign",
          "from": {
            "location": "declaration",
            "name": 1,
            "ptr": "/return"
          },
          "to": {
            "location": "method",
            "name": 8,
            "ptr": "/args/0/value"
          }
        },
        {
          "id": 10,
          "type": "assign",
          "from": {
            "location": "incoming",
            "name": "currentValue",
            "ptr": ""
          },
          "to": {
            "location": "method",
            "name": 8,
            "ptr": "/args/2/value"
          }
        },
        {
          "id": 11,
          "type": "assign",
          "from": {
            "location": "method",
            "name": 8,
            "ptr": "/return"
          },
          "to": {
            "location": "method",
            "name": 3,
            "ptr": "/args/0/value"
          }
        }
      ],
      "view": {
        "col": 3,
        "row": 4
      },
      "id": "createModuleObject",
      "comments": []
    },
    {
      "incoming": [
        {
          "type": [
            "array",
            "boolean",
            "number",
            "integer",
            "string",
            "object",
            "null"
          ],
          "$id": "currentValue"
        },
        {
          "title": "index",
          "type": "number",
          "optional": true,
          "$id": "index"
        },
        {
          "$id": "array",
          "type": "array",
          "optional": true
        },
        {
          "$id": "thisArg",
          "type": "object",
          "properties": {
            "0_new String return": {
              "type": "string"
            }
          },
          "isContext": true,
          "isIndexed": true
        }
      ],
      "outgoing": [
        {
          "title": "newValue",
          "type": [
            "array",
            "boolean",
            "number",
            "integer",
            "string",
            "object",
            "null"
          ],
          "editable": true,
          "$id": "newValue"
        }
      ],
      "functions": [],
      "name": "ƒ_map_1",
      "steps": [
        {
          "id": 1,
          "type": "method",
          "library": "Object",
          "method": "getProperty",
          "args": [
            null,
            null
          ],
          "view": {
            "row": 1,
            "col": 1
          }
        },
        {
          "id": 2,
          "type": "assign",
          "from": {
            "location": "incoming",
            "name": "currentValue",
            "ptr": ""
          },
          "to": {
            "location": "method",
            "name": 1,
            "ptr": "/args/0/value"
          }
        },
        {
          "id": 3,
          "type": "assign",
          "from": {
            "location": "incoming",
            "name": "thisArg",
            "ptr": "/0_new String return"
          },
          "to": {
            "location": "method",
            "name": 1,
            "ptr": "/args/1/value"
          }
        },
        {
          "id": 4,
          "type": "assign",
          "from": {
            "location": "method",
            "name": 1,
            "ptr": "/return"
          },
          "to": {
            "location": "outgoing",
            "name": "newValue",
            "ptr": ""
          }
        }
      ],
      "view": {
        "col": 1,
        "row": 4
      },
      "id": "ƒ_map_1",
      "comments": []
    },
    {
      "incoming": [
        {
          "$id": "newScope",
          "type": "string"
        },
        {
          "$id": "oldScope",
          "type": "string"
        }
      ],
      "outgoing": [
        {
          "$id": "scope",
          "type": "string"
        }
      ],
      "functions": [],
      "name": "userFunc_1",
      "steps": [
        {
          "id": 1,
          "type": "method",
          "library": "String",
          "method": "split",
          "args": [
            null,
            "/",
            null
          ],
          "view": {
            "row": 2,
            "col": 1
          }
        },
        {
          "id": 2,
          "type": "assign",
          "from": {
            "location": "incoming",
            "name": "oldScope",
            "ptr": ""
          },
          "to": {
            "location": "method",
            "name": 1,
            "ptr": "/args/0/value"
          }
        },
        {
          "id": 3,
          "type": "method",
          "library": "Array",
          "method": "getIndex",
          "args": [
            null,
            1
          ],
          "view": {
            "row": 2,
            "col": 2
          }
        },
        {
          "id": 4,
          "type": "assign",
          "from": {
            "location": "method",
            "name": 1,
            "ptr": "/return"
          },
          "to": {
            "location": "method",
            "name": 3,
            "ptr": "/args/0/value"
          }
        },
        {
          "id": 5,
          "type": "method",
          "library": "String",
          "method": "concat",
          "args": [
            null,
            "/",
            null
          ],
          "view": {
            "row": 1,
            "col": 2
          }
        },
        {
          "id": 6,
          "type": "assign",
          "from": {
            "location": "incoming",
            "name": "newScope",
            "ptr": ""
          },
          "to": {
            "location": "method",
            "name": 5,
            "ptr": "/args/0/value"
          }
        },
        {
          "id": 8,
          "type": "assign",
          "from": {
            "location": "method",
            "name": 5,
            "ptr": "/return"
          },
          "to": {
            "location": "outgoing",
            "name": "scope",
            "ptr": ""
          }
        },
        {
          "id": 9,
          "type": "assign",
          "from": {
            "location": "method",
            "name": 3,
            "ptr": "/return"
          },
          "to": {
            "location": "method",
            "name": 5,
            "ptr": "/args/2/value"
          }
        }
      ],
      "view": {
        "col": 2,
        "row": 4
      },
      "id": "setScope",
      "comments": []
    }
  ],
  "comments": [],
  "view": {
    "col": 3,
    "row": 8
  },
  "created": "2022-12-02T16:01:37.502Z",
  "createdBy": {
    "_id": "618009a031d7680dbad39d8b",
    "provenance": "local_aaa",
    "username": "admin@pronghorn"
  },
  "lastUpdated": "2022-12-02T16:01:37.502Z",
  "lastUpdatedBy": {
    "_id": "618009a031d7680dbad39d8b",
    "provenance": "local_aaa",
    "username": "admin@pronghorn"
  },
  "version": "3.17.7-2021.1.7",
  "tags": []
}