{
  "metadata": {
    "name": "@itentialopensource/prebuilt-wizard",
    "version": "0.0.1",
    "description": "Pre-built to create a new Pre-Built bundle in Admin Essentials.",
    "license": "Apache-2.0",
    "repository": {
      "type": "local",
      "hostname": "localhost",
      "path": "/"
    },
    "keywords": [
      "Itential",
      "IAP",
      "artifacts"
    ],
    "author": "Itential Automation Platform",
    "IAPDependencies": {
      "@itential/app-automation_catalog": "",
      "@itential/app-json_forms": "",
      "@itential/app-workflow_engine": "",
      "@itential/app-artifacts": ""
    }
  },
  "manifest": {
    "bundleName": "@itentialopensource/prebuilt-wizard",
    "fingerprint": "638a2234958e4d01782f897f",
    "createdEpoch": "1669997108552",
    "artifacts": [
      {
        "id": "Prebuilt Wizard",
        "name": "Prebuilt Wizard",
        "type": "workflow",
        "location": "/bundles/workflows/Prebuilt Wizard.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Prebuilt Wizard Re-Discover",
        "name": "Prebuilt Wizard Re-Discover",
        "type": "workflow",
        "location": "/bundles/workflows/Prebuilt Wizard Re-Discover.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Create Prebuilt Form",
        "name": "Create Prebuilt Form",
        "type": "json-forms",
        "location": "/bundles/json_forms/Create Prebuilt Form.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Create prebuilt - Edit discovered components",
        "name": "Create prebuilt - Edit discovered components",
        "type": "json-forms",
        "location": "/bundles/json_forms/Create prebuilt - Edit discovered components.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Prebuilt Wizard Re-Discover",
        "name": "Prebuilt Wizard Re-Discover",
        "type": "json-forms",
        "location": "/bundles/json_forms/Prebuilt Wizard Re-Discover.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Re-Discovery Components Form",
        "name": "Re-Discovery Components Form",
        "type": "json-forms",
        "location": "/bundles/json_forms/Re-Discovery Components Form.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "61a8f96c972d5600e3de8552",
        "name": "Create prebuilt - Get formData",
        "type": "transformation",
        "location": "/bundles/transformations/Create prebuilt - Get formData.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "5f287844d76d950aa5f59814",
        "name": "Create prebuilt - Fix packagejson",
        "type": "transformation",
        "location": "/bundles/transformations/Create prebuilt - Fix packagejson.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "6197e2fcda174d24c34d36dc",
        "name": " Create prebuilt - Format Publish",
        "type": "transformation",
        "location": "/bundles/transformations/ Create prebuilt - Format Publish.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "61aa625a972d5600e3de8555",
        "name": "Create Prebuilt - Determine Components",
        "type": "transformation",
        "location": "/bundles/transformations/Create Prebuilt - Determine Components.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "61aa46e4972d5600e3de8554",
        "name": "Create prebuilt - merge discovery data",
        "type": "transformation",
        "location": "/bundles/transformations/Create prebuilt - merge discovery data.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "619d03ad69bd2d6d0005f64d",
        "name": "Create prebuilt - Edit components input",
        "type": "transformation",
        "location": "/bundles/transformations/Create prebuilt - Edit components input.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "6210015da161ae00ef6164b4",
        "name": "convertArtifactInfoToForm",
        "type": "transformation",
        "location": "/bundles/transformations/convertArtifactInfoToForm.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "6239fdc572a2f101008f5cf1",
        "name": "Create prebuilt - convertFormOutputToDiscoveryFormat",
        "type": "transformation",
        "location": "/bundles/transformations/Create prebuilt - convertFormOutputToDiscoveryFormat.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "605b870f21c795008dc26119",
        "name": "createArtifactForPublish",
        "type": "transformation",
        "location": "/bundles/transformations/createArtifactForPublish.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "605b86f821c795008dc26118",
        "name": "mergeFormWithDiscovery",
        "type": "transformation",
        "location": "/bundles/transformations/mergeFormWithDiscovery.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "621002baa161ae00ef6164b5",
        "name": "translateSchemaPushBundles",
        "type": "transformation",
        "location": "/bundles/transformations/translateSchemaPushBundles.json",
        "properties": {
          "entryPoint": false
        }
      }
    ]
  },
  "bundles": [
    {
      "type": "workflow",
      "data": {
        "canvasVersion": 2,
        "created": "2021-12-07T22:13:38.175Z",
        "createdVersion": "5.40.5-2021.1.35.0",
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "description": "",
        "errorHandler": null,
        "font_size": 12,
        "inputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "$id": "formData",
              "type": "object",
              "properties": {
                "scope": {
                  "type": "string",
                  "examples": [
                    "@acme"
                  ]
                },
                "prebuiltName": {
                  "type": "string",
                  "examples": [
                    "Example Prebuilt"
                  ]
                },
                "prebuiltDescription": {
                  "type": "string",
                  "default": "",
                  "examples": [
                    "This prebuilt will accomplish a particular use case"
                  ]
                },
                "readme": {
                  "type": "string",
                  "examples": [
                    "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->  <!-- Update the below line with your Pre-Built name --> # Pre-Built Name  <!-- Leave TOC intact unless you've added or removed headers --> ## Table of Contents  * [Overview](#overview) * [Installation Prerequisites](#installation-prerequisites) * [Requirements](#requirements) * [Features](#features) * [Future Enhancements](#future-enhancements) * [How to Install](#how-to-install) * [How to Run](#how-to-run) * [Additional Information](#additional-information)  ## Overview  <!-- Write a few sentences about the Pre-Built and explain the use case(s) --> <!-- Avoid using the word Artifact%2E Please use Pre-Built, Pre-Built Transformation or Pre-Built Automation --> <!-- Ex%2E: The Migration Wizard enables IAP users to conveniently move their automation use cases between different IAP environments --> <!-- (e%2Eg%2E from Dev to Pre-Production or from Lab to Production)%2E -->  <!-- Workflow(s) Image Placeholder - TO BE ADDED DIRECTLY TO GitLab --> <!-- REPLACE COMMENT BELOW WITH IMAGE OF YOUR MAIN WORKFLOW --> <!-- <table><tr><td>   <img src=\"./images/workflow.png\" alt=\"workflow\" width=\"800px\"> </td></tr></table> --> <!-- REPLACE COMMENT ABOVE WITH IMAGE OF YOUR MAIN WORKFLOW -->  <!-- ADD ESTIMATED RUN TIME HERE --> <!-- e%2Eg%2E Estimated Run Time: 34 min%2E --> _Estimated Run Time_:  ## Installation Prerequisites  Users must satisfy the following pre-requisites:  <!-- Include any other required apps or adapters in this list --> <!-- Ex%2E: EC2 Adapter --> * Itential Automation Platform   * `^2020%2Ex%2Ex`  ## Requirements  This Pre-Built requires the following:  <!-- Unordered list highlighting the requirements of the Pre-Built --> <!-- EXAMPLE --> <!-- * cisco ios device --> <!-- * Ansible or NSO (with F5 NED) * -->  ## Features  The main benefits and features of the Pre-Built are outlined below%2E  <!-- Unordered list highlighting the most exciting features of the Pre-Built --> <!-- EXAMPLE --> <!-- * Automatically checks for device type --> <!-- * Displays dry-run to user (asking for confirmation) prior to pushing config to the device --> <!-- * Verifies downloaded file integrity (using md5), will try to download again if failed -->   ## Future Enhancements  <!-- OPTIONAL - Mention if the Pre-Built will be enhanced with additional features on the road map --> <!-- Ex%2E: This Pre-Built would support Cisco XR and F5 devices -->  ## How to Install  To install the Pre-Built:  * Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the Pre-Built%2E  * The Pre-Built can be installed from within App-Admin_Essential%2E Simply search for the name of your desired Pre-Built and click the install button (as shown below)%2E  <!-- REPLACE BELOW WITH IMAGE OF YOUR PUBLISHED PRE-BUILT --> <!-- <table><tr><td>   <img src=\"./images/install.png\" alt=\"install\" width=\"600px\"> </td></tr></table> --> <!-- REPLACE ABOVE WITH IMAGE OF YOUR PUBLISHED PRE-BUILT -->  <!-- OPTIONAL - Explain if external components are required outside of IAP --> <!-- Ex%2E: The Ansible roles required for this Pre-Built can be found in the repository located at https://gitlab%2Ecom/itentialopensource/pre-built-automations/hello-world -->  ## How to Run  Use the following to run the Pre-Built:  <!-- Explain the main entrypoint(s) for this Pre-Built: Automation Catalog item, Workflow, Postman, etc%2E -->  ## Additional Information  Please use your Itential Customer Success account if you need support when using this Pre-Built%2E"
                  ]
                },
                "zeroTouch": {
                  "type": "boolean",
                  "examples": [
                    true,
                    false
                  ]
                },
                "license": {
                  "type": "string",
                  "default": "Apache 2%2E0",
                  "examples": [
                    "Apache 2%2E0"
                  ]
                },
                "contributor": {
                  "type": "string",
                  "examples": [
                    "John Smith"
                  ]
                },
                "categories": {
                  "type": "array",
                  "default": []
                },
                "keywords": {
                  "type": "array",
                  "default": []
                },
                "operationsManagerAutomations": {
                  "type": "array",
                  "default": []
                },
                "automationCatalogs": {
                  "type": "array",
                  "default": []
                },
                "automationWorkflows": {
                  "type": "array",
                  "default": []
                }
              },
              "required": []
            }
          },
          "required": [
            "formData"
          ]
        },
        "lastUpdatedVersion": "3.61.22-2021.2.100.0",
        "last_updated": "2022-12-02T16:01:37.399Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "name": "Prebuilt Wizard",
        "outputData": {},
        "outputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "$id": "formData",
              "type": "object",
              "properties": {
                "scope": {
                  "type": "string",
                  "examples": [
                    "@acme"
                  ]
                },
                "prebuiltName": {
                  "type": "string",
                  "examples": [
                    "Example Prebuilt"
                  ]
                },
                "prebuiltDescription": {
                  "type": "string",
                  "default": "",
                  "examples": [
                    "This prebuilt will accomplish a particular use case"
                  ]
                },
                "readme": {
                  "type": "string",
                  "examples": [
                    "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->  <!-- Update the below line with your Pre-Built name --> # Pre-Built Name  <!-- Leave TOC intact unless you've added or removed headers --> ## Table of Contents  * [Overview](#overview) * [Installation Prerequisites](#installation-prerequisites) * [Requirements](#requirements) * [Features](#features) * [Future Enhancements](#future-enhancements) * [How to Install](#how-to-install) * [How to Run](#how-to-run) * [Additional Information](#additional-information)  ## Overview  <!-- Write a few sentences about the Pre-Built and explain the use case(s) --> <!-- Avoid using the word Artifact%2E Please use Pre-Built, Pre-Built Transformation or Pre-Built Automation --> <!-- Ex%2E: The Migration Wizard enables IAP users to conveniently move their automation use cases between different IAP environments --> <!-- (e%2Eg%2E from Dev to Pre-Production or from Lab to Production)%2E -->  <!-- Workflow(s) Image Placeholder - TO BE ADDED DIRECTLY TO GitLab --> <!-- REPLACE COMMENT BELOW WITH IMAGE OF YOUR MAIN WORKFLOW --> <!-- <table><tr><td>   <img src=\"./images/workflow.png\" alt=\"workflow\" width=\"800px\"> </td></tr></table> --> <!-- REPLACE COMMENT ABOVE WITH IMAGE OF YOUR MAIN WORKFLOW -->  <!-- ADD ESTIMATED RUN TIME HERE --> <!-- e%2Eg%2E Estimated Run Time: 34 min%2E --> _Estimated Run Time_:  ## Installation Prerequisites  Users must satisfy the following pre-requisites:  <!-- Include any other required apps or adapters in this list --> <!-- Ex%2E: EC2 Adapter --> * Itential Automation Platform   * `^2020%2Ex%2Ex`  ## Requirements  This Pre-Built requires the following:  <!-- Unordered list highlighting the requirements of the Pre-Built --> <!-- EXAMPLE --> <!-- * cisco ios device --> <!-- * Ansible or NSO (with F5 NED) * -->  ## Features  The main benefits and features of the Pre-Built are outlined below%2E  <!-- Unordered list highlighting the most exciting features of the Pre-Built --> <!-- EXAMPLE --> <!-- * Automatically checks for device type --> <!-- * Displays dry-run to user (asking for confirmation) prior to pushing config to the device --> <!-- * Verifies downloaded file integrity (using md5), will try to download again if failed -->   ## Future Enhancements  <!-- OPTIONAL - Mention if the Pre-Built will be enhanced with additional features on the road map --> <!-- Ex%2E: This Pre-Built would support Cisco XR and F5 devices -->  ## How to Install  To install the Pre-Built:  * Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the Pre-Built%2E  * The Pre-Built can be installed from within App-Admin_Essential%2E Simply search for the name of your desired Pre-Built and click the install button (as shown below)%2E  <!-- REPLACE BELOW WITH IMAGE OF YOUR PUBLISHED PRE-BUILT --> <!-- <table><tr><td>   <img src=\"./images/install.png\" alt=\"install\" width=\"600px\"> </td></tr></table> --> <!-- REPLACE ABOVE WITH IMAGE OF YOUR PUBLISHED PRE-BUILT -->  <!-- OPTIONAL - Explain if external components are required outside of IAP --> <!-- Ex%2E: The Ansible roles required for this Pre-Built can be found in the repository located at https://gitlab%2Ecom/itentialopensource/pre-built-automations/hello-world -->  ## How to Run  Use the following to run the Pre-Built:  <!-- Explain the main entrypoint(s) for this Pre-Built: Automation Catalog item, Workflow, Postman, etc%2E -->  ## Additional Information  Please use your Itential Customer Success account if you need support when using this Pre-Built%2E"
                  ]
                },
                "zeroTouch": {
                  "type": "boolean",
                  "examples": [
                    true,
                    false
                  ]
                },
                "license": {
                  "type": "string",
                  "default": "Apache 2%2E0",
                  "examples": [
                    "Apache 2%2E0"
                  ]
                },
                "contributor": {
                  "type": "string",
                  "examples": [
                    "John Smith"
                  ]
                },
                "categories": {
                  "type": "array",
                  "default": []
                },
                "keywords": {
                  "type": "array",
                  "default": []
                },
                "operationsManagerAutomations": {
                  "type": "array",
                  "default": []
                },
                "automationCatalogs": {
                  "type": "array",
                  "default": []
                },
                "automationWorkflows": {
                  "type": "array",
                  "default": []
                }
              },
              "required": []
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            }
          }
        },
        "preAutomationTime": 0,
        "sla": 0,
        "tasks": {
          "5054": {
            "name": "createPublishedArtifactFromScratch",
            "summary": "Creates artifact for publishing without DB calls",
            "description": "Creates JSON object containing artifact file structure and all associated data from input tasks without touching database",
            "groups": [],
            "canvasName": "createPublishedArtifactFromScratch",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "artifactData": "$var.a121.artifactData",
                "modules": "$var.a121.modules",
                "packageJson": "$var.a121.defaultPackageJson"
              },
              "outgoing": {
                "callback": ""
              },
              "decorators": []
            },
            "deprecated": false,
            "actor": "Pronghorn",
            "gridCoordinate": {
              "x": 1,
              "y": 11
            },
            "x": 0.125,
            "y": 2.75
          },
          "7365": {
            "name": "ViewData",
            "summary": "View Data",
            "description": "Displays a message and runtime data to an operator. This can be used to request a decision, or used for acknowledgement only.",
            "groups": [],
            "canvasName": "ViewData",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Error Encountered",
                "message": "An error was thrown while discovering the different components of the automation. The error is shown below.",
                "body": "$var.837c.discovery",
                "variables": {},
                "btn_success": "End Automation",
                "btn_failure": ""
              },
              "outgoing": {},
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "deprecated": false,
            "gridCoordinate": {
              "x": 0,
              "y": 3
            },
            "x": 0,
            "y": 0.75
          },
          "8867": {
            "name": "ViewData",
            "summary": "View Invalid Components",
            "description": "View Invalid Components and transition to end.",
            "groups": [],
            "canvasName": "ViewData",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Invalid Components Discovered",
                "message": "Invalid components were discovered during the discovery phase. The invalid components are shown below.",
                "body": "$var.f58a.return_data",
                "variables": {},
                "btn_success": "End Automation",
                "btn_failure": ""
              },
              "outgoing": {},
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "deprecated": false,
            "gridCoordinate": {
              "x": 0,
              "y": 6
            },
            "x": 0,
            "y": 1.5
          },
          "16fd": {
            "name": "makeData",
            "summary": "Convert input into a different data type",
            "description": "This task takes an input and converts it to a different data type. For example, converting a number into a string.",
            "groups": [],
            "canvasName": "makeData",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "input": "/prebuilts/<!id!>/export",
                "outputType": "string",
                "variables": "$var.d4ae.object"
              },
              "outgoing": {
                "output": ""
              },
              "decorators": []
            },
            "deprecated": false,
            "gridCoordinate": {
              "x": 1,
              "y": 15
            },
            "x": 0.125,
            "y": 3.75,
            "actor": "Pronghorn"
          },
          "28c3": {
            "name": "downloadArtifact",
            "summary": "Download Artifact",
            "description": "Download Artifact",
            "groups": [],
            "canvasName": "downloadArtifact",
            "location": "Application",
            "app": "AppArtifacts",
            "displayName": "AppArtifacts",
            "type": "manual",
            "variables": {
              "incoming": {
                "artifactLink": "$var.16fd.output",
                "gitLink": ""
              },
              "outgoing": {},
              "decorators": []
            },
            "view": "/app_artifacts/views/tasks/downloadArtifact",
            "deprecated": false,
            "gridCoordinate": {
              "x": 1,
              "y": 18
            },
            "x": 0.125,
            "y": 4.5
          },
          "workflow_end": {
            "groups": [],
            "name": "workflow_end",
            "gridCoordinate": {
              "x": 1,
              "y": 20
            },
            "x": 0.125,
            "y": 5
          },
          "854c": {
            "name": "decision",
            "summary": "Decide branch path",
            "description": "Decide branch path",
            "groups": [],
            "canvasName": "decision",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "decisionArray": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "variable": "zeroTouch",
                          "task": "fb30"
                        },
                        "operand_2": {
                          "variable": "true",
                          "task": "static"
                        },
                        "operator": "=="
                      }
                    ],
                    "taskId": "workflow_end"
                  },
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "variable": "executeManualTasks",
                          "task": "fb30"
                        },
                        "operand_2": {
                          "variable": "false",
                          "task": "static"
                        },
                        "operator": "=="
                      }
                    ],
                    "taskId": "28c3"
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "deprecated": false,
            "gridCoordinate": {
              "x": 1,
              "y": 17
            },
            "x": 0.125,
            "y": 4.25
          },
          "d4ae": {
            "name": "setObjectKey",
            "summary": "Set Object Key",
            "description": "Set an object key",
            "groups": [],
            "canvasName": "setObjectKey",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": {},
                "path": [
                  "id"
                ],
                "value": "$var.9dbe.AEArtifactID"
              },
              "outgoing": {
                "object": ""
              },
              "decorators": []
            },
            "deprecated": false,
            "gridCoordinate": {
              "x": 1,
              "y": 14
            },
            "x": 0.125,
            "y": 3.5,
            "actor": "Pronghorn"
          },
          "e7d2": {
            "name": "ViewData",
            "summary": "View Pre-Built creation Error",
            "description": "error",
            "groups": [],
            "canvasName": "ViewData",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Error creating pre-built.",
                "message": "An error was thrown while creating the prebuilt. Press 'End Automation' to terminate the job. The error is shown below.",
                "body": "$var.5054.callback",
                "variables": {},
                "btn_success": "End Automation",
                "btn_failure": ""
              },
              "outgoing": {},
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "deprecated": false,
            "gridCoordinate": {
              "x": 0,
              "y": 11
            },
            "x": 0,
            "y": 2.75
          },
          "3b18": {
            "name": "decision",
            "summary": "Decide branch path",
            "description": "Decide branch path",
            "groups": [],
            "canvasName": "decision",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "decisionArray": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "variable": "zeroTouch",
                          "task": "fb30"
                        },
                        "operand_2": {
                          "variable": "false",
                          "task": "static"
                        },
                        "operator": "=="
                      }
                    ],
                    "taskId": "7e43"
                  },
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "variable": "",
                          "task": "static"
                        },
                        "operand_2": {
                          "variable": "",
                          "task": "static"
                        },
                        "operator": "=="
                      }
                    ],
                    "taskId": "62db"
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "deprecated": false,
            "gridCoordinate": {
              "x": 1,
              "y": 8
            },
            "x": 0.125,
            "y": 2
          },
          "fb30": {
            "groups": [],
            "name": "transformation",
            "summary": "Parse Form Data",
            "description": "Perform a JSON Transformation using the JST library.",
            "canvasName": "transformation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "61a8f96c972d5600e3de8552",
                "variableMap": {
                  "formData": "$var.job.formData"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "automationWorkflows": "",
                "automationCatalogs": "",
                "operationsManagerOperations": "",
                "keywords": "",
                "categories": "",
                "contributor": "",
                "license": "",
                "zeroTouch": "",
                "readme": "",
                "prebuiltDescription": "",
                "prebuiltName": "",
                "scope": ""
              }
            },
            "deprecated": false,
            "task_name": "Create prebuilt - Get formData",
            "gridCoordinate": {
              "x": 1,
              "y": 1
            },
            "x": 0.125,
            "y": 0.25
          },
          "9dbe": {
            "name": "addArtifactToAdminEssentials",
            "summary": "Adds an artifact to AE via direct mongo injection",
            "description": "Adds an artifact created from a published artifact to admin essentials",
            "groups": [],
            "canvasName": "addArtifactToAdminEssentials",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "artifactBundle": "$var.7a49.outgoing"
              },
              "outgoing": {
                "AEArtifactID": ""
              },
              "decorators": []
            },
            "deprecated": false,
            "actor": "Pronghorn",
            "gridCoordinate": {
              "x": 1,
              "y": 13
            },
            "x": 0.125,
            "y": 3.25
          },
          "7a49": {
            "name": "transformation",
            "summary": "JSON Transformation",
            "description": "Perform a JSON Transformation using the JST library.",
            "groups": [],
            "canvasName": "transformation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "5f287844d76d950aa5f59814",
                "variableMap": {
                  "incoming": "$var.5054.callback"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "outgoing": ""
              }
            },
            "deprecated": false,
            "task_name": "Create prebuilt - Fix packagejson",
            "gridCoordinate": {
              "x": 1,
              "y": 12
            },
            "x": 0.125,
            "y": 3
          },
          "a121": {
            "name": "transformation",
            "summary": "Format for Publish",
            "description": "Perform a JSON Transformation using the JST library.",
            "groups": [],
            "canvasName": "transformation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6197e2fcda174d24c34d36dc",
                "variableMap": {
                  "scope": "$var.fb30.scope",
                  "componentsFormSelection": "$var.62db.componentInput",
                  "discoverComponentsOutput": "$var.837c.discovery",
                  "keywords": "$var.fb30.keywords",
                  "categories": "$var.fb30.categories",
                  "license": "$var.fb30.license",
                  "readme": "$var.fb30.readme",
                  "contributor": "$var.fb30.contributor",
                  "description": "$var.fb30.prebuiltDescription",
                  "name": "$var.fb30.prebuiltName"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "defaultPackageJson": "",
                "modules": "",
                "artifactData": ""
              }
            },
            "deprecated": false,
            "task_name": " Create prebuilt - Format Publish",
            "gridCoordinate": {
              "x": 1,
              "y": 10
            },
            "x": 0.125,
            "y": 2.5
          },
          "62db": {
            "name": "transformation",
            "summary": "Determine Components for Publish",
            "description": "Perform a JSON Transformation using the JST library.",
            "groups": [],
            "canvasName": "transformation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "61aa625a972d5600e3de8555",
                "variableMap": {
                  "originalComponents": "$var.c09c.componentEditorFormInput",
                  "formData": "$var.7e43.export"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "componentInput": ""
              }
            },
            "deprecated": false,
            "task_name": "Create Prebuilt - Determine Components",
            "gridCoordinate": {
              "x": 1,
              "y": 9
            },
            "x": 0.125,
            "y": 2.25
          },
          "7e43": {
            "name": "ShowJsonForm",
            "summary": "Show Json Form",
            "description": "Show Json Form",
            "groups": [],
            "canvasName": "ShowJsonForm",
            "location": "Application",
            "app": "JsonForms",
            "displayName": "JsonForms",
            "type": "manual",
            "variables": {
              "incoming": {
                "form_id": "Create prebuilt - Edit discovered components",
                "instance_data": "$var.c09c.componentEditorFormInput"
              },
              "outgoing": {
                "export": ""
              },
              "decorators": []
            },
            "view": "/json-forms/task/ShowJsonForm",
            "deprecated": false,
            "gridCoordinate": {
              "x": 2,
              "y": 8
            },
            "x": 0.25,
            "y": 2
          },
          "aded": {
            "name": "arrayLength",
            "summary": "Get invalid components length",
            "description": "Get invalid components length",
            "groups": [],
            "canvasName": "length",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.f58a.return_data"
              },
              "outgoing": {
                "length": ""
              },
              "decorators": []
            },
            "deprecated": false,
            "actor": "Pronghorn",
            "gridCoordinate": {
              "x": 1,
              "y": 5
            },
            "x": 0.125,
            "y": 1.25
          },
          "f58a": {
            "name": "query",
            "summary": "Query invalid components",
            "description": "Query invalid components",
            "groups": [],
            "canvasName": "query",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": "false",
                "query": "invalidComponents",
                "obj": "$var.837c.discovery"
              },
              "outgoing": {
                "return_data": ""
              },
              "decorators": []
            },
            "deprecated": false,
            "gridCoordinate": {
              "x": 1,
              "y": 4
            },
            "x": 0.125,
            "y": 1
          },
          "837c": {
            "name": "componentDiscovery",
            "summary": "Performs discovery on Automation Catalogs or Workflows",
            "description": "Discovers any referenced components within automation catalogs",
            "groups": [],
            "canvasName": "componentDiscovery",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "entryPoint": "$var.76c8.discoveryData"
              },
              "outgoing": {
                "discovery": ""
              },
              "decorators": []
            },
            "deprecated": false,
            "actor": "Pronghorn",
            "gridCoordinate": {
              "x": 1,
              "y": 3
            },
            "x": 0.125,
            "y": 0.75
          },
          "957d": {
            "name": "decision",
            "summary": "Decide branch path",
            "description": "Decide branch path",
            "groups": [],
            "canvasName": "decision",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "decisionArray": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "variable": "length",
                          "task": "aded"
                        },
                        "operand_2": {
                          "variable": "0",
                          "task": "static"
                        },
                        "operator": "=="
                      }
                    ],
                    "taskId": "c09c"
                  },
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "variable": "return_data",
                          "task": "f58a"
                        },
                        "operand_2": {
                          "variable": "0",
                          "task": "static"
                        },
                        "operator": "=="
                      }
                    ],
                    "taskId": "8867"
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "deprecated": false,
            "gridCoordinate": {
              "x": 1,
              "y": 6
            },
            "x": 0.125,
            "y": 1.5
          },
          "76c8": {
            "name": "transformation",
            "summary": "Create Discovery Object",
            "description": "Perform a JSON Transformation using the JST library.",
            "groups": [],
            "canvasName": "transformation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "61aa46e4972d5600e3de8554",
                "variableMap": {
                  "catalogAutomation": "$var.fb30.automationCatalogs",
                  "operationsAutomation": "$var.fb30.operationsManagerOperations",
                  "workflow": "$var.fb30.automationWorkflows"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "discoveryData": ""
              }
            },
            "deprecated": false,
            "task_name": "Create prebuilt - merge discovery data",
            "gridCoordinate": {
              "x": 1,
              "y": 2
            },
            "x": 0.125,
            "y": 0.5
          },
          "34a8": {
            "name": "ViewData",
            "summary": "Error Adding Prebuilt to Admin Essentials",
            "description": "Displays a message and runtime data to an operator. This can be used to request a decision, or used for acknowledgement only.",
            "groups": [],
            "canvasName": "ViewData",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Error Adding Prebuilt to Admin Essentials",
                "message": "An error was thrown while adding the prebuilt to Admin Essentials. Press 'End Automation' to terminate the job. The error is shown below.",
                "body": "$var.9dbe.AEArtifactID",
                "variables": {},
                "btn_success": "End Automation",
                "btn_failure": ""
              },
              "outgoing": {},
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "deprecated": false,
            "gridCoordinate": {
              "x": 0,
              "y": 14
            },
            "x": 0,
            "y": 3.5
          },
          "c09c": {
            "name": "transformation",
            "summary": "Components",
            "description": "Perform a JSON Transformation using the JST library.",
            "groups": [],
            "canvasName": "transformation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "619d03ad69bd2d6d0005f64d",
                "variableMap": {
                  "componentDiscoveryOutput": "$var.837c.discovery"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "componentEditorFormInput": ""
              }
            },
            "deprecated": false,
            "task_name": "Create prebuilt - Edit components input",
            "gridCoordinate": {
              "x": 1,
              "y": 7
            },
            "x": 0.125,
            "y": 1.75
          },
          "workflow_start": {
            "groups": [],
            "name": "workflow_start",
            "x": 0,
            "y": 0,
            "gridCoordinate": {
              "x": 1,
              "y": 0
            }
          }
        },
        "transitions": {
          "5054": {
            "7a49": {
              "type": "standard",
              "state": "success"
            },
            "e7d2": {
              "state": "error",
              "type": "standard"
            }
          },
          "7365": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "8867": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "16fd": {
            "854c": {
              "type": "standard",
              "state": "success"
            }
          },
          "28c3": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "854c": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "28c3": {
              "state": "success",
              "type": "standard"
            }
          },
          "d4ae": {
            "16fd": {
              "type": "standard",
              "state": "success"
            }
          },
          "e7d2": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "3b18": {
            "62db": {
              "type": "standard",
              "state": "success"
            },
            "7e43": {
              "state": "success",
              "type": "standard"
            }
          },
          "fb30": {
            "76c8": {
              "type": "standard",
              "state": "success"
            }
          },
          "9dbe": {
            "d4ae": {
              "type": "standard",
              "state": "success"
            },
            "34a8": {
              "state": "error",
              "type": "standard"
            }
          },
          "7a49": {
            "9dbe": {
              "type": "standard",
              "state": "success"
            }
          },
          "a121": {
            "5054": {
              "type": "standard",
              "state": "success"
            }
          },
          "62db": {
            "a121": {
              "type": "standard",
              "state": "success"
            }
          },
          "7e43": {
            "62db": {
              "type": "standard",
              "state": "success"
            }
          },
          "aded": {
            "957d": {
              "type": "standard",
              "state": "success"
            }
          },
          "f58a": {
            "aded": {
              "type": "standard",
              "state": "success"
            }
          },
          "837c": {
            "7365": {
              "state": "error",
              "type": "standard"
            },
            "f58a": {
              "type": "standard",
              "state": "success"
            }
          },
          "957d": {
            "8867": {
              "state": "success",
              "type": "standard"
            },
            "c09c": {
              "state": "success",
              "type": "standard"
            }
          },
          "76c8": {
            "837c": {
              "type": "standard",
              "state": "success"
            }
          },
          "34a8": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "c09c": {
            "3b18": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "fb30": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "type": "automation",
        "tags": [],
        "groups": [],
        "migrationVersion": 1
      }
    },
    {
      "type": "workflow",
      "data": {
        "canvasVersion": 1,
        "created": "2022-03-21T19:44:38.709Z",
        "createdVersion": "5.40.5-2021.1.69.0",
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "description": null,
        "font_size": 12,
        "inputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "title": "variables",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "formData"
          ]
        },
        "lastUpdatedVersion": "3.61.22-2021.2.100.0",
        "last_updated": "2022-12-02T16:01:37.401Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "name": "Prebuilt Wizard Re-Discover",
        "outputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "title": "variables",
              "type": "object",
              "properties": {}
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "modules": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "package_id": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tasks": {
          "5709": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "modules",
                "value": [
                  {
                    "package_id": "@itential/app-automation_catalog",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-ag_manager",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-admin_essentials",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-golden_services",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-form_builder",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-artifacts",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-automation_studio",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-json_forms",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-configuration_manager",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-golden_config",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/adapter-local_aaa",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-mop",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-nso_manager",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-policy_manager",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-service_management",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/search",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-service_catalog",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-smart_template",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-task_worker",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-template_builder",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/tags",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/adapter-mongo",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/adapter-redis",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-workflow_engine",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-workflow_builder",
                    "version": ""
                  }
                ]
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> <span class='highlight-string'>Variable</span>"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> <span class='highlight-string'>variable</span> by Job ID and assign it a value."
              },
              {
                "key": "canvasName",
                "highlightString": "new<span class='highlight-string'>Variable</span>"
              }
            ],
            "groups": [],
            "x": 0.946046511627907,
            "y": 0.5369897959183674
          },
          "5979": {
            "name": "componentDiscovery",
            "canvasName": "componentDiscovery",
            "summary": "Performs discovery on Automation Catalogs or Workflows",
            "description": "Discovers any referenced components within automation catalogs",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "entryPoint": "$var.b668.discoveryEntryPoint"
              },
              "outgoing": {
                "discovery": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.3391384051329056,
            "y": 0.520702634880803,
            "scheduled": false
          },
          "7393": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "JSON Transformation",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "605b86f821c795008dc26118",
                "variableMap": {
                  "formOutput": "$var.6c56.export",
                  "discoveryOutput": "$var.5979.discovery"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "formInput": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.46190476190476193,
            "y": 0.5228136882129277,
            "task_name": "mergeFormWithDiscoveryGitHub",
            "retrySettings": null
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.617363344051447,
            "y": 0.5403899721448467
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 1.4472960586617782,
            "y": 0.5244667503136763
          },
          "5dec": {
            "name": "gatherInternalGET",
            "canvasName": "gatherInternalGET",
            "summary": "Gather Selected Artifact Info",
            "description": "Gather Selected Artifact Info",
            "location": "Application",
            "app": "AppArtifacts",
            "displayName": "AppArtifacts",
            "type": "manual",
            "variables": {
              "incoming": {
                "internalURL": "$var.9cfa.output"
              },
              "outgoing": {
                "responseBody": null
              },
              "error": "",
              "decorators": []
            },
            "view": "/app_artifacts/views/tasks/gatherInternalGET",
            "deprecated": false,
            "groups": [],
            "x": -0.409967845659164,
            "y": 0.5389972144846796,
            "scheduled": false
          },
          "76d1": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "convertArtifactInfoToForm",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6210015da161ae00ef6164b4",
                "variableMap": {
                  "input": "$var.d5d.return_data"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "output": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": -0.20348304307974335,
            "y": 0.5294855708908407,
            "task_name": "convertArtifactInfoToFormGithub",
            "retrySettings": null
          },
          "b668": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "onvertFormOutputToDiscoveryFormat",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6239fdc572a2f101008f5cf1",
                "variableMap": {
                  "formOutput": "$var.6c56.export"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "discoveryEntryPoint": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.2153987167736022,
            "y": 0.5232120451693852,
            "task_name": "Create prebuilt - convertFormOutputToDiscoveryFormat",
            "retrySettings": null
          },
          "bd16": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Confirm",
            "description": "Confirm",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Confirm Artifact Update",
                "message": "Please confirm correctness of the up to date list of components presented by the previous task.",
                "body": "Confirm button will update the list of components inside the Admin Essentials application.<br>Retry will revert to the previous task, so you can pick and choose what documents you may want to omit before discovery.",
                "variables": {},
                "btn_success": "CONFIRM",
                "btn_failure": "RETRY"
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "deprecated": false,
            "groups": [],
            "x": 0.7085242896425298,
            "y": 0.5244667503136763,
            "scheduled": false
          },
          "2b81": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Failed Discovery",
            "description": "View data in a pretty format",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Failed Discovery",
                "message": "Some selected component(s) caused the discovery to fail.<br>Please try again",
                "body": "",
                "variables": {},
                "btn_success": "Try Again",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "deprecated": false,
            "groups": [],
            "x": 0.3400549954170486,
            "y": 0.698870765370138,
            "scheduled": false
          },
          "8ed7": {
            "name": "createPublishedArtifactFromScratch",
            "canvasName": "createPublishedArtifactFromScratch",
            "summary": "Creates artifact for publishing without DB calls",
            "description": "Creates JSON object containing artifact file structure and all associated data from input tasks without touching database",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "artifactData": "$var.eb15.mata",
                "modules": "$var.job.modules",
                "packageJson": "$var.eb15.packageJSON"
              },
              "outgoing": {
                "callback": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.1209899175068745,
            "y": 0.5269761606022585,
            "scheduled": false
          },
          "eb15": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "JSON Transformation",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "605b870f21c795008dc26119",
                "variableMap": {
                  "AEartifactInfo": "$var.d5d.return_data",
                  "formOutput": "$var.a078.export",
                  "discovery": "$var.5979.discovery"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "mata": null,
                "packageJSON": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.8221814848762603,
            "y": 0.5181932245922208,
            "task_name": "createArtifactForPublishGitHub",
            "retrySettings": null
          },
          "cd71": {
            "name": "replaceArtifactAdminEssentials",
            "canvasName": "replaceArtifactAdminEssentials",
            "summary": "Replaces an artifact in AE via direct mongo injection",
            "description": "Replaces an artifact created from a published artifact in admin essentials",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "artifactBundle": "$var.8ed7.callback"
              },
              "outgoing": {
                "modifiedCount": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.3171402383134738,
            "y": 0.5319949811794228,
            "scheduled": false
          },
          "6c56": {
            "name": "ShowJsonForm",
            "canvasName": "ShowJsonForm",
            "summary": "Show Current Components",
            "description": "Show Current Components",
            "location": "Application",
            "app": "JsonForms",
            "displayName": "JsonForms",
            "type": "manual",
            "variables": {
              "incoming": {
                "form_id": "Re-Discovery Components Form",
                "instance_data": "$var.f80d.componentEditorFormInput"
              },
              "outgoing": {
                "export": null
              },
              "error": "",
              "decorators": []
            },
            "view": "/json-forms/task/ShowJsonForm",
            "deprecated": false,
            "groups": [],
            "x": 0.1145737855178735,
            "y": 0.533249686323714,
            "scheduled": false
          },
          "a078": {
            "name": "ShowJsonForm",
            "canvasName": "ShowJsonForm",
            "summary": "Show New Components",
            "description": "Show New Components",
            "location": "Application",
            "app": "JsonForms",
            "displayName": "JsonForms",
            "type": "manual",
            "variables": {
              "incoming": {
                "form_id": "Re-Discovery Components Form",
                "instance_data": "$var.7393.formInput"
              },
              "outgoing": {
                "export": null
              },
              "error": "",
              "decorators": []
            },
            "view": "/json-forms/task/ShowJsonForm",
            "deprecated": false,
            "groups": [],
            "x": 0.5957836846929423,
            "y": 0.5156838143036386,
            "scheduled": false
          },
          "f80d": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "translateSchemaPushBundles",
            "description": "Takes in the output of the componentDiscovery task in appartifacts and outputs a format that can be used in a form where the components can be edited.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "621002baa161ae00ef6164b5",
                "variableMap": {
                  "componentDiscoveryOutput": "$var.76d1.output"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "componentEditorFormInput": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": -0.02933088909257562,
            "y": 0.5257214554579673,
            "task_name": "translateSchemaPushBundles",
            "retrySettings": null
          },
          "9cfa": {
            "name": "makeData",
            "canvasName": "makeData",
            "summary": "Create endpoint",
            "description": "This task takes an input and converts it to a different data type. For example, converting a number into a string.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "input": "/prebuilts?&skip=0&order=1&sort=name&contains=<!prebuilt!>&containsField=name",
                "outputType": "string",
                "variables": "$var.job.formData"
              },
              "outgoing": {
                "output": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.5281350482315113,
            "y": 0.5431754874651811,
            "scheduled": false
          },
          "d5d": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query artifact data",
            "description": "Query artifact data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "results[0]",
                "obj": "$var.5dec.responseBody"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.3046623794212219,
            "y": 0.5376044568245125,
            "scheduled": false
          }
        },
        "transitions": {
          "5709": {
            "8ed7": {
              "type": "standard",
              "state": "success"
            }
          },
          "5979": {
            "7393": {
              "type": "standard",
              "state": "success"
            },
            "2b81": {
              "type": "standard",
              "state": "error"
            }
          },
          "6355": {},
          "7393": {
            "a078": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "9cfa": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "5dec": {
            "d5d": {
              "type": "standard",
              "state": "success"
            }
          },
          "76d1": {
            "f80d": {
              "type": "standard",
              "state": "success"
            }
          },
          "b668": {
            "5979": {
              "type": "standard",
              "state": "success"
            }
          },
          "bd16": {
            "5dec": {
              "type": "revert",
              "state": "failure"
            },
            "eb15": {
              "type": "standard",
              "state": "success"
            }
          },
          "2b81": {
            "5dec": {
              "type": "revert",
              "state": "success"
            }
          },
          "8ed7": {
            "cd71": {
              "type": "standard",
              "state": "success"
            }
          },
          "eb15": {
            "5709": {
              "type": "standard",
              "state": "success"
            }
          },
          "cd71": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "6c56": {
            "b668": {
              "type": "standard",
              "state": "success"
            }
          },
          "a078": {
            "bd16": {
              "type": "standard",
              "state": "success"
            }
          },
          "f80d": {
            "6c56": {
              "type": "standard",
              "state": "success"
            }
          },
          "9cfa": {
            "5dec": {
              "type": "standard",
              "state": "success"
            }
          },
          "d5d": {
            "76d1": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "type": "automation",
        "tags": [],
        "groups": [],
        "migrationVersion": 1
      }
    },
    {
      "type": "json-forms",
      "data": {
        "id": "61a8f2e224eb8400d5a5c068",
        "bindingSchema": {
          "properties": {
            "categories": {
              "items": {
                "properties": {}
              }
            },
            "keywords": {
              "items": {
                "properties": {}
              }
            },
            "operationsManagerAutomations": {
              "items": {
                "properties": {
                  "name": {
                    "binding:method": "GET",
                    "binding:link": {
                      "$ref": "/links",
                      "rel": "collection"
                    },
                    "binding:target": {
                      "propertyPointer": "/enum"
                    },
                    "binding:hyperSchema": {
                      "type": "object",
                      "base": "/operations-manager",
                      "links": [
                        {
                          "rel": "collection",
                          "href": "/automations",
                          "targetMediaType": "application/json",
                          "targetSchema": {
                            "$ref": "#"
                          },
                          "variables": []
                        }
                      ]
                    },
                    "binding:source": {
                      "propertyPointer": "/data",
                      "keyPointer": "/name"
                    }
                  }
                }
              }
            },
            "automationCatalogs": {
              "items": {
                "properties": {
                  "name": {
                    "binding:method": "GET",
                    "binding:link": {
                      "$ref": "/links",
                      "rel": "collection"
                    },
                    "binding:target": {
                      "propertyPointer": "/enum"
                    },
                    "binding:hyperSchema": {
                      "type": "object",
                      "base": "/automation_catalog",
                      "links": [
                        {
                          "rel": "collection",
                          "href": "/automations",
                          "targetMediaType": "application/json",
                          "targetSchema": {
                            "$ref": "#"
                          },
                          "variables": []
                        }
                      ]
                    },
                    "binding:source": {
                      "propertyPointer": "/list",
                      "keyPointer": "/name"
                    }
                  }
                }
              }
            },
            "automationWorkflows": {
              "items": {
                "properties": {
                  "name": {
                    "binding:method": "POST",
                    "binding:link": {
                      "$ref": "/links",
                      "rel": "collection"
                    },
                    "binding:body": {
                      "options": {
                        "skip": 0,
                        "limit": 0
                      }
                    },
                    "binding:target": {
                      "propertyPointer": "/enum"
                    },
                    "binding:hyperSchema": {
                      "type": "object",
                      "base": "/workflow_engine",
                      "links": [
                        {
                          "rel": "collection",
                          "href": "/workflows/search",
                          "targetMediaType": "application/json",
                          "targetSchema": {
                            "$ref": "#"
                          },
                          "variables": []
                        }
                      ]
                    },
                    "binding:source": {
                      "propertyPointer": "/results",
                      "keyPointer": "/name"
                    }
                  }
                }
              }
            }
          }
        },
        "created": "2021-12-02T16:22:58.716Z",
        "createdBy": "admin@pronghorn",
        "description": "",
        "lastUpdated": "2022-12-02T16:01:37.770Z",
        "lastUpdatedBy": "admin@pronghorn",
        "name": "Create Prebuilt Form",
        "schema": {
          "title": "Create Prebuilt Form",
          "description": "",
          "type": "object",
          "required": [
            "scope",
            "prebuiltName",
            "contributor"
          ],
          "properties": {
            "scope": {
              "type": "string",
              "title": "Scope",
              "_id": "/properties/scope",
              "description": "Add the scope of your pre-built. For example, our open source projects have a scope of @itentialopensource",
              "pattern": "@[a-z0-9-~][a-z0-9-._~]*$"
            },
            "prebuiltName": {
              "type": "string",
              "title": "Prebuilt Name",
              "_id": "/properties/prebuiltName",
              "description": "Name consist of one or more words, including numbers, separated by spaces only.",
              "pattern": "^(([a-zA-Z0-9]*))(\\s([a-zA-Z0-9]+))*$",
              "minLength": 1
            },
            "prebuiltDescription": {
              "type": "string",
              "title": "Prebuilt Description",
              "_id": "/properties/prebuiltDescription",
              "description": "Your prebuilt's description should provide information about what the prebuilt accomplishes. You will be able to see this description on the Admin Essentials page."
            },
            "license": {
              "type": "string",
              "title": "License",
              "_id": "/properties/license",
              "description": "(OPTIONAL) Provide a license:"
            },
            "contributor": {
              "type": "string",
              "title": "Contributor",
              "_id": "/properties/contributor",
              "description": "Please provide your name"
            },
            "readme": {
              "type": "string",
              "title": "Readme",
              "_id": "/properties/readme",
              "description": "This readme will be displayed on the Admin Essentials page. You can edit this placeholder to provide a description of what your prebuilt will accomplish.",
              "default": ""
            },
            "zeroTouch": {
              "type": "boolean",
              "title": "Zero Touch",
              "_id": "/properties/zeroTouch",
              "description": "",
              "default": true,
              "enum": [
                true,
                false
              ]
            },
            "categories": {
              "type": "array",
              "title": "Categories",
              "description": "Optionally enter a category to associate this prebuilt with",
              "items": {
                "type": "object",
                "required": [],
                "properties": {
                  "category": {
                    "type": "string",
                    "title": "Category",
                    "_id": "/properties/categories/items/properties/category",
                    "description": "Optionally select a category that this prebuilt fits into",
                    "enum": [
                      "Authentication",
                      "Cloud",
                      "Controller / Orchestration",
                      "DevOps",
                      "NetOps",
                      "Inventory",
                      "ITSM / Testing",
                      "Notification / Messaging",
                      "Persistence",
                      "SD-WAN",
                      "Security",
                      "Telemetry / Analytics",
                      "Utilities"
                    ]
                  }
                }
              }
            },
            "keywords": {
              "type": "array",
              "title": "Keywords",
              "description": "Optionally enter any keywords to associate with this prebuilt",
              "items": {
                "type": "object",
                "required": [],
                "properties": {
                  "keyword": {
                    "type": "string",
                    "title": "Keyword",
                    "_id": "/properties/keywords/items/properties/keyword",
                    "description": ""
                  }
                }
              }
            },
            "operationsManagerAutomations": {
              "type": "array",
              "title": "Operations Manager Automations",
              "description": "",
              "items": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "title": "Name",
                    "_id": "/properties/operationsManagerAutomations/items/properties/name",
                    "description": "",
                    "enum": []
                  }
                }
              }
            },
            "automationCatalogs": {
              "type": "array",
              "title": "Automation Catalogs",
              "description": "",
              "items": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "title": "Name",
                    "_id": "/properties/automationCatalogs/items/properties/name",
                    "description": "Automation Catalog Name",
                    "enum": []
                  }
                }
              }
            },
            "automationWorkflows": {
              "type": "array",
              "title": "Automation Workflows",
              "description": "",
              "items": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "title": "Name",
                    "_id": "/properties/automationWorkflows/items/properties/name",
                    "description": "Workflow Automation Name",
                    "enum": []
                  }
                }
              }
            }
          }
        },
        "struct": {
          "type": "array",
          "items": [
            {
              "nodeId": "71695525-c187-4f87-9a8c-6a40cd18aa5e",
              "type": "string",
              "title": "Scope",
              "description": "Add the scope of your pre-built. For example, our open source projects have a scope of @itentialopensource",
              "placeholder": "Enter text",
              "required": true,
              "readOnly": false,
              "binding": false,
              "rel": "item",
              "targetPointer": "/default",
              "pattern": "@[a-z0-9-~][a-z0-9-._~]*$"
            },
            {
              "nodeId": "0351d824-c65b-415c-8086-b9b7dae12c4e",
              "type": "string",
              "title": "Prebuilt Name",
              "description": "Name consist of one or more words, including numbers, separated by spaces only.",
              "placeholder": "Enter text",
              "required": true,
              "readOnly": false,
              "binding": false,
              "rel": "item",
              "targetPointer": "/default",
              "pattern": "^(([a-zA-Z0-9]*))(\\s([a-zA-Z0-9]+))*$",
              "minLength": 1
            },
            {
              "nodeId": "9556fe8f-65c4-4412-a0ef-f7d4132f9e2e",
              "type": "string",
              "widget": "textarea",
              "title": "Prebuilt Description",
              "description": "Your prebuilt's description should provide information about what the prebuilt accomplishes. You will be able to see this description on the Admin Essentials page.",
              "placeholder": "Enter a description about your prebuilt",
              "required": false
            },
            {
              "nodeId": "674ebd12-d227-41fa-a234-21003346aabf",
              "type": "string",
              "title": "License",
              "description": "(OPTIONAL) Provide a license:",
              "placeholder": "*By default Apache License 2.0 will be supplied",
              "required": false,
              "readOnly": false,
              "binding": false,
              "rel": "item",
              "targetPointer": "/default"
            },
            {
              "nodeId": "d213e136-92cc-4a7a-a9bb-980652f65771",
              "type": "string",
              "title": "Contributor",
              "description": "Please provide your name",
              "placeholder": "First name Last Name",
              "required": true,
              "readOnly": false,
              "binding": false,
              "rel": "item",
              "targetPointer": "/default"
            },
            {
              "nodeId": "d2af58ae-4759-48bb-a88c-84fd9704e374",
              "type": "string",
              "widget": "textarea",
              "title": "Readme",
              "description": "This readme will be displayed on the Admin Essentials page. You can edit this placeholder to provide a description of what your prebuilt will accomplish.",
              "placeholder": "",
              "required": false,
              "default": ""
            },
            {
              "nodeId": "bd33cf32-15c6-4a2a-a97e-677a16501fec",
              "type": "boolean",
              "title": "Zero Touch",
              "description": "",
              "default": true,
              "enum": [
                {
                  "id": "27c8a60a-5bbe-4dc0-9770-eb56be05715a",
                  "value": true
                },
                {
                  "id": "8b06e2b9-faff-4bc9-9fbe-0288762cf1cf",
                  "value": false
                }
              ]
            },
            {
              "nodeId": "fb3e4b63-60fe-455d-97f2-33ff0b544fbc",
              "type": "array",
              "description": "Optionally enter a category to associate this prebuilt with",
              "items": [
                {
                  "nodeId": "34fa1b97-b7fb-42e9-ba6d-51f348c42fac",
                  "type": "string",
                  "title": "Category",
                  "description": "Optionally select a category that this prebuilt fits into",
                  "placeholder": "Select an item",
                  "required": false,
                  "enum": [
                    {
                      "id": "ca8cabe8-c209-4401-a82e-edf3758e60ce",
                      "label": "Authentication",
                      "value": "Authentication"
                    },
                    {
                      "id": "d7edbce1-cad7-4348-ad25-c4bf031a45fc",
                      "label": "Cloud",
                      "value": "Cloud"
                    },
                    {
                      "id": "4f860caf-c2c5-42ef-8339-3abbd07a5915",
                      "label": "Controller / Orchestration",
                      "value": "Controller / Orchestration"
                    },
                    {
                      "id": "4a575870-539a-443e-aeb8-7051282362f9",
                      "label": "DevOps",
                      "value": "DevOps"
                    },
                    {
                      "id": "fdbd5325-d534-4dc1-b680-a0875965f34d",
                      "label": "NetOps",
                      "value": "NetOps"
                    },
                    {
                      "id": "4658b2f9-234d-4e64-91fd-ffe7fd8f1d86",
                      "label": "Inventory",
                      "value": "Inventory"
                    },
                    {
                      "id": "84787dcd-c9f2-442a-aaa5-9317f8276d54",
                      "label": "ITSM / Testing",
                      "value": "ITSM / Testing"
                    },
                    {
                      "id": "5ccb9c71-ccc0-4801-aff0-4a406c7676f9",
                      "label": "Notification / Messaging",
                      "value": "Notification / Messaging"
                    },
                    {
                      "id": "f35316b7-4427-4f6a-b932-3e5a2191e657",
                      "label": "Persistence",
                      "value": "Persistence"
                    },
                    {
                      "id": "50dbbe3f-b00f-4147-a3c8-b644d7e61942",
                      "label": "SD-WAN",
                      "value": "SD-WAN"
                    },
                    {
                      "id": "b6483bb2-bc6a-4978-b8d1-fbb72c142598",
                      "label": "Security",
                      "value": "Security"
                    },
                    {
                      "id": "dba24830-cc37-470a-82ab-5a6b0f5583a9",
                      "label": "Telemetry / Analytics",
                      "value": "Telemetry / Analytics"
                    },
                    {
                      "id": "7833a6fc-6411-46f3-b3ff-498005924ea5",
                      "label": "Utilities",
                      "value": "Utilities"
                    }
                  ],
                  "binding": false,
                  "rel": "collection",
                  "targetPointer": "/enum"
                }
              ],
              "title": "Categories"
            },
            {
              "nodeId": "9743a2b3-975c-4127-8717-0205ff3a8f5c",
              "type": "array",
              "description": "Optionally enter any keywords to associate with this prebuilt",
              "items": [
                {
                  "nodeId": "4f4a7027-1c72-42af-9465-c17d22314eb9",
                  "type": "string",
                  "title": "Keyword",
                  "description": "",
                  "placeholder": "Enter a keyword",
                  "required": false,
                  "readOnly": false,
                  "binding": false,
                  "rel": "item",
                  "targetPointer": "/default"
                }
              ],
              "title": "Keywords"
            },
            {
              "nodeId": "4446588f-e508-40d1-abf9-4f3eb968d75a",
              "type": "array",
              "description": "",
              "items": [
                {
                  "nodeId": "dff89a5b-9c01-481a-ba66-d3363a0e6c74",
                  "type": "string",
                  "title": "Name",
                  "description": "",
                  "placeholder": "Select an Operation Manager Automation",
                  "required": true,
                  "enum": [],
                  "binding": true,
                  "rel": "collection",
                  "targetPointer": "/enum",
                  "method": "GET",
                  "base": "/operations-manager",
                  "href": "/automations",
                  "sourcePointer": "/data",
                  "sourceKeyPointer": "/name"
                }
              ],
              "title": "Operations Manager Automations"
            },
            {
              "nodeId": "a081d2b5-f118-472a-9da4-13b3277510e2",
              "type": "array",
              "description": "",
              "items": [
                {
                  "nodeId": "8a9be65d-7eb0-458c-b57c-97380996c0f5",
                  "type": "string",
                  "title": "Name",
                  "description": "Automation Catalog Name",
                  "placeholder": "Select an Automation Catalog item",
                  "required": true,
                  "enum": [],
                  "binding": true,
                  "rel": "collection",
                  "targetPointer": "/enum",
                  "method": "GET",
                  "base": "/automation_catalog",
                  "href": "/automations",
                  "sourcePointer": "/list",
                  "sourceKeyPointer": "/name"
                }
              ],
              "title": "Automation Catalogs"
            },
            {
              "nodeId": "a0eb027f-c130-41a1-a4b5-358c066e3a6f",
              "type": "array",
              "description": "",
              "items": [
                {
                  "nodeId": "74f4d0d3-40d3-4538-a422-25391b4dc5d7",
                  "type": "string",
                  "title": "Name",
                  "description": "Workflow Automation Name",
                  "placeholder": "Select a Workflow",
                  "required": true,
                  "enum": [],
                  "binding": true,
                  "rel": "collection",
                  "targetPointer": "/enum",
                  "method": "POST",
                  "base": "/workflow_engine",
                  "href": "/workflows/search",
                  "body": {
                    "options": {
                      "skip": 0,
                      "limit": 0
                    }
                  },
                  "sourcePointer": "/results",
                  "sourceKeyPointer": "/name"
                }
              ],
              "title": "Automation Workflows"
            }
          ]
        },
        "uiSchema": {
          "scope": {
            "ui:placeholder": "Enter text"
          },
          "prebuiltName": {
            "ui:placeholder": "Enter text"
          },
          "prebuiltDescription": {
            "ui:placeholder": "Enter a description about your prebuilt",
            "ui:widget": "textarea"
          },
          "license": {
            "ui:placeholder": "*By default Apache License 2.0 will be supplied"
          },
          "contributor": {
            "ui:placeholder": "First name Last Name"
          },
          "readme": {
            "ui:widget": "textarea"
          },
          "categories": {
            "items": {
              "category": {
                "ui:placeholder": "Select an item"
              }
            }
          },
          "keywords": {
            "items": {
              "keyword": {
                "ui:placeholder": "Enter a keyword"
              }
            }
          },
          "operationsManagerAutomations": {
            "items": {
              "name": {
                "ui:placeholder": "Select an Operation Manager Automation"
              }
            }
          },
          "automationCatalogs": {
            "items": {
              "name": {
                "ui:placeholder": "Select an Automation Catalog item"
              }
            }
          },
          "automationWorkflows": {
            "items": {
              "name": {
                "ui:placeholder": "Select a Workflow"
              }
            }
          }
        },
        "validationSchema": {
          "categories": {},
          "keywords": {},
          "operationsManagerAutomations": {},
          "automationCatalogs": {},
          "automationWorkflows": {}
        },
        "version": "2020.1"
      }
    },
    {
      "type": "json-forms",
      "data": {
        "id": "619c13997bb90824c2ac0dc1",
        "bindingSchema": {
          "properties": {
            "components": {
              "properties": {
                "operationsAutomations": {
                  "items": {
                    "properties": {}
                  }
                },
                "catalogAutomations": {
                  "items": {
                    "properties": {}
                  }
                },
                "workflows": {
                  "items": {
                    "properties": {}
                  }
                },
                "transformations": {
                  "items": {
                    "properties": {}
                  }
                },
                "jsonForms": {
                  "items": {
                    "properties": {}
                  }
                },
                "forms": {
                  "items": {
                    "properties": {}
                  }
                },
                "templates": {
                  "items": {
                    "properties": {}
                  }
                },
                "commandTemplates": {
                  "items": {
                    "properties": {}
                  }
                },
                "analyticTemplates": {
                  "items": {
                    "properties": {}
                  }
                },
                "goldenConfigTrees": {
                  "items": {
                    "properties": {}
                  }
                }
              }
            }
          }
        },
        "created": "2021-11-22T22:03:05.532Z",
        "createdBy": "admin@pronghorn",
        "description": "This form allows a user to verify that the 'discovered components' contain everything that is required for their particular prebuilt. If there are extra/missing components, the user can edit the list accordingly.",
        "lastUpdated": "2022-12-02T16:01:37.774Z",
        "lastUpdatedBy": "admin@pronghorn",
        "name": "Create prebuilt - Edit discovered components",
        "schema": {
          "title": "Create prebuilt - Edit discovered components",
          "description": "This form allows a user to verify that the 'discovered components' contain everything that is required for their particular prebuilt. If there are extra/missing components, the user can edit the list accordingly.",
          "type": "object",
          "required": [],
          "properties": {
            "components": {
              "type": "object",
              "title": "Components",
              "description": "",
              "required": [],
              "properties": {
                "operationsAutomations": {
                  "type": "array",
                  "title": "Operations Automations",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "catalogAutomations": {
                  "type": "array",
                  "title": "Catalog Automations",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "workflows": {
                  "type": "array",
                  "title": "Workflows",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "transformations": {
                  "type": "array",
                  "title": "Transformations",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Id",
                        "description": ""
                      },
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "jsonForms": {
                  "type": "array",
                  "title": "JSON Forms",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "forms": {
                  "type": "array",
                  "title": "Forms",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "templates": {
                  "type": "array",
                  "title": "Templates",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "commandTemplates": {
                  "type": "array",
                  "title": "Command Templates",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "analyticTemplates": {
                  "type": "array",
                  "title": "Analytic Templates",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "goldenConfigTrees": {
                  "type": "array",
                  "title": "Golden Config Trees",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "treeId"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      },
                      "treeId": {
                        "type": "string",
                        "title": "treeId",
                        "description": ""
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "struct": {
          "nodeId": "c8e815ab-cb7d-4869-908d-f578ba61bf63",
          "type": "array",
          "items": [
            {
              "nodeId": "ce1da193-5148-4ee8-988b-efc78b75f279",
              "type": "object",
              "description": "",
              "items": [
                {
                  "nodeId": "61748fab-3597-403e-987d-a9ff85462054",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "23b16e1f-2fe0-442d-ac68-7b1d8dba933a",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "Enter text",
                      "required": true,
                      "readOnly": false,
                      "binding": false,
                      "rel": "item",
                      "targetPointer": "/default"
                    }
                  ],
                  "title": "Operations Automations"
                },
                {
                  "nodeId": "c5608cde-447e-4f7d-b257-e3377f9ba1d4",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "07df38bf-33cb-43d7-91a4-98581b42da8c",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Catalog Automations"
                },
                {
                  "nodeId": "b2cfbfa0-a0c4-46f5-9c46-7e2c315e22b0",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "f3ef6d1d-4ba1-48d4-8224-b624a0f7a7d0",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Workflows"
                },
                {
                  "nodeId": "1920615b-2822-40f5-b905-eae57689f7a9",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "e5193f31-8763-499a-9113-33a5956ebda4",
                      "type": "string",
                      "widget": "textarea",
                      "title": "Id",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    },
                    {
                      "nodeId": "c96bde0a-7d74-4914-9958-af132fb945c7",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "Enter text",
                      "required": false,
                      "readOnly": false,
                      "binding": false,
                      "rel": "item",
                      "targetPointer": "/default"
                    }
                  ],
                  "title": "Transformations"
                },
                {
                  "nodeId": "f221055a-6a68-4a4a-a472-65cda13d0845",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "a4c14093-0170-4a75-9303-6154e34cb607",
                      "type": "string",
                      "widget": "textarea",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "JSON Forms"
                },
                {
                  "nodeId": "130de3e1-1188-42d8-bf35-39b5a53bf5d5",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "7bb94765-e6ea-4369-b856-45c4a58734cf",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Forms"
                },
                {
                  "nodeId": "7f2e64a4-5498-40c8-82d0-c48eaa9b481a",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "a3d138aa-4a83-4c59-b23a-29331e30339b",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Templates"
                },
                {
                  "nodeId": "ccb287ba-b566-4cbd-b56e-a171b3334027",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "fdc26a05-e9eb-489b-973a-828f06cbf663",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Command Templates"
                },
                {
                  "nodeId": "b7d81941-8b4f-47ac-aafd-27e37d41ddb7",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "2c341f42-5f69-4f95-ae8c-1c87e37e6ea4",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Analytic Templates"
                },
                {
                  "nodeId": "b9150dd0-d13c-4df6-9844-082260a5a821",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "f212e72e-ea5a-45da-928c-bf368044169c",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": false,
                      "disabled": true,
                      "readonly": false,
                      "readOnly": true
                    },
                    {
                      "nodeId": "c22ad0ea-8616-4c82-8463-5ec5f8ee6e2e",
                      "type": "string",
                      "title": "treeId",
                      "description": "",
                      "placeholder": "Enter text",
                      "required": true,
                      "readOnly": false,
                      "binding": false,
                      "rel": "item",
                      "targetPointer": "/default"
                    }
                  ],
                  "title": "Golden Config Trees"
                }
              ],
              "title": "Components"
            }
          ]
        },
        "uiSchema": {
          "components": {
            "ui:collapseByDefault": false,
            "items": {
              "operationsAutomations": {
                "items": {
                  "name": {
                    "ui:placeholder": "Enter text"
                  }
                }
              },
              "catalogAutomations": {
                "items": {}
              },
              "workflows": {
                "items": {}
              },
              "transformations": {
                "items": {
                  "id": {
                    "ui:widget": "textarea"
                  },
                  "name": {
                    "ui:placeholder": "Enter text"
                  }
                }
              },
              "jsonForms": {
                "items": {
                  "name": {
                    "ui:widget": "textarea"
                  }
                }
              },
              "forms": {
                "items": {}
              },
              "templates": {
                "items": {}
              },
              "commandTemplates": {
                "items": {}
              },
              "analyticTemplates": {
                "items": {}
              },
              "goldenConfigTrees": {
                "items": {
                  "name": {
                    "ui:readonly": true
                  },
                  "treeId": {
                    "ui:placeholder": "Enter text"
                  }
                }
              }
            }
          }
        },
        "validationSchema": {
          "components": {
            "operationsAutomations": {},
            "catalogAutomations": {},
            "workflows": {},
            "transformations": {},
            "jsonForms": {},
            "forms": {},
            "templates": {},
            "commandTemplates": {},
            "analyticTemplates": {},
            "goldenConfigTrees": {}
          }
        },
        "version": "2020.1"
      }
    },
    {
      "type": "json-forms",
      "data": {
        "id": "6239d8f2982e0300f2339883",
        "bindingSchema": {
          "properties": {
            "prebuilt": {
              "binding:method": "GET",
              "binding:link": {
                "$ref": "/links",
                "rel": "collection"
              },
              "binding:target": {
                "propertyPointer": "/enum"
              },
              "binding:hyperSchema": {
                "type": "object",
                "base": "/prebuilts",
                "links": [
                  {
                    "rel": "collection",
                    "href": "/ ",
                    "targetMediaType": "application/json",
                    "targetSchema": {
                      "$ref": "#"
                    },
                    "variables": []
                  }
                ]
              },
              "binding:source": {
                "propertyPointer": "/results",
                "keyPointer": "/name"
              }
            }
          }
        },
        "created": "2022-03-22T14:10:58.722Z",
        "createdBy": "admin@pronghorn",
        "description": "",
        "lastUpdated": "2022-12-02T16:01:37.776Z",
        "lastUpdatedBy": "admin@pronghorn",
        "name": "Prebuilt Wizard Re-Discover",
        "schema": {
          "title": "Prebuilt Wizard Re-Discover",
          "description": "",
          "type": "object",
          "required": [
            "prebuilt"
          ],
          "properties": {
            "prebuilt": {
              "type": "string",
              "title": "Prebuilt",
              "_id": "/properties/prebuilt",
              "description": "",
              "enum": []
            }
          }
        },
        "struct": {
          "type": "array",
          "items": [
            {
              "nodeId": "bc710d34-6187-4933-8e44-e2c01bc96380",
              "type": "string",
              "title": "Prebuilt",
              "description": "",
              "placeholder": "Select an item",
              "required": true,
              "enum": [],
              "binding": true,
              "rel": "collection",
              "targetPointer": "/enum",
              "method": "GET",
              "base": "/prebuilts",
              "href": "/ ",
              "sourcePointer": "/results",
              "sourceKeyPointer": "/name",
              "originalHref": "/:id"
            }
          ]
        },
        "uiSchema": {
          "prebuilt": {
            "ui:placeholder": "Select an item"
          }
        },
        "validationSchema": {},
        "version": "2020.1"
      }
    },
    {
      "type": "json-forms",
      "data": {
        "id": "620ec34b8cb5a700f23019ad",
        "created": "2022-02-17T21:51:07.149Z",
        "createdBy": "admin@pronghorn",
        "lastUpdated": "2022-12-02T16:01:37.776Z",
        "lastUpdatedBy": "admin@pronghorn",
        "name": "Re-Discovery Components Form",
        "description": "This form allows a user to verify that the 'discovered components' contain everything that is required for their particular prebuilt. If there are extra/missing components, the user can edit the list accordingly.",
        "struct": {
          "nodeId": "c8e815ab-cb7d-4869-908d-f578ba61bf63",
          "type": "array",
          "items": [
            {
              "nodeId": "ce1da193-5148-4ee8-988b-efc78b75f279",
              "type": "object",
              "description": "",
              "items": [
                {
                  "nodeId": "61748fab-3597-403e-987d-a9ff85462054",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "23b16e1f-2fe0-442d-ac68-7b1d8dba933a",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "Enter text",
                      "required": true,
                      "readOnly": false,
                      "binding": false,
                      "rel": "item",
                      "targetPointer": "/default"
                    }
                  ],
                  "title": "Operations Automations"
                },
                {
                  "nodeId": "c5608cde-447e-4f7d-b257-e3377f9ba1d4",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "07df38bf-33cb-43d7-91a4-98581b42da8c",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Catalog Automations"
                },
                {
                  "nodeId": "b2cfbfa0-a0c4-46f5-9c46-7e2c315e22b0",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "f3ef6d1d-4ba1-48d4-8224-b624a0f7a7d0",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Workflows"
                },
                {
                  "nodeId": "1920615b-2822-40f5-b905-eae57689f7a9",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "e5193f31-8763-499a-9113-33a5956ebda4",
                      "type": "string",
                      "widget": "textarea",
                      "title": "Id",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    },
                    {
                      "nodeId": "c96bde0a-7d74-4914-9958-af132fb945c7",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "Enter text",
                      "required": false,
                      "readOnly": false,
                      "binding": false,
                      "rel": "item",
                      "targetPointer": "/default"
                    }
                  ],
                  "title": "Transformations"
                },
                {
                  "nodeId": "f221055a-6a68-4a4a-a472-65cda13d0845",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "a4c14093-0170-4a75-9303-6154e34cb607",
                      "type": "string",
                      "widget": "textarea",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "JSON Forms"
                },
                {
                  "nodeId": "130de3e1-1188-42d8-bf35-39b5a53bf5d5",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "7bb94765-e6ea-4369-b856-45c4a58734cf",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Forms"
                },
                {
                  "nodeId": "7f2e64a4-5498-40c8-82d0-c48eaa9b481a",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "a3d138aa-4a83-4c59-b23a-29331e30339b",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Templates"
                },
                {
                  "nodeId": "ccb287ba-b566-4cbd-b56e-a171b3334027",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "fdc26a05-e9eb-489b-973a-828f06cbf663",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Command Templates"
                },
                {
                  "nodeId": "b7d81941-8b4f-47ac-aafd-27e37d41ddb7",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "2c341f42-5f69-4f95-ae8c-1c87e37e6ea4",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Analytic Templates"
                },
                {
                  "nodeId": "b9150dd0-d13c-4df6-9844-082260a5a821",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "eb4401d0-da0a-4973-a44b-8efce075581a",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "Enter text",
                      "required": false,
                      "readOnly": false,
                      "binding": false,
                      "rel": "item",
                      "targetPointer": "/default"
                    },
                    {
                      "nodeId": "f212e72e-ea5a-45da-928c-bf368044169c",
                      "type": "string",
                      "title": "treeId",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Golden Config Trees"
                }
              ],
              "title": "Components"
            }
          ]
        },
        "schema": {
          "title": "Re-Discovery Components Form",
          "description": "This form allows a user to verify that the 'discovered components' contain everything that is required for their particular prebuilt. If there are extra/missing components, the user can edit the list accordingly.",
          "type": "object",
          "required": [],
          "properties": {
            "components": {
              "type": "object",
              "title": "Components",
              "description": "",
              "required": [],
              "properties": {
                "operationsAutomations": {
                  "type": "array",
                  "title": "Operations Automations",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "catalogAutomations": {
                  "type": "array",
                  "title": "Catalog Automations",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "workflows": {
                  "type": "array",
                  "title": "Workflows",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "transformations": {
                  "type": "array",
                  "title": "Transformations",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Id",
                        "description": ""
                      },
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "jsonForms": {
                  "type": "array",
                  "title": "JSON Forms",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "forms": {
                  "type": "array",
                  "title": "Forms",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "templates": {
                  "type": "array",
                  "title": "Templates",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "commandTemplates": {
                  "type": "array",
                  "title": "Command Templates",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "analyticTemplates": {
                  "type": "array",
                  "title": "Analytic Templates",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "goldenConfigTrees": {
                  "type": "array",
                  "title": "Golden Config Trees",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "treeId"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      },
                      "treeId": {
                        "type": "string",
                        "title": "treeId",
                        "description": ""
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "uiSchema": {
          "components": {
            "ui:collapseByDefault": false,
            "items": {
              "operationsAutomations": {
                "items": {
                  "name": {
                    "ui:placeholder": "Enter text"
                  }
                }
              },
              "catalogAutomations": {
                "items": {}
              },
              "workflows": {
                "items": {}
              },
              "transformations": {
                "items": {
                  "id": {
                    "ui:widget": "textarea"
                  },
                  "name": {
                    "ui:placeholder": "Enter text"
                  }
                }
              },
              "jsonForms": {
                "items": {
                  "name": {
                    "ui:widget": "textarea"
                  }
                }
              },
              "forms": {
                "items": {}
              },
              "templates": {
                "items": {}
              },
              "commandTemplates": {
                "items": {}
              },
              "analyticTemplates": {
                "items": {}
              },
              "goldenConfigTrees": {
                "items": {
                  "name": {
                    "ui:placeholder": "Enter text"
                  }
                }
              }
            }
          }
        },
        "bindingSchema": {
          "properties": {
            "components": {
              "properties": {
                "operationsAutomations": {
                  "items": {
                    "properties": {}
                  }
                },
                "catalogAutomations": {
                  "items": {
                    "properties": {}
                  }
                },
                "workflows": {
                  "items": {
                    "properties": {}
                  }
                },
                "transformations": {
                  "items": {
                    "properties": {}
                  }
                },
                "jsonForms": {
                  "items": {
                    "properties": {}
                  }
                },
                "forms": {
                  "items": {
                    "properties": {}
                  }
                },
                "templates": {
                  "items": {
                    "properties": {}
                  }
                },
                "commandTemplates": {
                  "items": {
                    "properties": {}
                  }
                },
                "analyticTemplates": {
                  "items": {
                    "properties": {}
                  }
                },
                "goldenConfigTrees": {
                  "items": {
                    "properties": {}
                  }
                }
              }
            }
          }
        },
        "validationSchema": {
          "components": {
            "operationsAutomations": {},
            "catalogAutomations": {},
            "workflows": {},
            "transformations": {},
            "jsonForms": {},
            "forms": {},
            "templates": {},
            "commandTemplates": {},
            "analyticTemplates": {},
            "goldenConfigTrees": {}
          }
        },
        "version": "2020.1"
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "61a8f96c972d5600e3de8552",
        "name": "Create prebuilt - Get formData",
        "description": "Takes in the formData for the 'Create a new prebuilt master' workflow and returns the parsed variables.",
        "incoming": [
          {
            "$id": "formData",
            "type": "object",
            "properties": {
              "scope": {
                "type": "string",
                "examples": [
                  "@acme"
                ]
              },
              "prebuiltName": {
                "type": "string",
                "examples": [
                  "Example Prebuilt"
                ]
              },
              "prebuiltDescription": {
                "type": "string",
                "default": "",
                "examples": [
                  "This prebuilt will accomplish a particular use case"
                ]
              },
              "readme": {
                "type": "string",
                "examples": [
                  "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->  <!-- Update the below line with your Pre-Built name --> # Pre-Built Name  <!-- Leave TOC intact unless you've added or removed headers --> ## Table of Contents  * [Overview](#overview) * [Installation Prerequisites](#installation-prerequisites) * [Requirements](#requirements) * [Features](#features) * [Future Enhancements](#future-enhancements) * [How to Install](#how-to-install) * [How to Run](#how-to-run) * [Additional Information](#additional-information)  ## Overview  <!-- Write a few sentences about the Pre-Built and explain the use case(s) --> <!-- Avoid using the word Artifact%2E Please use Pre-Built, Pre-Built Transformation or Pre-Built Automation --> <!-- Ex%2E: The Migration Wizard enables IAP users to conveniently move their automation use cases between different IAP environments --> <!-- (e%2Eg%2E from Dev to Pre-Production or from Lab to Production)%2E -->  <!-- Workflow(s) Image Placeholder - TO BE ADDED DIRECTLY TO GitLab --> <!-- REPLACE COMMENT BELOW WITH IMAGE OF YOUR MAIN WORKFLOW --> <!-- <table><tr><td>   <img src=\"./images/workflow.png\" alt=\"workflow\" width=\"800px\"> </td></tr></table> --> <!-- REPLACE COMMENT ABOVE WITH IMAGE OF YOUR MAIN WORKFLOW -->  <!-- ADD ESTIMATED RUN TIME HERE --> <!-- e%2Eg%2E Estimated Run Time: 34 min%2E --> _Estimated Run Time_:  ## Installation Prerequisites  Users must satisfy the following pre-requisites:  <!-- Include any other required apps or adapters in this list --> <!-- Ex%2E: EC2 Adapter --> * Itential Automation Platform   * `^2020%2Ex%2Ex`  ## Requirements  This Pre-Built requires the following:  <!-- Unordered list highlighting the requirements of the Pre-Built --> <!-- EXAMPLE --> <!-- * cisco ios device --> <!-- * Ansible or NSO (with F5 NED) * -->  ## Features  The main benefits and features of the Pre-Built are outlined below%2E  <!-- Unordered list highlighting the most exciting features of the Pre-Built --> <!-- EXAMPLE --> <!-- * Automatically checks for device type --> <!-- * Displays dry-run to user (asking for confirmation) prior to pushing config to the device --> <!-- * Verifies downloaded file integrity (using md5), will try to download again if failed -->   ## Future Enhancements  <!-- OPTIONAL - Mention if the Pre-Built will be enhanced with additional features on the road map --> <!-- Ex%2E: This Pre-Built would support Cisco XR and F5 devices -->  ## How to Install  To install the Pre-Built:  * Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the Pre-Built%2E  * The Pre-Built can be installed from within App-Admin_Essential%2E Simply search for the name of your desired Pre-Built and click the install button (as shown below)%2E  <!-- REPLACE BELOW WITH IMAGE OF YOUR PUBLISHED PRE-BUILT --> <!-- <table><tr><td>   <img src=\"./images/install.png\" alt=\"install\" width=\"600px\"> </td></tr></table> --> <!-- REPLACE ABOVE WITH IMAGE OF YOUR PUBLISHED PRE-BUILT -->  <!-- OPTIONAL - Explain if external components are required outside of IAP --> <!-- Ex%2E: The Ansible roles required for this Pre-Built can be found in the repository located at https://gitlab%2Ecom/itentialopensource/pre-built-automations/hello-world -->  ## How to Run  Use the following to run the Pre-Built:  <!-- Explain the main entrypoint(s) for this Pre-Built: Automation Catalog item, Workflow, Postman, etc%2E -->  ## Additional Information  Please use your Itential Customer Success account if you need support when using this Pre-Built%2E"
                ]
              },
              "zeroTouch": {
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              },
              "license": {
                "type": "string",
                "default": "Apache 2%2E0",
                "examples": [
                  "Apache 2%2E0"
                ]
              },
              "contributor": {
                "type": "string",
                "examples": [
                  "John Smith"
                ]
              },
              "categories": {
                "type": "array",
                "default": []
              },
              "keywords": {
                "type": "array",
                "default": []
              },
              "operationsManagerAutomations": {
                "type": "array",
                "default": []
              },
              "automationCatalogs": {
                "type": "array",
                "default": []
              },
              "automationWorkflows": {
                "type": "array",
                "default": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "scope",
            "type": "string",
            "examples": [
              "@acme"
            ]
          },
          {
            "$id": "prebuiltName",
            "type": "string",
            "examples": [
              "Example Prebuilt"
            ]
          },
          {
            "$id": "prebuiltDescription",
            "type": "string",
            "examples": [
              "This prebuilt will accomplish a particular use case"
            ]
          },
          {
            "$id": "readme",
            "type": "string",
            "examples": [
              "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->"
            ]
          },
          {
            "$id": "zeroTouch",
            "type": "boolean",
            "examples": [
              true,
              false
            ]
          },
          {
            "$id": "license",
            "type": "string",
            "examples": [
              "Apache 2%2E0"
            ]
          },
          {
            "$id": "contributor",
            "type": "string",
            "examples": [
              "John Smith"
            ]
          },
          {
            "$id": "categories",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string",
                  "examples": [
                    "DevOps"
                  ]
                }
              },
              "required": []
            }
          },
          {
            "$id": "keywords",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "keyword": {
                  "type": "string",
                  "examples": [
                    "exampleKeyword"
                  ]
                }
              },
              "required": []
            }
          },
          {
            "$id": "operationsManagerOperations",
            "type": "array",
            "items": {
              "type": "string",
              "examples": [
                "Allocate CIDR"
              ]
            }
          },
          {
            "$id": "automationCatalogs",
            "type": "array",
            "items": {
              "type": "string",
              "examples": [
                "Allocate CIDR"
              ]
            }
          },
          {
            "$id": "automationWorkflows",
            "type": "array",
            "items": {
              "type": "string",
              "examples": [
                "Allocate CIDR Master Workflow"
              ]
            }
          }
        ],
        "steps": [
          {
            "id": 8,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "getNameValue"
            ],
            "view": {
              "row": 2,
              "col": 1
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 8,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "operationsManagerOperations",
              "ptr": ""
            }
          },
          {
            "id": 11,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "getNameValue"
            ],
            "view": {
              "row": 3,
              "col": 1
            }
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 11,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "automationCatalogs",
              "ptr": ""
            }
          },
          {
            "id": 14,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "getNameValue"
            ],
            "view": {
              "row": 4,
              "col": 1
            }
          },
          {
            "id": 16,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 14,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "automationWorkflows",
              "ptr": ""
            }
          },
          {
            "id": 17,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/operationsManagerAutomations"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 18,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/automationCatalogs"
            },
            "to": {
              "location": "method",
              "name": 11,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 19,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/automationWorkflows"
            },
            "to": {
              "location": "method",
              "name": 14,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 20,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/scope"
            },
            "to": {
              "location": "outgoing",
              "name": "scope",
              "ptr": ""
            }
          },
          {
            "id": 21,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/prebuiltName"
            },
            "to": {
              "location": "outgoing",
              "name": "prebuiltName",
              "ptr": ""
            }
          },
          {
            "id": 22,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/prebuiltDescription"
            },
            "to": {
              "location": "outgoing",
              "name": "prebuiltDescription",
              "ptr": ""
            }
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/readme"
            },
            "to": {
              "location": "outgoing",
              "name": "readme",
              "ptr": ""
            }
          },
          {
            "id": 25,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/license"
            },
            "to": {
              "location": "outgoing",
              "name": "license",
              "ptr": ""
            }
          },
          {
            "id": 26,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/contributor"
            },
            "to": {
              "location": "outgoing",
              "name": "contributor",
              "ptr": ""
            }
          },
          {
            "id": 27,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/categories"
            },
            "to": {
              "location": "outgoing",
              "name": "categories",
              "ptr": ""
            }
          },
          {
            "id": 28,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/keywords"
            },
            "to": {
              "location": "outgoing",
              "name": "keywords",
              "ptr": ""
            }
          },
          {
            "id": 29,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/zeroTouch"
            },
            "to": {
              "location": "outgoing",
              "name": "zeroTouch",
              "ptr": ""
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": []
                },
                "default": [],
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "functions": [],
            "name": "getNameValue",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "name"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 1,
              "row": 4
            },
            "id": "getNameValue",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2022-12-02T16:01:37.499Z",
        "createdBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2022-12-02T16:01:37.499Z",
        "lastUpdatedBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.7",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "5f287844d76d950aa5f59814",
        "name": "Create prebuilt - Fix packagejson",
        "description": "This JST take in the JSON that would compose an artifact.json file and fixes the package.json entry to have the correct metadata",
        "incoming": [
          {
            "$id": "incoming",
            "type": "object",
            "properties": {
              "update": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "README%2Emd"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "file"
                      ]
                    },
                    "content": {
                      "type": "string",
                      "examples": [
                        "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->\n\n<!-- Update the below line with your Pre-Built name -->\n# Pre-Built Name\n\n<!-- Leave TOC intact unless you've added or removed headers -->\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n* [Additional Information](#additional-information)\n\n## Overview\n\n<!-- Write a few sentences about the Pre-Built and explain the use case(s) -->\n<!-- Avoid using the word Artifact%2E Please use Pre-Built, Pre-Built Transformation or Pre-Built Automation -->\n<!-- Ex%2E: The Migration Wizard enables IAP users to conveniently move their automation use cases between different IAP environments -->\n<!-- (e%2Eg%2E from Dev to Pre-Production or from Lab to Production)%2E -->\n\n<!-- Workflow(s) Image Placeholder - TO BE ADDED DIRECTLY TO GitLab -->\n<!-- REPLACE COMMENT BELOW WITH IMAGE OF YOUR MAIN WORKFLOW -->\n<!--\n<table><tr><td>\n  <img src=\"./images/workflow.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n-->\n<!-- REPLACE COMMENT ABOVE WITH IMAGE OF YOUR MAIN WORKFLOW -->\n\n<!-- ADD ESTIMATED RUN TIME HERE -->\n<!-- e%2Eg%2E Estimated Run Time: 34 min%2E -->\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n<!-- Include any other required apps or adapters in this list -->\n<!-- Ex%2E: EC2 Adapter -->\n* Itential Automation Platform\n  * `^2021%2E1`\n\n## Requirements\n\nThis Pre-Built requires the following:\n\n<!-- Unordered list highlighting the requirements of the Pre-Built -->\n<!-- EXAMPLE -->\n<!-- * cisco ios device -->\n<!-- * Ansible or NSO (with F5 NED) * -->\n\n## Features\n\nThe main benefits and features of the Pre-Built are outlined below%2E\n\n<!-- Unordered list highlighting the most exciting features of the Pre-Built -->\n<!-- EXAMPLE -->\n<!-- * Automatically checks for device type -->\n<!-- * Displays dry-run to user (asking for confirmation) prior to pushing config to the device -->\n<!-- * Verifies downloaded file integrity (using md5), will try to download again if failed -->\n\n\n## Future Enhancements\n\n<!-- OPTIONAL - Mention if the Pre-Built will be enhanced with additional features on the road map -->\n<!-- Ex%2E: This Pre-Built would support Cisco XR and F5 devices -->\n\n## How to Install\n\nTo install the Pre-Built:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the Pre-Built%2E \n* The Pre-Built can be installed from within App-Admin_Essential%2E Simply search for the name of your desired Pre-Built and click the install button (as shown below)%2E\n\n<!-- REPLACE BELOW WITH IMAGE OF YOUR PUBLISHED PRE-BUILT -->\n<!--\n<table><tr><td>\n  <img src=\"./images/install.png\" alt=\"install\" width=\"600px\">\n</td></tr></table>\n-->\n<!-- REPLACE ABOVE WITH IMAGE OF YOUR PUBLISHED PRE-BUILT -->\n\n<!-- OPTIONAL - Explain if external components are required outside of IAP -->\n<!-- Ex%2E: The Ansible roles required for this Pre-Built can be found in the repository located at https://gitlab%2Ecom/itentialopensource/pre-built-automations/hello-world -->\n\n## How to Run\n\nUse the following to run the Pre-Built:\n\n<!-- Explain the main entrypoint(s) for this Pre-Built: Automation Catalog item, Workflow, Postman, etc%2E -->\n\n## Additional Information\n\nPlease use your Itential Customer Success account if you need support when using this Pre-Built%2E\n"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "update"
              },
              "create": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "bundles"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "directory"
                      ]
                    },
                    "content": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "examples": [
                              "ac_agenda_jobs"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "examples": [
                              "directory"
                            ]
                          },
                          "content": {
                            "type": "array"
                          }
                        },
                        "required": []
                      }
                    }
                  },
                  "required": []
                },
                "$id": "create"
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "outgoing",
            "type": "object",
            "properties": {
              "update": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "README.md"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "file"
                      ]
                    },
                    "content": {
                      "type": "string",
                      "examples": [
                        "\n\n\n# Artifact Name\n\n\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n\n## Overview\n\n\n\n\n\n\n\n\n\n\n\n\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n\n\n* Itential Automation Platform\n  * `^2020.x.x`\n\n## Requirements\n\nThis artifact requires the following:\n\n\n\n\n\n\n## Features\n\nThe main benefits and features of the artifact are outlined below.\n\n\n\n\n\n\n\n\n## Future Enhancements\n\n\n\n\n## How to Install\n\nTo install the artifact:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the artifact. \n* The artifact can be installed from within App-Admin_Essential. Simply search for the name of your desired artifact and click the install button (as shown below).\n\n\n\n\n\n\n\n\n## How to Run\n\nUse the following to run the artifact:\n\n\n"
                      ]
                    }
                  },
                  "required": []
                }
              },
              "create": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "bundles"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "directory"
                      ]
                    },
                    "content": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "examples": [
                              "ac_agenda_jobs"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "examples": [
                              "directory"
                            ]
                          },
                          "content": {
                            "type": "array"
                          }
                        },
                        "required": []
                      }
                    }
                  },
                  "required": []
                }
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "incoming",
              "ptr": "/create"
            },
            "to": {
              "location": "outgoing",
              "name": "outgoing",
              "ptr": "/create"
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "incoming",
              "ptr": "/update"
            },
            "to": {
              "location": "method",
              "name": 2,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "incoming",
              "ptr": "/update"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "filter",
            "args": [
              null,
              "ƒ_query_2"
            ],
            "view": {
              "row": 2,
              "col": 1
            }
          },
          {
            "id": 2,
            "type": "method",
            "library": "Array",
            "method": "filter",
            "args": [
              null,
              "ƒ_query_1"
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 6,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "ƒ_map_1"
            ],
            "view": {
              "row": 3,
              "col": 2
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 8,
            "type": "method",
            "library": "Array",
            "method": "concat",
            "args": [
              null,
              null
            ],
            "view": {
              "row": 1,
              "col": 3
            }
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 8,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "outgoing",
              "ptr": "/update"
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "README.md"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "examples": [
                      "file"
                    ]
                  },
                  "content": {
                    "type": "string",
                    "examples": [
                      "\n\n\n# Artifact Name\n\n\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n\n## Overview\n\n\n\n\n\n\n\n\n\n\n\n\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n\n\n* Itential Automation Platform\n  * `^2020.x.x`\n\n## Requirements\n\nThis artifact requires the following:\n\n\n\n\n\n\n## Features\n\nThe main benefits and features of the artifact are outlined below.\n\n\n\n\n\n\n\n\n## Future Enhancements\n\n\n\n\n## How to Install\n\nTo install the artifact:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the artifact. \n* The artifact can be installed from within App-Admin_Essential. Simply search for the name of your desired artifact and click the install button (as shown below).\n\n\n\n\n\n\n\n\n## How to Run\n\nUse the following to run the artifact:\n\n\n"
                    ]
                  }
                },
                "required": [],
                "$id": "element"
              },
              {
                "title": "index",
                "type": "number",
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "README.md"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "file"
                      ]
                    },
                    "content": {
                      "type": "string",
                      "examples": [
                        "\n\n\n# Artifact Name\n\n\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n\n## Overview\n\n\n\n\n\n\n\n\n\n\n\n\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n\n\n* Itential Automation Platform\n  * `^2020.x.x`\n\n## Requirements\n\nThis artifact requires the following:\n\n\n\n\n\n\n## Features\n\nThe main benefits and features of the artifact are outlined below.\n\n\n\n\n\n\n\n\n## Future Enhancements\n\n\n\n\n## How to Install\n\nTo install the artifact:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the artifact. \n* The artifact can be installed from within App-Admin_Essential. Simply search for the name of your desired artifact and click the install button (as shown below).\n\n\n\n\n\n\n\n\n## How to Run\n\nUse the following to run the artifact:\n\n\n"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array"
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "return",
                "type": "boolean",
                "$id": "return"
              }
            ],
            "functions": [],
            "name": "isPackageJSON",
            "steps": [
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "element",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "package.json"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "return",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 1,
              "row": 5
            },
            "id": "ƒ_query_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "README.md"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "examples": [
                      "file"
                    ]
                  },
                  "content": {
                    "type": "string",
                    "examples": [
                      "\n\n\n# Artifact Name\n\n\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n\n## Overview\n\n\n\n\n\n\n\n\n\n\n\n\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n\n\n* Itential Automation Platform\n  * `^2020.x.x`\n\n## Requirements\n\nThis artifact requires the following:\n\n\n\n\n\n\n## Features\n\nThe main benefits and features of the artifact are outlined below.\n\n\n\n\n\n\n\n\n## Future Enhancements\n\n\n\n\n## How to Install\n\nTo install the artifact:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the artifact. \n* The artifact can be installed from within App-Admin_Essential. Simply search for the name of your desired artifact and click the install button (as shown below).\n\n\n\n\n\n\n\n\n## How to Run\n\nUse the following to run the artifact:\n\n\n"
                    ]
                  }
                },
                "required": [],
                "$id": "element"
              },
              {
                "title": "index",
                "type": "number",
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "README.md"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "file"
                      ]
                    },
                    "content": {
                      "type": "string",
                      "examples": [
                        "\n\n\n# Artifact Name\n\n\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n\n## Overview\n\n\n\n\n\n\n\n\n\n\n\n\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n\n\n* Itential Automation Platform\n  * `^2020.x.x`\n\n## Requirements\n\nThis artifact requires the following:\n\n\n\n\n\n\n## Features\n\nThe main benefits and features of the artifact are outlined below.\n\n\n\n\n\n\n\n\n## Future Enhancements\n\n\n\n\n## How to Install\n\nTo install the artifact:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the artifact. \n* The artifact can be installed from within App-Admin_Essential. Simply search for the name of your desired artifact and click the install button (as shown below).\n\n\n\n\n\n\n\n\n## How to Run\n\nUse the following to run the artifact:\n\n\n"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array"
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "return",
                "type": "boolean",
                "$id": "return"
              }
            ],
            "functions": [],
            "name": "notPackageJSON",
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "element",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Equality",
                "method": "inequality",
                "args": [
                  null,
                  "package.json"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "return",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 1,
              "row": 5
            },
            "id": "ƒ_query_2",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "currentValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "README.md"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "examples": [
                      "file"
                    ]
                  },
                  "content": {
                    "type": "string",
                    "examples": [
                      "\n\n\n# Artifact Name\n\n\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n\n## Overview\n\n\n\n\n\n\n\n\n\n\n\n\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n\n\n* Itential Automation Platform\n  * `^2020.x.x`\n\n## Requirements\n\nThis artifact requires the following:\n\n\n\n\n\n\n## Features\n\nThe main benefits and features of the artifact are outlined below.\n\n\n\n\n\n\n\n\n## Future Enhancements\n\n\n\n\n## How to Install\n\nTo install the artifact:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the artifact. \n* The artifact can be installed from within App-Admin_Essential. Simply search for the name of your desired artifact and click the install button (as shown below).\n\n\n\n\n\n\n\n\n## How to Run\n\nUse the following to run the artifact:\n\n\n"
                    ]
                  }
                },
                "required": []
              },
              {
                "title": "index",
                "type": "number",
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "README.md"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "file"
                      ]
                    },
                    "content": {
                      "type": "string",
                      "examples": [
                        "\n\n\n# Artifact Name\n\n\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n\n## Overview\n\n\n\n\n\n\n\n\n\n\n\n\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n\n\n* Itential Automation Platform\n  * `^2020.x.x`\n\n## Requirements\n\nThis artifact requires the following:\n\n\n\n\n\n\n## Features\n\nThe main benefits and features of the artifact are outlined below.\n\n\n\n\n\n\n\n\n## Future Enhancements\n\n\n\n\n## How to Install\n\nTo install the artifact:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the artifact. \n* The artifact can be installed from within App-Admin_Essential. Simply search for the name of your desired artifact and click the install button (as shown below).\n\n\n\n\n\n\n\n\n## How to Run\n\nUse the following to run the artifact:\n\n\n"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array"
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "$id": "newValue",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "README.md"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "examples": [
                      "file"
                    ]
                  },
                  "content": {
                    "type": "string",
                    "examples": [
                      "\n\n\n# Artifact Name\n\n\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n\n## Overview\n\n\n\n\n\n\n\n\n\n\n\n\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n\n\n* Itential Automation Platform\n  * `^2020.x.x`\n\n## Requirements\n\nThis artifact requires the following:\n\n\n\n\n\n\n## Features\n\nThe main benefits and features of the artifact are outlined below.\n\n\n\n\n\n\n\n\n## Future Enhancements\n\n\n\n\n## How to Install\n\nTo install the artifact:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the artifact. \n* The artifact can be installed from within App-Admin_Essential. Simply search for the name of your desired artifact and click the install button (as shown below).\n\n\n\n\n\n\n\n\n## How to Run\n\nUse the following to run the artifact:\n\n\n"
                    ]
                  }
                },
                "required": []
              }
            ],
            "functions": [],
            "name": "editPackageJSON",
            "steps": [
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 19,
                "type": "declaration",
                "library": "Number",
                "method": "new Number",
                "args": [
                  "2"
                ],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "name"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 6,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "type"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "content"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 19,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": "/type"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": "/name"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "JSON",
                "method": "parse",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "function",
                  "name": 14,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 14,
                "type": "function",
                "function": "userFunc_1",
                "args": [
                  "",
                  ""
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 14,
                  "ptr": "/return/fixedPackageJSON"
                },
                "to": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 16,
                "type": "method",
                "library": "JSON",
                "method": "stringify",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 4
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": "/content"
                }
              }
            ],
            "view": {
              "col": 4,
              "row": 5
            },
            "id": "ƒ_map_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "packageJSON",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "@itentialopensource/this is a test"
                    ]
                  },
                  "version": {
                    "type": "string",
                    "examples": [
                      "0%2E0%2E1"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "examples": [
                      "k"
                    ]
                  },
                  "scripts": {
                    "type": "object",
                    "properties": {
                      "test": {
                        "type": "string",
                        "examples": [
                          "echo \"Error: no test specified\" && exit 1"
                        ]
                      },
                      "deploy": {
                        "type": "string",
                        "examples": [
                          "echo not needed npm publish --access=public --registry=http://registry%2Enpmjs%2Eorg"
                        ]
                      },
                      "validateSchema": {
                        "type": "string",
                        "examples": [
                          "node test/manifestTester%2Ejs manifest%2Ejson manifest-schema%2Ejson"
                        ]
                      },
                      "validateSchemaLinks": {
                        "type": "string",
                        "examples": [
                          "node test/manifestLinkTester%2Ejs manifest%2Ejson"
                        ]
                      },
                      "generateImageLinks": {
                        "type": "string",
                        "examples": [
                          "node utils/generateImageLinks%2Ejs"
                        ]
                      }
                    },
                    "required": []
                  },
                  "repository": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "examples": [
                          "gitlab"
                        ]
                      },
                      "hostname": {
                        "type": "string",
                        "examples": [
                          "gitlab%2Ecom"
                        ]
                      },
                      "path": {
                        "type": "string",
                        "examples": [
                          "itentialopensource/pre-built-automations"
                        ]
                      }
                    },
                    "required": []
                  },
                  "keywords": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "Itential"
                      ]
                    }
                  },
                  "contributors": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "Itential Artifacts"
                      ]
                    }
                  },
                  "author": {
                    "type": "string",
                    "examples": [
                      "Itential Artifacts"
                    ]
                  },
                  "license": {
                    "type": "string",
                    "examples": [
                      "Apache-2%2E0"
                    ]
                  },
                  "devDependencies": {
                    "type": "object",
                    "properties": {
                      "r2": {
                        "type": "string",
                        "examples": [
                          "^2%2E0%2E1"
                        ]
                      },
                      "ajv": {
                        "type": "string",
                        "examples": [
                          "6%2E10%2E0"
                        ]
                      },
                      "better-ajv-errors": {
                        "type": "string",
                        "examples": [
                          "^0%2E6%2E1"
                        ]
                      },
                      "fs-extra": {
                        "type": "string",
                        "examples": [
                          "^7%2E0%2E1"
                        ]
                      }
                    },
                    "required": []
                  },
                  "IAPDependencies": {
                    "type": "object",
                    "properties": {},
                    "required": []
                  },
                  "IAPCategories": {
                    "type": "array"
                  }
                },
                "required": []
              },
              {
                "$id": "packageJSON_copy",
                "type": "object",
                "properties": {
                  "version": {
                    "type": "string",
                    "examples": [
                      "0%2E0%2E1"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "examples": [
                      "Default artifact description"
                    ]
                  },
                  "scripts": {
                    "type": "object",
                    "properties": {
                      "test": {
                        "type": "string",
                        "examples": [
                          "echo \"Error: no test specified\" && exit 1"
                        ]
                      },
                      "deploy": {
                        "type": "string",
                        "examples": [
                          "echo not needed npm publish --access=public --registry=http://registry%2Enpmjs%2Eorg"
                        ]
                      },
                      "validateSchema": {
                        "type": "string",
                        "examples": [
                          "node test/manifestTester%2Ejs manifest%2Ejson manifest-schema%2Ejson"
                        ]
                      },
                      "validateSchemaLinks": {
                        "type": "string",
                        "examples": [
                          "node test/manifestLinkTester%2Ejs manifest%2Ejson"
                        ]
                      },
                      "generateImageLinks": {
                        "type": "string",
                        "examples": [
                          "node utils/generateImageLinks%2Ejs"
                        ]
                      }
                    },
                    "required": []
                  },
                  "repository": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "examples": [
                          "gitlab"
                        ]
                      },
                      "hostname": {
                        "type": "string",
                        "examples": [
                          "gitlab%2Ecom"
                        ]
                      },
                      "path": {
                        "type": "string",
                        "examples": [
                          "itentialopensource/pre-built-automations"
                        ]
                      }
                    },
                    "required": []
                  },
                  "keywords": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "Itential"
                      ]
                    }
                  },
                  "contributors": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "Itential Artifacts"
                      ]
                    }
                  },
                  "author": {
                    "type": "string",
                    "examples": [
                      "Itential Artifacts"
                    ]
                  },
                  "license": {
                    "type": "string",
                    "examples": [
                      "Apache-2%2E0"
                    ]
                  },
                  "devDependencies": {
                    "type": "object",
                    "properties": {
                      "r2": {
                        "type": "string",
                        "examples": [
                          "^2%2E0%2E1"
                        ]
                      },
                      "ajv": {
                        "type": "string",
                        "examples": [
                          "6%2E10%2E0"
                        ]
                      },
                      "better-ajv-errors": {
                        "type": "string",
                        "examples": [
                          "^0%2E6%2E1"
                        ]
                      },
                      "fs-extra": {
                        "type": "string",
                        "examples": [
                          "^7%2E0%2E1"
                        ]
                      }
                    },
                    "required": []
                  },
                  "name": {
                    "type": "string",
                    "examples": [
                      "@itentialoperations/new hire on boarding"
                    ]
                  },
                  "IAPDependencies": {
                    "type": "object",
                    "properties": {
                      "@itential/app-automation_catalog": {
                        "type": "string",
                        "examples": [
                          "2%2E6%2E6"
                        ]
                      },
                      "@itential/app-json_forms": {
                        "type": "string",
                        "examples": [
                          "1%2E14%2E10"
                        ]
                      },
                      "@itential/app-workflow_engine": {
                        "type": "string",
                        "examples": [
                          "7%2E14%2E4"
                        ]
                      }
                    },
                    "required": []
                  },
                  "IAPCategories": {
                    "type": "array"
                  }
                },
                "required": []
              }
            ],
            "outgoing": [
              {
                "$id": "fixedPackageJSON",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "@itentialopensource/this is a test"
                    ]
                  },
                  "version": {
                    "type": "string",
                    "examples": [
                      "0%2E0%2E1"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "examples": [
                      "k"
                    ]
                  },
                  "scripts": {
                    "type": "object",
                    "properties": {
                      "test": {
                        "type": "string",
                        "examples": [
                          "echo \"Error: no test specified\" && exit 1"
                        ]
                      },
                      "deploy": {
                        "type": "string",
                        "examples": [
                          "echo not needed npm publish --access=public --registry=http://registry%2Enpmjs%2Eorg"
                        ]
                      },
                      "validateSchema": {
                        "type": "string",
                        "examples": [
                          "node test/manifestTester%2Ejs manifest%2Ejson manifest-schema%2Ejson"
                        ]
                      },
                      "validateSchemaLinks": {
                        "type": "string",
                        "examples": [
                          "node test/manifestLinkTester%2Ejs manifest%2Ejson"
                        ]
                      },
                      "generateImageLinks": {
                        "type": "string",
                        "examples": [
                          "node utils/generateImageLinks%2Ejs"
                        ]
                      }
                    },
                    "required": []
                  },
                  "repository": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "examples": [
                          "gitlab"
                        ]
                      },
                      "hostname": {
                        "type": "string",
                        "examples": [
                          "gitlab%2Ecom"
                        ]
                      },
                      "path": {
                        "type": "string",
                        "examples": [
                          "itentialopensource/pre-built-automations"
                        ]
                      }
                    },
                    "required": []
                  },
                  "keywords": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "Itential"
                      ]
                    }
                  },
                  "contributors": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "Itential Artifacts"
                      ]
                    }
                  },
                  "author": {
                    "type": "string",
                    "examples": [
                      "Itential Artifacts"
                    ]
                  },
                  "license": {
                    "type": "string",
                    "examples": [
                      "Apache-2%2E0"
                    ]
                  },
                  "devDependencies": {
                    "type": "object",
                    "properties": {
                      "r2": {
                        "type": "string",
                        "examples": [
                          "^2%2E0%2E1"
                        ]
                      },
                      "ajv": {
                        "type": "string",
                        "examples": [
                          "6%2E10%2E0"
                        ]
                      },
                      "better-ajv-errors": {
                        "type": "string",
                        "examples": [
                          "^0%2E6%2E1"
                        ]
                      },
                      "fs-extra": {
                        "type": "string",
                        "examples": [
                          "^7%2E0%2E1"
                        ]
                      }
                    },
                    "required": []
                  },
                  "IAPDependencies": {
                    "type": "object",
                    "properties": {},
                    "required": []
                  },
                  "IAPCategories": {
                    "type": "array"
                  }
                },
                "required": []
              }
            ],
            "functions": [],
            "name": "fixPackageJSON",
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "packageJSON",
                  "ptr": "/version"
                },
                "to": {
                  "location": "outgoing",
                  "name": "fixedPackageJSON",
                  "ptr": "/version"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "packageJSON",
                  "ptr": "/description"
                },
                "to": {
                  "location": "outgoing",
                  "name": "fixedPackageJSON",
                  "ptr": "/description"
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "packageJSON",
                  "ptr": "/scripts"
                },
                "to": {
                  "location": "outgoing",
                  "name": "fixedPackageJSON",
                  "ptr": "/scripts"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "packageJSON",
                  "ptr": "/keywords"
                },
                "to": {
                  "location": "outgoing",
                  "name": "fixedPackageJSON",
                  "ptr": "/keywords"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "packageJSON",
                  "ptr": "/contributors"
                },
                "to": {
                  "location": "outgoing",
                  "name": "fixedPackageJSON",
                  "ptr": "/contributors"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "packageJSON",
                  "ptr": "/author"
                },
                "to": {
                  "location": "outgoing",
                  "name": "fixedPackageJSON",
                  "ptr": "/author"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "packageJSON",
                  "ptr": "/license"
                },
                "to": {
                  "location": "outgoing",
                  "name": "fixedPackageJSON",
                  "ptr": "/license"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "packageJSON",
                  "ptr": "/devDependencies"
                },
                "to": {
                  "location": "outgoing",
                  "name": "fixedPackageJSON",
                  "ptr": "/devDependencies"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "packageJSON",
                  "ptr": "/IAPCategories"
                },
                "to": {
                  "location": "outgoing",
                  "name": "fixedPackageJSON",
                  "ptr": "/IAPCategories"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "packageJSON",
                  "ptr": "/repository/type"
                },
                "to": {
                  "location": "outgoing",
                  "name": "fixedPackageJSON",
                  "ptr": "/repository/type"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "packageJSON",
                  "ptr": "/IAPDependencies"
                },
                "to": {
                  "location": "method",
                  "name": 17,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 20,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  "{}"
                ],
                "view": {
                  "row": 4,
                  "col": 1
                }
              },
              {
                "id": 22,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "packageJSON",
                  "ptr": "/IAPDependencies"
                },
                "to": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/args/3/value"
                }
              },
              {
                "id": 30,
                "type": "declaration",
                "library": "RegExp",
                "method": "new RegExp",
                "args": [
                  "\\s",
                  "g"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 34,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "packageJSON",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 27,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "method",
                "library": "Object",
                "method": "keys",
                "args": [
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 20,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 31,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 30,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 27,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 17,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 27,
                "type": "method",
                "library": "String",
                "method": "replace",
                "args": [
                  null,
                  null,
                  "-"
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 33,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 27,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "fixedPackageJSON",
                  "ptr": "/name"
                }
              },
              {
                "id": 16,
                "type": "method",
                "library": "Array",
                "method": "reduce",
                "args": [
                  null,
                  "ƒ_reduce_1",
                  null,
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 26,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "fixedPackageJSON",
                  "ptr": "/IAPDependencies"
                }
              },
              {
                "id": 35,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "packageJSON",
                  "ptr": "/repository/hostname"
                },
                "to": {
                  "location": "outgoing",
                  "name": "fixedPackageJSON",
                  "ptr": "/repository/hostname"
                }
              },
              {
                "id": 36,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "packageJSON",
                  "ptr": "/repository/path"
                },
                "to": {
                  "location": "outgoing",
                  "name": "fixedPackageJSON",
                  "ptr": "/repository/path"
                }
              }
            ],
            "view": {
              "col": 2,
              "row": 5
            },
            "id": "userFunc_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array"
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_IAPDependencies": {
                    "type": "object",
                    "properties": {},
                    "required": []
                  }
                },
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "setIAPDependancyAsEmpty",
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "String",
                "method": "charAt",
                "args": [
                  "0",
                  1
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "ƒ_reduce_1",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 5
        },
        "created": "2022-12-02T16:01:37.501Z",
        "createdBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2022-12-02T16:01:37.501Z",
        "lastUpdatedBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.7",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "6197e2fcda174d24c34d36dc",
        "name": " Create prebuilt - Format Publish",
        "description": "Takes in the output of the AppArtifacts componentDiscovery task and some other data to form the input of the createPublishedArtifactFromScratch task.",
        "incoming": [
          {
            "$id": "name",
            "type": "string",
            "examples": [
              "Example Name"
            ]
          },
          {
            "$id": "description",
            "type": "string",
            "examples": [
              "A prebuilt that accomplishes xyz"
            ]
          },
          {
            "$id": "contributor",
            "type": "string",
            "examples": [
              "Employee x"
            ]
          },
          {
            "$id": "readme",
            "type": "string",
            "examples": [
              "Example readme"
            ]
          },
          {
            "$id": "license",
            "type": "string",
            "examples": [
              "Apache 2%2E0"
            ],
            "default": "Apache 2%2E0"
          },
          {
            "$id": "categories",
            "type": "array"
          },
          {
            "$id": "keywords",
            "type": "array"
          },
          {
            "$id": "discoverComponentsOutput",
            "type": "object",
            "properties": {
              "dependencies": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "@itential/app-automation_catalog"
                  ]
                }
              }
            },
            "required": []
          },
          {
            "$id": "componentsFormSelection",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "catalogAutomations": {
                    "type": "array"
                  },
                  "operationsAutomations": {
                    "type": "array"
                  },
                  "workflows": {
                    "type": "array"
                  },
                  "jsonForms": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "templates": {
                    "type": "array"
                  },
                  "commandTemplates": {
                    "type": "array"
                  },
                  "analyticTemplates": {
                    "type": "array"
                  },
                  "goldenConfigTrees": {
                    "type": "array"
                  },
                  "transformations": {
                    "type": "array"
                  },
                  "triggers": {
                    "type": "array"
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "scope",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "artifactData",
            "type": "object",
            "properties": {
              "metadata": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "Example Name"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "examples": [
                      "Example Description"
                    ]
                  },
                  "contributor": {
                    "type": "string",
                    "examples": [
                      "Example Contributor"
                    ]
                  },
                  "readme": {
                    "type": "string",
                    "examples": [
                      "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->\n\n<!-- Update the below line with your Pre-Built name -->\n# Pre-Built Name\n\n<!-- Leave TOC intact unless you've added or removed headers -->\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n* [Additional Information](#additional-information)\n\n## Overview\n\n<!-- Write a few sentences about the Pre-Built and explain the use case(s) -->\n<!-- Avoid using the word Artifact%2E Please use Pre-Built, Pre-Built Transformation or Pre-Built Automation -->\n<!-- Ex%2E: The Migration Wizard enables IAP users to conveniently move their automation use cases between different IAP environments -->\n<!-- (e%2Eg%2E from Dev to Pre-Production or from Lab to Production)%2E -->\n\n<!-- Workflow(s) Image Placeholder - TO BE ADDED DIRECTLY TO GitLab -->\n<!-- REPLACE COMMENT BELOW WITH IMAGE OF YOUR MAIN WORKFLOW -->\n<!--\n<table><tr><td>\n  <img src=\"./images/workflow.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n-->\n<!-- REPLACE COMMENT ABOVE WITH IMAGE OF YOUR MAIN WORKFLOW -->\n\n<!-- ADD ESTIMATED RUN TIME HERE -->\n<!-- e%2Eg%2E Estimated Run Time: 34 min%2E -->\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n<!-- Include any other required apps or adapters in this list -->\n<!-- Ex%2E: EC2 Adapter -->\n* Itential Automation Platform\n  * `^2020%2Ex%2Ex`\n\n## Requirements\n\nThis Pre-Built requires the following:\n\n<!-- Unordered list highlighting the requirements of the Pre-Built -->\n<!-- EXAMPLE -->\n<!-- * cisco ios device -->\n<!-- * Ansible or NSO (with F5 NED) * -->\n\n## Features\n\nThe main benefits and features of the Pre-Built are outlined below%2E\n\n<!-- Unordered list highlighting the most exciting features of the Pre-Built -->\n<!-- EXAMPLE -->\n<!-- * Automatically checks for device type -->\n<!-- * Displays dry-run to user (asking for confirmation) prior to pushing config to the device -->\n<!-- * Verifies downloaded file integrity (using md5), will try to download again if failed -->\n\n\n## Future Enhancements\n\n<!-- OPTIONAL - Mention if the Pre-Built will be enhanced with additional features on the road map -->\n<!-- Ex%2E: This Pre-Built would support Cisco XR and F5 devices -->\n\n## How to Install\n\nTo install the Pre-Built:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the Pre-Built%2E \n* The Pre-Built can be installed from within App-Admin_Essential%2E Simply search for the name of your desired Pre-Built and click the install button (as shown below)%2E\n\n<!-- REPLACE BELOW WITH IMAGE OF YOUR PUBLISHED PRE-BUILT -->\n<!--\n<table><tr><td>\n  <img src=\"./images/install.png\" alt=\"install\" width=\"600px\">\n</td></tr></table>\n-->\n<!-- REPLACE ABOVE WITH IMAGE OF YOUR PUBLISHED PRE-BUILT -->\n\n<!-- OPTIONAL - Explain if external components are required outside of IAP -->\n<!-- Ex%2E: The Ansible roles required for this Pre-Built can be found in the repository located at https://gitlab%2Ecom/itentialopensource/pre-built-automations/hello-world -->\n\n## How to Run\n\nUse the following to run the Pre-Built:\n\n<!-- Explain the main entrypoint(s) for this Pre-Built: Automation Catalog item, Workflow, Postman, etc%2E -->\n\n## Additional Information\n\nPlease use your Itential Customer Success account if you need support when using this Pre-Built%2E"
                    ]
                  },
                  "license": {
                    "type": "string",
                    "examples": [
                      "Apache 2%2E0"
                    ]
                  },
                  "categories": {
                    "type": "array"
                  },
                  "keywords": {
                    "type": "array"
                  },
                  "dependencies": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "@itential/app-automation_catalog"
                      ]
                    }
                  }
                },
                "required": []
              },
              "components": {
                "type": "object",
                "properties": {
                  "ac-agenda-job": {
                    "type": "array"
                  },
                  "automation": {
                    "type": "array"
                  },
                  "workflow": {
                    "type": "array"
                  },
                  "json-forms": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "template": {
                    "type": "array"
                  },
                  "mop-template": {
                    "type": "array"
                  },
                  "mop-analytic-template": {
                    "type": "array"
                  },
                  "golden-config": {
                    "type": "array"
                  },
                  "transformation": {
                    "type": "array"
                  },
                  "triggers": {
                    "type": "array"
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "modules",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "package_id": {
                  "type": "string",
                  "examples": [
                    "@itential/app-automation_catalog"
                  ]
                },
                "version": {
                  "type": "string"
                }
              },
              "required": []
            }
          },
          {
            "$id": "defaultPackageJson",
            "type": "object"
          }
        ],
        "steps": [
          {
            "id": 11,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "createModuleObject"
            ],
            "view": {
              "row": 5,
              "col": 1
            }
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 11,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "modules",
              "ptr": ""
            }
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoverComponentsOutput",
              "ptr": "/dependencies"
            },
            "to": {
              "location": "method",
              "name": 11,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 20,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "name",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/metadata/name"
            }
          },
          {
            "id": 21,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "description",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/metadata/description"
            }
          },
          {
            "id": 22,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "contributor",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/metadata/contributor"
            }
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "readme",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/metadata/readme"
            }
          },
          {
            "id": 24,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "license",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/metadata/license"
            }
          },
          {
            "id": 26,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              {
                "name": "@itentialopensource/artifact-template",
                "version": "0.0.7",
                "description": "Template for creating new artifacts",
                "scripts": {
                  "test": "echo \"Error: no test specified\" && exit 1",
                  "deploy": "echo not needed npm publish --access=public --registry=http://registry.npmjs.org",
                  "validateSchema": "node test/manifestTester.js manifest.json manifest-schema.json",
                  "validateSchemaLinks": "node test/manifestLinkTester.js manifest.json",
                  "generateImageLinks": "node utils/generateImageLinks.js"
                },
                "repository": {
                  "type": "gitlab",
                  "hostname": "gitlab.com",
                  "path": "itentialopensource/pre-built-automations"
                },
                "keywords": [
                  "Itential",
                  "IAP",
                  "artifacts"
                ],
                "contributors": [
                  "Itential Artifacts"
                ],
                "author": "Itential Artifacts",
                "license": "Apache-2.0",
                "devDependencies": {
                  "r2": "^2.0.1",
                  "ajv": "6.10.0",
                  "better-ajv-errors": "^0.6.1",
                  "fs-extra": "^7.0.1"
                }
              }
            ],
            "view": {
              "row": 6,
              "col": 1
            }
          },
          {
            "id": 28,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/catalogAutomations"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/ac-agenda-job"
            }
          },
          {
            "id": 29,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/operationsAutomations"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/automation"
            }
          },
          {
            "id": 30,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/workflows"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/workflow"
            }
          },
          {
            "id": 31,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/jsonForms"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/json-forms"
            }
          },
          {
            "id": 32,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/forms"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/forms"
            }
          },
          {
            "id": 33,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/templates"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/template"
            }
          },
          {
            "id": 34,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/commandTemplates"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/mop-template"
            }
          },
          {
            "id": 35,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/analyticTemplates"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/mop-analytic-template"
            }
          },
          {
            "id": 36,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/goldenConfigTrees"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/golden-config"
            }
          },
          {
            "id": 37,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/transformations"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/transformation"
            }
          },
          {
            "id": 38,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoverComponentsOutput",
              "ptr": "/dependencies"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/metadata/dependencies"
            }
          },
          {
            "id": 39,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/triggers"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/triggers"
            }
          },
          {
            "id": 40,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "ƒ_map_1",
              null
            ],
            "view": {
              "row": 4,
              "col": 2
            }
          },
          {
            "id": 41,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "keywords",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 40,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 42,
            "type": "declaration",
            "library": "String",
            "method": "new String",
            "args": [
              "keyword"
            ],
            "view": {
              "row": 4,
              "col": 1
            }
          },
          {
            "id": 43,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 42,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 40,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 44,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "ƒ_map_1",
              null
            ],
            "view": {
              "row": 3,
              "col": 2
            }
          },
          {
            "id": 45,
            "type": "declaration",
            "library": "String",
            "method": "new String",
            "args": [
              "category"
            ],
            "view": {
              "row": 3,
              "col": 1
            }
          },
          {
            "id": 46,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 45,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 44,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 47,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "categories",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 44,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 48,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 40,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/metadata/keywords"
            }
          },
          {
            "id": 49,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 44,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/metadata/categories"
            }
          },
          {
            "id": 50,
            "type": "function",
            "function": "setScope",
            "args": [
              "",
              ""
            ],
            "view": {
              "row": 6,
              "col": 3
            }
          },
          {
            "id": 51,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "scope",
              "ptr": ""
            },
            "to": {
              "location": "function",
              "name": 50,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 52,
            "type": "method",
            "library": "Object",
            "method": "getProperty",
            "args": [
              null,
              "name"
            ],
            "view": {
              "row": 6,
              "col": 2
            }
          },
          {
            "id": 53,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 26,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 52,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 54,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 52,
              "ptr": "/return"
            },
            "to": {
              "location": "function",
              "name": 50,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 55,
            "type": "method",
            "library": "Object",
            "method": "deleteProperty",
            "args": [
              null,
              "name"
            ],
            "view": {
              "row": 7,
              "col": 2
            }
          },
          {
            "id": 56,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "name",
              null
            ],
            "view": {
              "row": 7,
              "col": 3
            }
          },
          {
            "id": 57,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 26,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 55,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 58,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 55,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 56,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 59,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 50,
              "ptr": "/return/scope"
            },
            "to": {
              "location": "method",
              "name": 56,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 60,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 56,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "defaultPackageJson",
              "ptr": ""
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "string",
                "examples": [
                  "@itential/app-automation_catalog"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "@itential/app-automation_catalog"
                  ]
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "functions": [],
            "name": "createModuleObject",
            "steps": [
              {
                "id": 1,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "version",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 5,
                "type": "declaration",
                "library": "String",
                "method": "new String",
                "args": [
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "package_id",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 4
            },
            "id": "createModuleObject",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_new String return": {
                    "type": "string"
                  }
                },
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "functions": [],
            "name": "ƒ_map_1",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/0_new String return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 1,
              "row": 4
            },
            "id": "ƒ_map_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "newScope",
                "type": "string"
              },
              {
                "$id": "oldScope",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "scope",
                "type": "string"
              }
            ],
            "functions": [],
            "name": "userFunc_1",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "String",
                "method": "split",
                "args": [
                  null,
                  "/",
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "oldScope",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Array",
                "method": "getIndex",
                "args": [
                  null,
                  1
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "String",
                "method": "concat",
                "args": [
                  null,
                  "/",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "newScope",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "scope",
                  "ptr": ""
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/2/value"
                }
              }
            ],
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "setScope",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 8
        },
        "created": "2022-12-02T16:01:37.502Z",
        "createdBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2022-12-02T16:01:37.502Z",
        "lastUpdatedBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.7",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "61aa625a972d5600e3de8555",
        "name": "Create Prebuilt - Determine Components",
        "description": "",
        "incoming": [
          {
            "$id": "formData",
            "type": [
              "object",
              "null"
            ]
          },
          {
            "$id": "originalComponents",
            "type": "object"
          }
        ],
        "outgoing": [
          {
            "$id": "componentInput",
            "type": "object"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "method",
            "library": "Conditional",
            "method": "ternary",
            "args": [
              null,
              null,
              null
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 2,
            "type": "declaration",
            "library": "Boolean",
            "method": "new Boolean",
            "args": [
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 2,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "originalComponents",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "componentInput",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2022-12-02T16:01:37.494Z",
        "createdBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2022-12-02T16:01:37.494Z",
        "lastUpdatedBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.7",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "61aa46e4972d5600e3de8554",
        "name": "Create prebuilt - merge discovery data",
        "description": "",
        "incoming": [
          {
            "$id": "workflow",
            "type": "array"
          },
          {
            "$id": "operationsAutomation",
            "type": "array"
          },
          {
            "$id": "catalogAutomation",
            "type": "array"
          }
        ],
        "outgoing": [
          {
            "$id": "discoveryData",
            "type": "object",
            "properties": {
              "workflow": {
                "type": "array"
              },
              "operationsAutomation": {
                "type": "array"
              },
              "catalogAutomation": {
                "type": "array"
              }
            }
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "workflow",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "discoveryData",
              "ptr": "/workflow"
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "operationsAutomation",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "discoveryData",
              "ptr": "/operationsAutomation"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "catalogAutomation",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "discoveryData",
              "ptr": "/catalogAutomation"
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 3,
          "row": 5
        },
        "created": "2022-12-02T16:01:37.495Z",
        "createdBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2022-12-02T16:01:37.495Z",
        "lastUpdatedBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.7",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "619d03ad69bd2d6d0005f64d",
        "name": "Create prebuilt - Edit components input",
        "description": "Takes in the output of the componentDiscovery task in appartifacts and outputs a format that can be used in a form where the components can be edited.",
        "incoming": [
          {
            "$id": "componentDiscoveryOutput",
            "type": "object",
            "properties": {
              "componentMap": {
                "type": "object",
                "properties": {
                  "workflow": {
                    "type": "array"
                  },
                  "ac-agenda-job": {
                    "type": "array"
                  },
                  "automation": {
                    "type": "array"
                  },
                  "trigger": {
                    "type": "array"
                  },
                  "json-forms": {
                    "type": "array"
                  },
                  "template": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "mop-template": {
                    "type": "array"
                  },
                  "mop-analytic-template": {
                    "type": "array"
                  },
                  "golden-config": {
                    "type": "array"
                  },
                  "transformation": {
                    "type": "array"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "componentEditorFormInput",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "workflows": {
                    "type": "array"
                  },
                  "catalogAutomations": {
                    "type": "array"
                  },
                  "operationsAutomations": {
                    "type": "array"
                  },
                  "triggers": {
                    "type": "array"
                  },
                  "jsonForms": {
                    "type": "array"
                  },
                  "templates": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "commandTemplates": {
                    "type": "array"
                  },
                  "analyticTemplates": {
                    "type": "array"
                  },
                  "goldenConfigTrees": {
                    "type": "array"
                  },
                  "transformations": {
                    "type": "array"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/workflow"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/workflows"
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/ac-agenda-job"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/catalogAutomations"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/automation"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/operationsAutomations"
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/trigger"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/triggers"
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/json-forms"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/jsonForms"
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/template"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/templates"
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/forms"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/forms"
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/mop-template"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/commandTemplates"
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/mop-analytic-template"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/analyticTemplates"
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/golden-config"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/goldenConfigTrees"
            }
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/transformation"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/transformations"
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2022-12-02T16:01:37.496Z",
        "createdBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2022-12-02T16:01:37.496Z",
        "lastUpdatedBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.5",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "6210015da161ae00ef6164b4",
        "name": "convertArtifactInfoToForm",
        "description": "",
        "incoming": [
          {
            "$id": "input",
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "examples": [
                  "5f3c38e78cd2e02bacdd59eb"
                ]
              },
              "name": {
                "type": "string",
                "examples": [
                  "@itentialopensource/asa-firewall-object-group-update"
                ]
              },
              "version": {
                "type": "string",
                "examples": [
                  "0%2E0%2E11-2020%2E1%2E1"
                ]
              },
              "description": {
                "type": "string",
                "examples": [
                  "This artifact contains the Cisco ASA group policy object update workflow for Ansible using IAP"
                ]
              },
              "license": {
                "type": "string",
                "examples": [
                  "Apache-2%2E0"
                ]
              },
              "repository": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "examples": [
                      "git"
                    ]
                  },
                  "url": {
                    "type": "string",
                    "examples": [
                      "https://gitlab%2Ecom:itentialopensource/pre-built-automations/asa-firewall-object-group-update%2Egit"
                    ]
                  }
                },
                "required": []
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "Itential"
                  ]
                },
                "$id": "keywords"
              },
              "IAPDependencies": {
                "type": "object",
                "properties": {
                  "@itential/app-automation_catalog": {
                    "type": "string",
                    "examples": [
                      "2%2E6%2E3"
                    ]
                  },
                  "@itential/app-json_forms": {
                    "type": "string",
                    "examples": [
                      "1%2E14%2E1"
                    ]
                  },
                  "@itential/app-workflow_engine": {
                    "type": "string",
                    "examples": [
                      "7%2E9%2E4"
                    ]
                  }
                },
                "required": []
              },
              "gitlabId": {
                "type": "integer",
                "examples": [
                  17671583
                ]
              },
              "author": {
                "type": "string",
                "examples": [
                  "Itential Artifacts"
                ]
              },
              "components": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                },
                "$id": "components"
              },
              "readme": {
                "type": "string",
                "examples": [
                  "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->\n<!-- Update the below line with your artifact name -->\n# ASA Firewall Object Group Update \n<!-- Add a short description or tag-line -->\nThis artifact contains the Cisco ASA group policy object update workflow for Ansible using IAP%2E  This workflow is designed to create and/or update an existing group object to add and remove hosts on a Cisco ASA firewall physical and virtual devices via Ansible%2E\n​​\n<!-- Leave TOC intact unless you've added or removed headers -->\n## Table of Contents\n​\n- [Overview](#overview)\n- [Features](#features)\n- [Requirements](#requirements)\n- [Future Enhancements](#future-enhancements)\n- [How to Install](#how-to-install)\n- [How to Run](#how-to-run)\n- [Additional Information](#additional-information)\n​\n## Overview\n<!-- Write a few sentences about the artifact and explain the use case(s) -->\n<!-- Ex%2E: The Migration Wizard enables IAP users to conveniently move their automation use cases between their different IAP environments -->\n<!--  (e%2Eg%2E from Dev to Pre-Production or from Lab to Production)%2E  -->\nThis artifact contains the Cisco ASA group policy object update workflow for Ansible using IAP%2E  This workflow is designed to create and/or update an existing group object to add and remove hosts on a Cisco ASA firewall physical and virtual devices via Ansible%2E\n​\nThis solution consists of the following:\n* Main Workflow (**IAP-Artifacts ASA Firewall Group Policy Update**)\n* Automation Catalog entry (**IAP Artifacts ASA Firewall Object Group Update**)\n* JSON Form (**IAP Artifacts ASA Firewall Object Group Update**)\n​\n<!-- Workflow(s) Image Placeholder - TO BE ADDED DIRECTLY TO GITLAB -->\n<table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/ASA-Firewall-Object-Group-Update/raw/master/images/overview.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n\n​\n## Features\n<!-- Bullet point highlighting the most exciting features of the artifact -->\n<!-- Ex%2E: * Automatically checks for device type -->\n<!-- Ex%2E: * Displays dry-run to user (asking for confirmation) prior to pushing config to the device -->\n<!-- Ex%2E: * Verifies downloaded file integrity (using md5), will try to download again if failed -->\n  * Group Update Host Addition and Removal%2E\n  * Allow for a rollback in case functionality checks have failed%2E\n  * Zero touch mode of operation is available to select via JSON form%2E\n​\n## Requirements\n<!-- Explain any pre-req%2E Ex%2E: This artifact requires Ansible or NSO (with F5 NED) in order to run -->\nThis artifact requires Ansible, Itential Automation Gateway, and a Cisco ASA device%2E\n​\n## Supported Device Types\n  * Cisco ASA/ASAv\n​\n## Test Environment\n  * Devices Ver%2E:\n    * asa: 9%2E12\n  * IAP Ver%2E 2019%2E3%2E2\n  * Itential Automation Gateway Ver%2E: 2%2E36%2E3+2019%2E3%2E14\n  * Ansible Ver%2E: 2%2E8%2E3\n​\n## Future Enhancements\n<!-- OPTIONAL Mention If the artifact has known limited support%2E Ex%2E: This artifact only support Cisco IOS and XR devices -->\n* This workflow is designed to run only against Ansible devices; don't try to run it against Cisco-ASA devices orchastrated by Cisco NSO%2E\n* Form validation on list of hosts only supports IPv4 addresses\n​\n## How to Install\n<!-- OPTIONAL - Explain if external (to IAP) components are required%2E Ex%2E The ansible roles required for this artifact can be found in www%2Egitlab%2Ecom/itentialopensource%2E%2E%2E%2E%2E%2E   -->\n * To install this artifact in IAP, use **App-Artifact** available in Nexus repo%2E \n <table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/ASA-Firewall-Object-Group-Update/raw/master/images/install.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n​\n\n## How to Run\n<!-- Explain what is/are the main entrypoint(s) for this artifact: automation catalog document, workflow builder, postman, etc%2E  -->\nStarting the ASA Firewall Group Policy Update is done via the Automation Catalog%2E Please provide the device, group and hosts in the provided form%2E\n <table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/ASA-Firewall-Object-Group-Update/raw/master/images/runAutomation.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n\n## Additional Information\nPlease use your Itential Customer Success account if you need support when using this artifact%2E\n"
                ]
              },
              "manifest": {
                "type": "object",
                "properties": {
                  "bundleName": {
                    "type": "string",
                    "examples": [
                      "ASA Firewall Object Group Update"
                    ]
                  },
                  "fingerprint": {
                    "type": "string",
                    "examples": [
                      "5e7917201b809a70972fc6e5"
                    ]
                  },
                  "createdEpoch": {
                    "type": "string",
                    "examples": [
                      "1584994080756"
                    ]
                  },
                  "artifacts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "IAP Artifacts ASA Firewall Object Group Update"
                          ]
                        },
                        "name": {
                          "type": "string",
                          "examples": [
                            "IAP Artifacts ASA Firewall Object Group Update"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "ac-agenda-job"
                          ]
                        },
                        "location": {
                          "type": "string",
                          "examples": [
                            "/bundles/ac_agenda_jobs/IAP Artifacts ASA Firewall Object Group Update%2Ejson"
                          ]
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "entryPoint": {
                              "type": "boolean",
                              "examples": [
                                true,
                                false
                              ]
                            }
                          },
                          "required": []
                        }
                      },
                      "required": []
                    },
                    "$id": "artifacts"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "output",
            "type": "object",
            "properties": {
              "componentMap": {
                "type": "object",
                "properties": {
                  "ac-agenda-job": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "automation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "workflow": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "json-forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "mop-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "mop-analytic-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "golden-config": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "treeId": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "transformation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "trigger": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              {
                "ac-agenda-job": [],
                "automation": [],
                "workflow": [],
                "json-forms": [],
                "forms": [],
                "template": [],
                "mop-template": [],
                "mop-analytic-template": [],
                "golden-config": [],
                "transformation": [],
                "trigger": []
              }
            ],
            "view": {
              "row": 2,
              "col": 1
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "input",
              "ptr": "/components"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_3",
              null
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "output",
              "ptr": "/componentMap"
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "examples": [
                      "workflow"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "examples": [
                      "22a02846-c48a-4ced-9609-4e40c7f0eec1"
                    ],
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "examples": [
                      "IAP Artifacts ASA Firewall Object Group Update"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "examples": [
                        "workflow"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "examples": [
                        "22a02846-c48a-4ced-9609-4e40c7f0eec1"
                      ],
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "examples": [
                        "IAP Artifacts ASA Firewall Object Group Update"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "sortComponent",
            "steps": [
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/id"
                },
                "to": {
                  "location": "function",
                  "name": 15,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/name"
                },
                "to": {
                  "location": "function",
                  "name": 15,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "function",
                  "name": 15,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 15,
                "type": "function",
                "function": "userFunc_1",
                "args": [
                  "",
                  "",
                  ""
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 19,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 20,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 21,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 22,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 23,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 24,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 25,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 15,
                  "ptr": "/return/output"
                },
                "to": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 26,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 27,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 28,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 29,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 4
            },
            "id": "ƒ_reduce_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object"
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_2",
            "steps": [
              {
                "id": 1,
                "type": "function",
                "function": "setIdentifier",
                "args": [],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  "treeId",
                  "id"
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "golden-config"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "type"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 11,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 12,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 4
                }
              },
              {
                "id": 13,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 5
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/output"
                },
                "to": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 5,
              "row": 4
            },
            "id": "ƒ_reduce_2",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_3",
            "steps": [
              {
                "id": 1,
                "type": "function",
                "function": "formatComponents",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 6,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/output"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 4
            },
            "id": "ƒ_reduce_3",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "functions": [],
            "name": "ƒ_map_1",
            "steps": [],
            "view": {
              "col": 1,
              "row": 4
            },
            "id": "ƒ_map_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "name",
                "type": "string",
                "examples": [
                  "name"
                ]
              },
              {
                "$id": "_id",
                "type": "string",
                "examples": [
                  "_id"
                ]
              },
              {
                "$id": "type",
                "type": "string",
                "examples": [
                  "fdsa"
                ]
              }
            ],
            "outgoing": [
              {
                "$id": "output",
                "type": "object",
                "properties": {},
                "required": []
              }
            ],
            "functions": [],
            "name": "nameId",
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  "{}"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 9,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  "{}"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "name",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "_id",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "name",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "_id",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "transformation"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 9,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "name",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 10,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "name",
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "id",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 11,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "_id",
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "output",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 4,
              "row": 4
            },
            "id": "userFunc_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "input",
                "type": "object",
                "properties": {
                  "ac-agenda-job": {
                    "type": "array"
                  },
                  "workflow": {
                    "type": "array"
                  },
                  "json-forms": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "template": {
                    "type": "array"
                  },
                  "mop-template": {
                    "type": "array"
                  },
                  "mop-analytic-template": {
                    "type": "array"
                  },
                  "golden-config": {
                    "type": "array"
                  },
                  "transformation": {
                    "type": "array"
                  }
                },
                "required": []
              },
              {
                "$id": "itemToPush",
                "type": "object",
                "properties": {},
                "required": []
              },
              {
                "$id": "type",
                "type": "string",
                "examples": [
                  "type"
                ]
              }
            ],
            "outgoing": [
              {
                "$id": "output",
                "type": "object",
                "properties": {
                  "ac-agenda-job": {
                    "type": "array"
                  },
                  "workflow": {
                    "type": "array"
                  },
                  "json-forms": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "template": {
                    "type": "array"
                  },
                  "mop-template": {
                    "type": "array"
                  },
                  "mop-analytic-template": {
                    "type": "array"
                  },
                  "golden-config": {
                    "type": "array"
                  },
                  "transformation": {
                    "type": "array"
                  }
                },
                "required": []
              }
            ],
            "functions": [],
            "name": "pushComponent",
            "steps": [
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "itemToPush",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "input",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "input",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "output",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 4
            },
            "id": "userFunc_2",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object"
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_2 (1)",
            "steps": [
              {
                "id": 1,
                "type": "function",
                "function": "setIdentifier",
                "args": [
                  "",
                  "",
                  ""
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  "treeId",
                  "id"
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "golden-config"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "type"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 11,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 12,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 4
                }
              },
              {
                "id": 13,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 5
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/output"
                },
                "to": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 5,
              "row": 4
            },
            "id": "ƒ_reduce_2 (1)",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "idType",
                "type": "string"
              },
              {
                "$id": "componentObject",
                "type": "object"
              },
              {
                "$id": "type",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "output",
                "type": "object"
              }
            ],
            "functions": [],
            "name": "setIdentifier",
            "steps": [
              {
                "id": 2,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "componentObject",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "idType",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "method",
                "library": "Object",
                "method": "deleteProperty",
                "args": [
                  null,
                  "type"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "componentObject",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 9,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "transformation"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 13,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 15,
                "type": "method",
                "library": "Object",
                "method": "deleteProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 18,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "golden-config"
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 18,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 20,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  "treeId",
                  "_id"
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 18,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 22,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 23,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 24,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 25,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "idType",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 26,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "output",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 4,
              "row": 4
            },
            "id": "setIdentifier",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "componentObject",
                "type": "object"
              },
              {
                "$id": "type",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "output",
                "type": "object"
              }
            ],
            "functions": [],
            "name": "formatComponents",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "deleteProperty",
                "args": [
                  null,
                  "type"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "componentObject",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "transformation"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "golden-config"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "Logical",
                "method": "or",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 10,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 13,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "_id",
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 15,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "id"
                ],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 18,
                "type": "method",
                "library": "Object",
                "method": "deleteProperty",
                "args": [
                  null,
                  "id"
                ],
                "view": {
                  "row": 3,
                  "col": 4
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 18,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 18,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "output",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 4,
              "row": 4
            },
            "id": "formatComponents",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 4
        },
        "created": "2022-12-02T16:01:37.505Z",
        "createdBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2022-12-02T16:01:37.505Z",
        "lastUpdatedBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.7",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "6239fdc572a2f101008f5cf1",
        "name": "Create prebuilt - convertFormOutputToDiscoveryFormat",
        "description": "",
        "incoming": [
          {
            "$id": "formOutput",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "catalogAutomations": {
                    "type": "array"
                  },
                  "operationsAutomations": {
                    "type": "array"
                  },
                  "workflows": {
                    "type": "array"
                  },
                  "jsonForms": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "templates": {
                    "type": "array"
                  },
                  "commandTemplates": {
                    "type": "array"
                  },
                  "analyticTemplates": {
                    "type": "array"
                  },
                  "goldenConfigTrees": {
                    "type": "array"
                  },
                  "transformations": {
                    "type": "array"
                  },
                  "triggers": {
                    "type": "array"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "discoveryEntryPoint",
            "type": "object",
            "properties": {
              "catalogAutomation": {
                "type": [
                  "null",
                  "array"
                ],
                "items": {
                  "type": "string",
                  "examples": [
                    "zackAll"
                  ]
                }
              },
              "workflow": {
                "type": [
                  "null",
                  "array"
                ]
              },
              "transformation": {
                "type": [
                  "null",
                  "array"
                ]
              },
              "operationsAutomation": {
                "type": [
                  "null",
                  "array"
                ]
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              {
                "catalogAutomation": [],
                "workflow": [],
                "transformation": [],
                "operationsAutomation": []
              }
            ],
            "view": {
              "row": 1,
              "col": 3
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/workflows"
            },
            "to": {
              "location": "function",
              "name": 3,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 2,
            "type": "function",
            "function": "userFunc_1",
            "args": [
              ""
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 3,
            "type": "function",
            "function": "userFunc_1",
            "args": [
              ""
            ],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 2,
              "ptr": "/return/arrayedNames"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 3,
              "ptr": "/return/arrayedNames"
            },
            "to": {
              "location": "method",
              "name": 11,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 8,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "catalogAutomation",
              null
            ],
            "view": {
              "row": 2,
              "col": 3
            }
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 8,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 11,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 11,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "workflow",
              null
            ],
            "view": {
              "row": 3,
              "col": 3
            }
          },
          {
            "id": 14,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 11,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 13,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 13,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "transformation",
              []
            ],
            "view": {
              "row": 4,
              "col": 3
            }
          },
          {
            "id": 21,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/catalogAutomations"
            },
            "to": {
              "location": "function",
              "name": 2,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 22,
            "type": "function",
            "function": "userFunc_1",
            "args": [
              null
            ],
            "view": {
              "row": 3,
              "col": 2
            }
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/operationsAutomations"
            },
            "to": {
              "location": "function",
              "name": 22,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 24,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "operationsAutomation",
              null
            ],
            "view": {
              "row": 5,
              "col": 3
            }
          },
          {
            "id": 25,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 22,
              "ptr": "/return/arrayedNames"
            },
            "to": {
              "location": "method",
              "name": 24,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 26,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 13,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 24,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 27,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 24,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "discoveryEntryPoint",
              "ptr": ""
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "componentArray",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    }
                  },
                  "required": []
                }
              }
            ],
            "outgoing": [
              {
                "$id": "arrayedNames",
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "zackAll"
                  ]
                }
              }
            ],
            "functions": [],
            "name": "process\\Array",
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "componentArray",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Array",
                "method": "map",
                "args": [
                  null,
                  "ƒ_map_1"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "arrayedNames",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 2,
              "row": 7
            },
            "id": "userFunc_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    }
                  },
                  "required": []
                },
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "functions": [],
            "name": "ƒ_map_1",
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/name"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 1,
              "row": 7
            },
            "id": "ƒ_map_1",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 4,
          "row": 7
        },
        "created": "2022-12-02T16:01:37.508Z",
        "createdBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2022-12-02T16:01:37.508Z",
        "lastUpdatedBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.7",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "605b870f21c795008dc26119",
        "name": "createArtifactForPublish",
        "description": "",
        "incoming": [
          {
            "$id": "AEartifactInfo",
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "examples": [
                  "5f7c62f0b80b0a2a91782437"
                ]
              },
              "name": {
                "type": "string",
                "examples": [
                  "@itentialopensource/zackall"
                ]
              },
              "version": {
                "type": "string",
                "examples": [
                  "0.0.1"
                ]
              },
              "description": {
                "type": "string",
                "examples": [
                  "zackAll"
                ]
              },
              "author": {
                "type": "string",
                "examples": [
                  "Itential Artifacts"
                ]
              },
              "repository": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "examples": [
                      "git"
                    ]
                  },
                  "url": {
                    "type": "string",
                    "examples": [
                      "https://gitlab.com/itentialopensource/pre-built-automations/"
                    ]
                  }
                },
                "required": []
              },
              "license": {
                "type": "string",
                "examples": [
                  "Apache-2.0"
                ]
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "Itential"
                  ]
                },
                "$id": "keywords"
              },
              "IAPDependencies": {
                "type": "object",
                "properties": {
                  "@itential/app-automation_catalog": {
                    "type": "string"
                  },
                  "@itential/app-json_forms": {
                    "type": "string"
                  },
                  "@itential/app-workflow_engine": {
                    "type": "string"
                  },
                  "@itential/app-mop": {
                    "type": "string"
                  },
                  "@itential/app-template_builder": {
                    "type": "string"
                  },
                  "@itential/app-form_builder": {
                    "type": "string"
                  }
                },
                "required": []
              },
              "gitlabId": {
                "type": "integer",
                "examples": [
                  1601987312797
                ]
              },
              "components": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "examples": [
                        "ac-agenda-job"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "examples": [
                        "5f7c622d038374d99a024d66"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "components"
              },
              "readme": {
                "type": "string",
                "examples": [
                  "zackAll"
                ]
              },
              "manifest": {
                "type": "object",
                "properties": {
                  "bundleName": {
                    "type": "string",
                    "examples": [
                      "ZackAll"
                    ]
                  },
                  "fingerprint": {
                    "type": "string",
                    "examples": [
                      "5f7c62f077c8212a9141d822"
                    ]
                  },
                  "createdEpoch": {
                    "type": "string",
                    "examples": [
                      "1601987312364"
                    ]
                  },
                  "artifacts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "ac-agenda-job"
                          ]
                        },
                        "location": {
                          "type": "string",
                          "examples": [
                            "/bundles/ac_agenda_jobs/zackAll.json"
                          ]
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "entryPoint": {
                              "type": "boolean",
                              "examples": [
                                true,
                                false
                              ]
                            }
                          },
                          "required": []
                        }
                      },
                      "required": []
                    },
                    "$id": "artifacts"
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "formOutput",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "catalogAutomations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "catalogAutomations"
                  },
                  "operationsAutomations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "operationsAutomations"
                  },
                  "workflows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "workflows"
                  },
                  "jsonForms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "jsonForms"
                  },
                  "templates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "templates"
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "Demo"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "forms"
                  },
                  "commandTemplates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "commandTemplates"
                  },
                  "analyticTemplates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "analyticTemplates"
                  },
                  "transformations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "transformations"
                  },
                  "goldenConfigTrees": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "treeId": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "goldenConfigTrees"
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "discovery",
            "type": "object",
            "properties": {
              "componentMap": {
                "type": "object",
                "properties": {
                  "ac-agenda-job": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "ac-agenda-job"
                  },
                  "automation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "automation"
                  },
                  "workflow": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "ac-agenda-job"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "workflow"
                  },
                  "json-forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c6221e607880ade9b11bb"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "ac-agenda-job"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "json-forms"
                  },
                  "mop-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "mop-template"
                  },
                  "template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "template"
                  },
                  "mop-analytic-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "mop-analytic-template"
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "forms"
                  },
                  "transformation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "transformation"
                  },
                  "golden-config": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "treeId": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "golden-config"
                  }
                },
                "required": []
              },
              "dependencies": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "@itential/app-automation_catalog"
                  ]
                },
                "$id": "dependencies"
              },
              "invalidComponents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "examples": [
                        "golden-config"
                      ]
                    },
                    "component": {
                      "type": "object",
                      "properties": {
                        "treeId": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    }
                  },
                  "required": []
                },
                "$id": "invalidComponents"
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "mata",
            "type": "object",
            "properties": {
              "metadata": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "ZackAll"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  },
                  "contributor": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  },
                  "readme": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  },
                  "license": {
                    "type": "string"
                  },
                  "categories": {
                    "type": "array"
                  },
                  "keywords": {
                    "type": "array"
                  },
                  "dependencies": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "@itential/app-automation_catalog"
                      ]
                    }
                  }
                },
                "required": []
              },
              "components": {
                "type": "object",
                "properties": {
                  "ac-agenda-job": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "automation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "workflow": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "ac-agenda-job"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "json-forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c6221e607880ade9b11bb"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "ac-agenda-job"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "mop-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "mop-analytic-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "golden-config": {
                    "type": "array"
                  },
                  "transformation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "packageJSON",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "examples": [
                  "@itentialopensource/artifact-template"
                ]
              },
              "version": {
                "type": "string",
                "examples": [
                  "0.0.5"
                ]
              },
              "description": {
                "type": "string",
                "examples": [
                  "Template for creating new artifacts"
                ]
              },
              "scripts": {
                "type": "object",
                "properties": {
                  "test": {
                    "type": "string",
                    "examples": [
                      "echo \"Error: no test specified\" && exit 1"
                    ]
                  },
                  "deploy": {
                    "type": "string",
                    "examples": [
                      "echo not needed npm publish --access=public --registry=http://registry.npmjs.org"
                    ]
                  },
                  "validateSchema": {
                    "type": "string",
                    "examples": [
                      "node test/manifestTester.js manifest.json manifest-schema.json"
                    ]
                  },
                  "validateSchemaLinks": {
                    "type": "string",
                    "examples": [
                      "node test/manifestLinkTester.js manifest.json"
                    ]
                  },
                  "generateImageLinks": {
                    "type": "string",
                    "examples": [
                      "node utils/generateImageLinks.js"
                    ]
                  }
                },
                "required": []
              },
              "repository": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "examples": [
                      "git"
                    ]
                  },
                  "url": {
                    "type": "string",
                    "examples": [
                      "https://gitlab.com/itentialopensource/pre-built-automations/artifact-template.git"
                    ]
                  }
                },
                "required": []
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "Itential"
                  ]
                }
              },
              "contributors": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "Itential Artifacts"
                  ]
                }
              },
              "author": {
                "type": "string",
                "examples": [
                  "Itential Artifacts"
                ]
              },
              "license": {
                "type": "string",
                "examples": [
                  "Apache-2.0"
                ]
              },
              "devDependencies": {
                "type": "object",
                "properties": {
                  "r2": {
                    "type": "string",
                    "examples": [
                      "^2.0.1"
                    ]
                  },
                  "ajv": {
                    "type": "string",
                    "examples": [
                      "6.10.0"
                    ]
                  },
                  "better-ajv-errors": {
                    "type": "string",
                    "examples": [
                      "^0.6.1"
                    ]
                  },
                  "fs-extra": {
                    "type": "string",
                    "examples": [
                      "^7.0.1"
                    ]
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/readme"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/readme"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/description"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/description"
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/repository"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/repository"
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/version"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/version"
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/keywords"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/keywords"
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/license"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/license"
            }
          },
          {
            "id": 11,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              "{         \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",         \"deploy\": \"echo not needed npm publish --access=public --registry=http://registry.npmjs.org\",         \"validateSchema\": \"node test/manifestTester.js manifest.json manifest-schema.json\",         \"validateSchemaLinks\": \"node test/manifestLinkTester.js manifest.json\",         \"generateImageLinks\": \"node utils/generateImageLinks.js\"     }"
            ],
            "view": {
              "row": 9,
              "col": 3
            }
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/author"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/author"
            }
          },
          {
            "id": 14,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              "{         \"r2\": \"^2.0.1\",         \"ajv\": \"6.10.0\",         \"better-ajv-errors\": \"^0.6.1\",         \"fs-extra\": \"^7.0.1\"     }"
            ],
            "view": {
              "row": 11,
              "col": 3
            }
          },
          {
            "id": 17,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [
              "Itential Artifacts"
            ],
            "view": {
              "row": 10,
              "col": 3
            },
            "polymorphIndex": 0
          },
          {
            "id": 19,
            "type": "declaration",
            "library": "String",
            "method": "new String",
            "args": [
              "Itential Artifacts"
            ],
            "view": {
              "row": 1,
              "col": 4
            }
          },
          {
            "id": 21,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [],
            "view": {
              "row": 2,
              "col": 4
            },
            "polymorphIndex": 0
          },
          {
            "id": 25,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/workflows"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/workflow"
            }
          },
          {
            "id": 26,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/jsonForms"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/json-forms"
            }
          },
          {
            "id": 27,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/forms"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/forms"
            }
          },
          {
            "id": 28,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/templates"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/template"
            }
          },
          {
            "id": 29,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/commandTemplates"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/mop-template"
            }
          },
          {
            "id": 30,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/analyticTemplates"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/mop-analytic-template"
            }
          },
          {
            "id": 31,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/transformations"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/transformation"
            }
          },
          {
            "id": 32,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discovery",
              "ptr": "/dependencies"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/dependencies"
            }
          },
          {
            "id": 48,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/name"
            },
            "to": {
              "location": "method",
              "name": 47,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 59,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/name"
            },
            "to": {
              "location": "method",
              "name": 35,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 11,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/scripts"
            }
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 14,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/devDependencies"
            }
          },
          {
            "id": 18,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 17,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/contributors"
            }
          },
          {
            "id": 20,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 19,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/contributor"
            }
          },
          {
            "id": 22,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 21,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/categories"
            }
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 21,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/keywords"
            }
          },
          {
            "id": 41,
            "type": "method",
            "library": "String",
            "method": "includes",
            "args": [
              null,
              "/",
              null
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 47,
            "type": "method",
            "library": "String",
            "method": "split",
            "args": [
              null,
              "/",
              null
            ],
            "view": {
              "row": 4,
              "col": 1
            }
          },
          {
            "id": 43,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 41,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 35,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 50,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 47,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 49,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 53,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 47,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 52,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 52,
            "type": "method",
            "library": "Array",
            "method": "length",
            "args": [
              null
            ],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 56,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 52,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 55,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 55,
            "type": "method",
            "library": "Math",
            "method": "subtract",
            "args": [
              null,
              1
            ],
            "view": {
              "row": 2,
              "col": 3
            }
          },
          {
            "id": 57,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 55,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 49,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 49,
            "type": "method",
            "library": "Array",
            "method": "getIndex",
            "args": [
              null,
              null
            ],
            "view": {
              "row": 3,
              "col": 2
            }
          },
          {
            "id": 58,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 49,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 35,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 35,
            "type": "method",
            "library": "Conditional",
            "method": "ternary",
            "args": [
              null,
              null,
              null
            ],
            "view": {
              "row": 1,
              "col": 3
            }
          },
          {
            "id": 36,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 35,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/name"
            }
          },
          {
            "id": 60,
            "type": "method",
            "library": "String",
            "method": "concat",
            "args": [
              null,
              "/",
              "artifact-template"
            ],
            "view": {
              "row": 8,
              "col": 4
            }
          },
          {
            "id": 62,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 60,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/name"
            }
          },
          {
            "id": 64,
            "type": "method",
            "library": "Conditional",
            "method": "ternary",
            "args": [
              null,
              null,
              null
            ],
            "view": {
              "row": 3,
              "col": 3
            }
          },
          {
            "id": 66,
            "type": "method",
            "library": "Array",
            "method": "getIndex",
            "args": [
              null,
              0
            ],
            "view": {
              "row": 5,
              "col": 3
            }
          },
          {
            "id": 69,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 47,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 66,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 70,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 66,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 64,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 71,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 41,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 64,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 72,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/name"
            },
            "to": {
              "location": "method",
              "name": 64,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 73,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 64,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 60,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 74,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/name"
            },
            "to": {
              "location": "method",
              "name": 41,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 75,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/catalogAutomations"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/ac-agenda-job"
            }
          },
          {
            "id": 76,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/operationsAutomations"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/automation"
            }
          },
          {
            "id": 77,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/goldenConfigTrees"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/golden-config"
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 4,
          "row": 12
        },
        "created": "2022-12-02T16:01:37.497Z",
        "createdBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2022-12-02T16:01:37.497Z",
        "lastUpdatedBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.7",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "605b86f821c795008dc26118",
        "name": "mergeFormWithDiscovery",
        "description": "",
        "incoming": [
          {
            "$id": "formOutput",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "workflows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "workflows"
                  },
                  "catalogAutomations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "catalogAutomations"
                  },
                  "operationsAutomations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "operationsAutomations"
                  },
                  "jsonForms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "jsonForms"
                  },
                  "templates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "templates"
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "forms"
                  },
                  "commandTemplates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "commandTemplates"
                  },
                  "analyticTemplates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "analyticTemplates"
                  },
                  "goldenConfigTrees": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "$id": "goldenConfigTrees"
                  },
                  "transformations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "transformations"
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "discoveryOutput",
            "type": "object",
            "properties": {
              "componentMap": {
                "type": "object",
                "properties": {
                  "workflow": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "ac-agenda-job"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "workflow"
                  },
                  "ac-agenda-job": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "ac-agenda-job"
                  },
                  "automation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "automation"
                  },
                  "transformation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        },
                        "name": {
                          "type": "string"
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "transformation"
                  },
                  "mop-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "mop-template"
                  },
                  "template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "template"
                  },
                  "mop-analytic-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "mop-analytic-template"
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "forms"
                  },
                  "json-forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "json-forms"
                  },
                  "golden-config": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "golden-config"
                  }
                },
                "required": []
              },
              "dependencies": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "@itential/app-workflow_engine"
                  ]
                },
                "$id": "dependencies"
              },
              "invalidComponents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "examples": [
                        "golden-config"
                      ]
                    },
                    "component": {
                      "type": "object",
                      "properties": {
                        "treeId": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    }
                  },
                  "required": []
                },
                "$id": "invalidComponents"
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "formInput",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "workflows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "catalogAutomations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "operationsAutomations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "jsonForms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "templates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "commandTemplates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "analyticTemplates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "goldenConfigTrees": {
                    "type": "array"
                  },
                  "transformations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/workflow"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/workflows"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/jsonForms"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/json-forms"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 14,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/templates"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/template"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 16,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/forms"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 17,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/forms"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 18,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/commandTemplates"
            },
            "to": {
              "location": "method",
              "name": 9,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 19,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/mop-template"
            },
            "to": {
              "location": "method",
              "name": 9,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 21,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/analyticTemplates"
            },
            "to": {
              "location": "method",
              "name": 20,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 22,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/mop-analytic-template"
            },
            "to": {
              "location": "method",
              "name": 20,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 30,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/transformation"
            },
            "to": {
              "location": "method",
              "name": 29,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 31,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/transformations"
            },
            "to": {
              "location": "method",
              "name": 29,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 6,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 3,
              "col": 2
            }
          },
          {
            "id": 7,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 4,
              "col": 2
            }
          },
          {
            "id": 8,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 5,
              "col": 2
            }
          },
          {
            "id": 9,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 6,
              "col": 2
            }
          },
          {
            "id": 20,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 7,
              "col": 2
            }
          },
          {
            "id": 29,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_2",
              null
            ],
            "view": {
              "row": 9,
              "col": 2
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/workflows"
            }
          },
          {
            "id": 24,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/jsonForms"
            }
          },
          {
            "id": 25,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 7,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/templates"
            }
          },
          {
            "id": 26,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 8,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/forms"
            }
          },
          {
            "id": 27,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 9,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/commandTemplates"
            }
          },
          {
            "id": 28,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 20,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/analyticTemplates"
            }
          },
          {
            "id": 32,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 29,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/transformations"
            }
          },
          {
            "id": 33,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/ac-agenda-job"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/catalogAutomations"
            }
          },
          {
            "id": 34,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/automation"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/operationsAutomations"
            }
          },
          {
            "id": 35,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 10,
              "col": 2
            }
          },
          {
            "id": 36,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/golden-config"
            },
            "to": {
              "location": "method",
              "name": 35,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 37,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/goldenConfigTrees"
            },
            "to": {
              "location": "method",
              "name": 35,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 38,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 35,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/goldenConfigTrees"
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  },
                  "parent": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "ac-agenda-job"
                          ]
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    },
                    "parent": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "examples": [
                              "zackAll"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "examples": [
                              "ac-agenda-job"
                            ]
                          }
                        },
                        "required": []
                      }
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_1",
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 7,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  "{         \"name\": \"\"       }"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "function",
                "function": "userFunc_1",
                "args": [
                  "",
                  ""
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/isNewComponent"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "name",
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 9,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 4
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 21,
                "type": "method",
                "library": "Object",
                "method": "keys",
                "args": [
                  null
                ],
                "view": {
                  "row": 4,
                  "col": 1
                }
              },
              {
                "id": 22,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 23,
                "type": "method",
                "library": "Array",
                "method": "includes",
                "args": [
                  null,
                  "treeId",
                  null
                ],
                "view": {
                  "row": 4,
                  "col": 2
                }
              },
              {
                "id": 24,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 23,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 25,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 4,
                  "col": 3
                }
              },
              {
                "id": 26,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 23,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 25,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 29,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "treeId",
                  null
                ],
                "view": {
                  "row": 5,
                  "col": 2
                }
              },
              {
                "id": 30,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 29,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 31,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 25,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 32,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 33,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 25,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 34,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "treeId"
                ],
                "view": {
                  "row": 5,
                  "col": 1
                }
              },
              {
                "id": 35,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 34,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 36,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 34,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 29,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 37,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 29,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 25,
                  "ptr": "/args/1/value"
                }
              }
            ],
            "view": {
              "col": 4,
              "row": 6
            },
            "id": "ƒ_reduce_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "examples": [
                        "5f7c62b43451a606c2fb0305"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "examples": [
                      "5f7c62b43451a606c2fb0305"
                    ]
                  },
                  "parent": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "workflow"
                          ]
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "examples": [
                        "5f7c62b43451a606c2fb0305"
                      ]
                    },
                    "parent": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "examples": [
                              "zackAll"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "examples": [
                              "workflow"
                            ]
                          }
                        },
                        "required": []
                      }
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_2",
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 7,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  "{}"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/id"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "function",
                "function": "newComponentCheck_transformations",
                "args": [
                  "",
                  ""
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/inNewComponent"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "id",
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 11,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 4
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 16,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "name",
                  null
                ],
                "view": {
                  "row": 4,
                  "col": 2
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 19,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "name"
                ],
                "view": {
                  "row": 4,
                  "col": 1
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/args/2/value"
                }
              }
            ],
            "view": {
              "col": 4,
              "row": 6
            },
            "id": "ƒ_reduce_2",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    }
                  },
                  "required": []
                }
              },
              {
                "$id": "currentDiscoveredElement",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  },
                  "parent": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "ac-agenda-job"
                          ]
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": []
              }
            ],
            "outgoing": [
              {
                "$id": "isNewComponent",
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              }
            ],
            "functions": [],
            "name": "newComponentCheck",
            "steps": [
              {
                "id": 1,
                "type": "declaration",
                "library": "Boolean",
                "method": "new Boolean",
                "args": [
                  "1"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentDiscoveredElement",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/3/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Array",
                "method": "reduce",
                "args": [
                  null,
                  "newCompunentCheck_reduce",
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "isNewComponent",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 2,
              "row": 6
            },
            "id": "userFunc_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    }
                  },
                  "required": []
                },
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_name": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  }
                },
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "newCompunentCheck_reduce",
            "steps": [
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/0_name"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 10,
                "type": "declaration",
                "library": "Number",
                "method": "new Number",
                "args": [
                  "0"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "declaration",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "declaration",
                "library": "Boolean",
                "method": "new Boolean",
                "args": [
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 4,
              "row": 6
            },
            "id": "newCompunentCheck_reduce",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "examples": [
                        "5f7c62b43451a606c2fb0305"
                      ]
                    }
                  },
                  "required": []
                }
              },
              {
                "$id": "curentDiscoveredJST",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "examples": [
                      "5f7c62b43451a606c2fb0305"
                    ]
                  }
                },
                "required": []
              }
            ],
            "outgoing": [
              {
                "$id": "inNewComponent",
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              }
            ],
            "functions": [],
            "name": "newComponentCheck_transformations",
            "steps": [
              {
                "id": 1,
                "type": "declaration",
                "library": "Boolean",
                "method": "new Boolean",
                "args": [
                  "1"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "curentDiscoveredJST",
                  "ptr": "/id"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/3/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Array",
                "method": "reduce",
                "args": [
                  null,
                  "newComponentCheck_JST_reduce",
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "inNewComponent",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 6
            },
            "id": "newComponentCheck_transformations",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "examples": [
                      "5f7c62b43451a606c2fb0305"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "examples": [
                        "5f7c62b43451a606c2fb0305"
                      ]
                    }
                  },
                  "required": []
                },
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_id": {
                    "type": "string",
                    "examples": [
                      "5f7c62b43451a606c2fb0305"
                    ]
                  }
                },
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "newComponentCheck_JST_reduce",
            "steps": [
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/id"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/0_id"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 10,
                "type": "declaration",
                "library": "Number",
                "method": "new Number",
                "args": [
                  "0"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "declaration",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "declaration",
                "library": "Boolean",
                "method": "new Boolean",
                "args": [
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 6
            },
            "id": "newComponentCheck_JST_reduce",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 4,
          "row": 11
        },
        "created": "2022-12-02T16:01:37.509Z",
        "createdBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2022-12-02T16:01:37.509Z",
        "lastUpdatedBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.7",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "621002baa161ae00ef6164b5",
        "name": "translateSchemaPushBundles",
        "description": "Takes in the output of the componentDiscovery task in appartifacts and outputs a format that can be used in a form where the components can be edited.",
        "incoming": [
          {
            "$id": "componentDiscoveryOutput",
            "type": "object",
            "properties": {
              "componentMap": {
                "type": "object",
                "properties": {
                  "workflow": {
                    "type": "array"
                  },
                  "ac-agenda-job": {
                    "type": "array"
                  },
                  "automation": {
                    "type": "array"
                  },
                  "trigger": {
                    "type": "array"
                  },
                  "json-forms": {
                    "type": "array"
                  },
                  "template": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "mop-template": {
                    "type": "array"
                  },
                  "mop-analytic-template": {
                    "type": "array"
                  },
                  "golden-config": {
                    "type": "array"
                  },
                  "transformation": {
                    "type": "array"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "componentEditorFormInput",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "workflows": {
                    "type": "array"
                  },
                  "catalogAutomations": {
                    "type": "array"
                  },
                  "operationsAutomations": {
                    "type": "array"
                  },
                  "triggers": {
                    "type": "array"
                  },
                  "jsonForms": {
                    "type": "array"
                  },
                  "templates": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "commandTemplates": {
                    "type": "array"
                  },
                  "analyticTemplates": {
                    "type": "array"
                  },
                  "goldenConfigTrees": {
                    "type": "array"
                  },
                  "transformations": {
                    "type": "array"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/workflow"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/workflows"
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/ac-agenda-job"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/catalogAutomations"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/automation"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/operationsAutomations"
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/trigger"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/triggers"
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/json-forms"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/jsonForms"
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/template"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/templates"
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/forms"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/forms"
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/mop-template"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/commandTemplates"
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/mop-analytic-template"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/analyticTemplates"
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/golden-config"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/goldenConfigTrees"
            }
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/transformation"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/transformations"
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2022-12-02T16:01:37.499Z",
        "createdBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2022-12-02T16:01:37.499Z",
        "lastUpdatedBy": {
          "_id": "618009a031d7680dbad39d8b",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.7",
        "tags": []
      }
    }
  ],
  "readme": "# Pre-Built Wizard\n\n## Table of Contents\n\n- [Overview](#overview)\n- [Installation Prerequisites](#installation-prerequisites)\n- [What is Pre-Built Wizard](#what-is-Pre-Built-wizard)\n- [How to Install](#how-to-install)\n- [Supported Components](#supported-components)\n- [Creating A New Pre-Built](#creating-a-new-Pre-Built-Bundle)\n- [Updating A Pre-Built Bundle](#updating-a-Pre-Built-Bundle)\n- [Additional Information](#additional-information)\n\n## Overview\n\nThis pre-built includes both the Prebuilt Wizard and Prebuilt Wizard Re-Discovery automation catalog items. The Pre-Built Wizard AC focuses on pre-built creation and export. More information can be found in the [What is Pre-Built Wizard section](#what-is-Pre-Built-wizard) \n\n>**Note**: The terms `Artifact` and `Pre-built` are synonyms.\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n<!-- Include any other required apps or adapters in this list -->\n<!-- Ex.: EC2 Adapter -->\n* Itential Automation Platform\n  * `^2021.2`\n* App-Artifacts\n  * `6.1.16-2021.1.2`\n\n\n## What is Pre-Built Wizard\n\nThe Pre-Built Wizard pre-built is composed of two automation catalog entries to help you create and update pre-builts. Pre-Built Wizard allows you to create new bundles (shown as installed prebuilt in admin essentials) from pre-defined entrypoint list (Operations Manager(s), Automation Catalog(s), and/or Workflow(s)). After performing discovery, Pre-Built Wizard will display the full list of components that will be used to create the Pre-Built bundle's artifact.json file. Users have the option to modify this list during the automation, provided Zero Touch mode is not selected. Pre-Built Wizard will install the Pre-Built into Admin Essentials and provide a download link for the bundle file. If components of this Prebuilt change over time, the Prebuilt Wizard Re-Discovery automation catalog item can be used run discovery on the prebuilt again and update the component list in Admin Essentials.\n\n## How to Install\n\nTo install Pre-Built Wizard, verify you are running a supported version of Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section. If you do not currently have App-Artifacts installed as a service on your node, the `.tgz` file or \"tarball\" can be obtained from the [Nexus repository](https://registry.aws.itential.com/#browse/browse:app-prebuilt_automations). Please refer to the instructions included in the App-Artifacts README to install it.\n\nPre-Built Wizard can be installed from within Admin Essentials. Simply search for `prebuilt-wizard` and click the **Install** button as shown below.\n\n<!-- ![install](https://gitlab.com/itentialopensource/pre-built-automations/prebuilt-wizard/-/raw/release/2021.2/images/install.png) -->\n<table><tr><td>\n<img src=\"https://gitlab.com/itentialopensource/pre-built-automations/prebuilt-wizard/-/raw/release/2021.2/images/install.png\" alt=\"install\" width=\"800px\">\n</td></tr></table>\n\nAlternatively, you may download the `artifact.json` file, and import it through admin essentials app.\n\n## Supported Components\n\nThe Itential Automation Platform components that Pre-Built Wizard can currently consume include:\n\n- Automation Catalog items\n- Operations Manager items\n- Form Builder Forms\n- JSON-Forms\n- Mop-Templates\n- Mop-Analytic Templates\n- Workflows\n- Transformations\n- Jinja2 Templates\n- TextFSM Templates\n- Golden Configuration Trees\n\n## Creating A New Pre-Built bundle\n\nTo create a new Pre-Built bundle, you must fill out the necessary form data for the automation. \nThese fields include:\n- scope\n- pre-built name\n- pre-built description\n- License (optional)\n- contributor\n- README\n- categories (optional)\n- keywords (optional)\n- entry point(s)\n\n<!-- ![create new Pre-Built](https://gitlab.com/itentialopensource/pre-built-automations/prebuilt-wizard/-/raw/release/2021.2/images/run_new.png) -->\n<table><tr><td>\n<img src=\"https://gitlab.com/itentialopensource/pre-built-automations/prebuilt-wizard/-/raw/release/2021.2/images/run_new.png\" alt=\"create new Pre-Built\" width=\"600px\">\n</td></tr></table>\n\nPre-builts must have a scope specified. \n\nIt is important to remember that the entry point to the bundle for the Pre-Built Wizard automation Catalog _must_ be an Operations Manager(s), Automation Catalog(s), Workflow item(s). The item(s) should supply both a workflow and a form as an entry point for the Pre-Built. Any job variables required for the workflow to run should be supplied by the accompanying form, and will be accessible to the workflow via the `formData` object.\n\nAfter you click the **Run** button, Pre-Built Wizard will discover all dependencies required by the workflow selected in the Automation Catalog item, as well as version information for each IAP application required to install the bundled Pre-Built. The results of the discovery will be displayed for you to confirm (when not running in Zero Touch mode).\n\n\n## Updating A Pre-Built Bundle\n\nThe Prebuilt Wizard Re-Discovery automation catalog item consists of a form with one required field: the name of the Prebuilt installed in admin essentials. After selecting the Prebuilt to run Re-Discovery on, press start. If there are components that are no longer inlucded in the Prebuilt, be sure to remove them when working the first manual task in the workflow. Further, if there are any components that were manually added to the Prebuilt, ensure that those items are still present in this manual task. Any new components will be discovered and the new prebuilt contents will replace the old in Admin Essentials.\n\n<!-- ![discovery](https://gitlab.com/itentialopensource/pre-built-automations/prebuilt-wizard/-/raw/release/2021.2/images/discovery.png) -->\n<table><tr><td>\n<img src=\"https://gitlab.com/itentialopensource/pre-built-automations/prebuilt-wizard/-/raw/release/2021.2/images/discovery.png\" alt=\"discovery\" width=\"400px\">\n</td></tr></table>\n\n## Additional Information\n\nPlease use your Itential Service Desk account if support is needed when using the Pre-Built Wizard.\n"
}