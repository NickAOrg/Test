{
  "_id": "61a8f96c972d5600e3de8552",
  "name": "Create prebuilt - Get formData",
  "description": "Takes in the formData for the 'Create a new prebuilt master' workflow and returns the parsed variables.",
  "incoming": [
    {
      "$id": "formData",
      "type": "object",
      "properties": {
        "scope": {
          "type": "string",
          "examples": [
            "@acme"
          ]
        },
        "prebuiltName": {
          "type": "string",
          "examples": [
            "Example Prebuilt"
          ]
        },
        "prebuiltDescription": {
          "type": "string",
          "default": "",
          "examples": [
            "This prebuilt will accomplish a particular use case"
          ]
        },
        "readme": {
          "type": "string",
          "examples": [
            "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->  <!-- Update the below line with your Pre-Built name --> # Pre-Built Name  <!-- Leave TOC intact unless you've added or removed headers --> ## Table of Contents  * [Overview](#overview) * [Installation Prerequisites](#installation-prerequisites) * [Requirements](#requirements) * [Features](#features) * [Future Enhancements](#future-enhancements) * [How to Install](#how-to-install) * [How to Run](#how-to-run) * [Additional Information](#additional-information)  ## Overview  <!-- Write a few sentences about the Pre-Built and explain the use case(s) --> <!-- Avoid using the word Artifact%2E Please use Pre-Built, Pre-Built Transformation or Pre-Built Automation --> <!-- Ex%2E: The Migration Wizard enables IAP users to conveniently move their automation use cases between different IAP environments --> <!-- (e%2Eg%2E from Dev to Pre-Production or from Lab to Production)%2E -->  <!-- Workflow(s) Image Placeholder - TO BE ADDED DIRECTLY TO GitLab --> <!-- REPLACE COMMENT BELOW WITH IMAGE OF YOUR MAIN WORKFLOW --> <!-- <table><tr><td>   <img src=\"./images/workflow.png\" alt=\"workflow\" width=\"800px\"> </td></tr></table> --> <!-- REPLACE COMMENT ABOVE WITH IMAGE OF YOUR MAIN WORKFLOW -->  <!-- ADD ESTIMATED RUN TIME HERE --> <!-- e%2Eg%2E Estimated Run Time: 34 min%2E --> _Estimated Run Time_:  ## Installation Prerequisites  Users must satisfy the following pre-requisites:  <!-- Include any other required apps or adapters in this list --> <!-- Ex%2E: EC2 Adapter --> * Itential Automation Platform   * `^2020%2Ex%2Ex`  ## Requirements  This Pre-Built requires the following:  <!-- Unordered list highlighting the requirements of the Pre-Built --> <!-- EXAMPLE --> <!-- * cisco ios device --> <!-- * Ansible or NSO (with F5 NED) * -->  ## Features  The main benefits and features of the Pre-Built are outlined below%2E  <!-- Unordered list highlighting the most exciting features of the Pre-Built --> <!-- EXAMPLE --> <!-- * Automatically checks for device type --> <!-- * Displays dry-run to user (asking for confirmation) prior to pushing config to the device --> <!-- * Verifies downloaded file integrity (using md5), will try to download again if failed -->   ## Future Enhancements  <!-- OPTIONAL - Mention if the Pre-Built will be enhanced with additional features on the road map --> <!-- Ex%2E: This Pre-Built would support Cisco XR and F5 devices -->  ## How to Install  To install the Pre-Built:  * Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the Pre-Built%2E  * The Pre-Built can be installed from within App-Admin_Essential%2E Simply search for the name of your desired Pre-Built and click the install button (as shown below)%2E  <!-- REPLACE BELOW WITH IMAGE OF YOUR PUBLISHED PRE-BUILT --> <!-- <table><tr><td>   <img src=\"./images/install.png\" alt=\"install\" width=\"600px\"> </td></tr></table> --> <!-- REPLACE ABOVE WITH IMAGE OF YOUR PUBLISHED PRE-BUILT -->  <!-- OPTIONAL - Explain if external components are required outside of IAP --> <!-- Ex%2E: The Ansible roles required for this Pre-Built can be found in the repository located at https://gitlab%2Ecom/itentialopensource/pre-built-automations/hello-world -->  ## How to Run  Use the following to run the Pre-Built:  <!-- Explain the main entrypoint(s) for this Pre-Built: Automation Catalog item, Workflow, Postman, etc%2E -->  ## Additional Information  Please use your Itential Customer Success account if you need support when using this Pre-Built%2E"
          ]
        },
        "zeroTouch": {
          "type": "boolean",
          "examples": [
            true,
            false
          ]
        },
        "license": {
          "type": "string",
          "default": "Apache 2%2E0",
          "examples": [
            "Apache 2%2E0"
          ]
        },
        "contributor": {
          "type": "string",
          "examples": [
            "John Smith"
          ]
        },
        "categories": {
          "type": "array",
          "default": []
        },
        "keywords": {
          "type": "array",
          "default": []
        },
        "operationsManagerAutomations": {
          "type": "array",
          "default": []
        },
        "automationCatalogs": {
          "type": "array",
          "default": []
        },
        "automationWorkflows": {
          "type": "array",
          "default": []
        }
      },
      "required": []
    }
  ],
  "outgoing": [
    {
      "$id": "scope",
      "type": "string",
      "examples": [
        "@acme"
      ]
    },
    {
      "$id": "prebuiltName",
      "type": "string",
      "examples": [
        "Example Prebuilt"
      ]
    },
    {
      "$id": "prebuiltDescription",
      "type": "string",
      "examples": [
        "This prebuilt will accomplish a particular use case"
      ]
    },
    {
      "$id": "readme",
      "type": "string",
      "examples": [
        "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->"
      ]
    },
    {
      "$id": "zeroTouch",
      "type": "boolean",
      "examples": [
        true,
        false
      ]
    },
    {
      "$id": "license",
      "type": "string",
      "examples": [
        "Apache 2%2E0"
      ]
    },
    {
      "$id": "contributor",
      "type": "string",
      "examples": [
        "John Smith"
      ]
    },
    {
      "$id": "categories",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "examples": [
              "DevOps"
            ]
          }
        },
        "required": []
      }
    },
    {
      "$id": "keywords",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "keyword": {
            "type": "string",
            "examples": [
              "exampleKeyword"
            ]
          }
        },
        "required": []
      }
    },
    {
      "$id": "operationsManagerOperations",
      "type": "array",
      "items": {
        "type": "string",
        "examples": [
          "Allocate CIDR"
        ]
      }
    },
    {
      "$id": "automationCatalogs",
      "type": "array",
      "items": {
        "type": "string",
        "examples": [
          "Allocate CIDR"
        ]
      }
    },
    {
      "$id": "automationWorkflows",
      "type": "array",
      "items": {
        "type": "string",
        "examples": [
          "Allocate CIDR Master Workflow"
        ]
      }
    }
  ],
  "steps": [
    {
      "id": 8,
      "type": "method",
      "library": "Array",
      "method": "map",
      "args": [
        null,
        "getNameValue"
      ],
      "view": {
        "row": 2,
        "col": 1
      }
    },
    {
      "id": 10,
      "type": "assign",
      "from": {
        "location": "method",
        "name": 8,
        "ptr": "/return"
      },
      "to": {
        "location": "outgoing",
        "name": "operationsManagerOperations",
        "ptr": ""
      }
    },
    {
      "id": 11,
      "type": "method",
      "library": "Array",
      "method": "map",
      "args": [
        null,
        "getNameValue"
      ],
      "view": {
        "row": 3,
        "col": 1
      }
    },
    {
      "id": 13,
      "type": "assign",
      "from": {
        "location": "method",
        "name": 11,
        "ptr": "/return"
      },
      "to": {
        "location": "outgoing",
        "name": "automationCatalogs",
        "ptr": ""
      }
    },
    {
      "id": 14,
      "type": "method",
      "library": "Array",
      "method": "map",
      "args": [
        null,
        "getNameValue"
      ],
      "view": {
        "row": 4,
        "col": 1
      }
    },
    {
      "id": 16,
      "type": "assign",
      "from": {
        "location": "method",
        "name": 14,
        "ptr": "/return"
      },
      "to": {
        "location": "outgoing",
        "name": "automationWorkflows",
        "ptr": ""
      }
    },
    {
      "id": 17,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "formData",
        "ptr": "/operationsManagerAutomations"
      },
      "to": {
        "location": "method",
        "name": 8,
        "ptr": "/args/0/value"
      }
    },
    {
      "id": 18,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "formData",
        "ptr": "/automationCatalogs"
      },
      "to": {
        "location": "method",
        "name": 11,
        "ptr": "/args/0/value"
      }
    },
    {
      "id": 19,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "formData",
        "ptr": "/automationWorkflows"
      },
      "to": {
        "location": "method",
        "name": 14,
        "ptr": "/args/0/value"
      }
    },
    {
      "id": 20,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "formData",
        "ptr": "/scope"
      },
      "to": {
        "location": "outgoing",
        "name": "scope",
        "ptr": ""
      }
    },
    {
      "id": 21,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "formData",
        "ptr": "/prebuiltName"
      },
      "to": {
        "location": "outgoing",
        "name": "prebuiltName",
        "ptr": ""
      }
    },
    {
      "id": 22,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "formData",
        "ptr": "/prebuiltDescription"
      },
      "to": {
        "location": "outgoing",
        "name": "prebuiltDescription",
        "ptr": ""
      }
    },
    {
      "id": 23,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "formData",
        "ptr": "/readme"
      },
      "to": {
        "location": "outgoing",
        "name": "readme",
        "ptr": ""
      }
    },
    {
      "id": 25,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "formData",
        "ptr": "/license"
      },
      "to": {
        "location": "outgoing",
        "name": "license",
        "ptr": ""
      }
    },
    {
      "id": 26,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "formData",
        "ptr": "/contributor"
      },
      "to": {
        "location": "outgoing",
        "name": "contributor",
        "ptr": ""
      }
    },
    {
      "id": 27,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "formData",
        "ptr": "/categories"
      },
      "to": {
        "location": "outgoing",
        "name": "categories",
        "ptr": ""
      }
    },
    {
      "id": 28,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "formData",
        "ptr": "/keywords"
      },
      "to": {
        "location": "outgoing",
        "name": "keywords",
        "ptr": ""
      }
    },
    {
      "id": 29,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "formData",
        "ptr": "/zeroTouch"
      },
      "to": {
        "location": "outgoing",
        "name": "zeroTouch",
        "ptr": ""
      }
    }
  ],
  "functions": [
    {
      "incoming": [
        {
          "type": "object",
          "required": [],
          "$id": "currentValue"
        },
        {
          "title": "index",
          "type": "number",
          "optional": true,
          "$id": "index"
        },
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": []
          },
          "default": [],
          "$id": "array",
          "optional": true
        },
        {
          "$id": "thisArg",
          "type": "object",
          "properties": {},
          "isContext": true,
          "isIndexed": true
        }
      ],
      "outgoing": [
        {
          "title": "newValue",
          "type": [
            "array",
            "boolean",
            "number",
            "integer",
            "string",
            "object",
            "null"
          ],
          "editable": true,
          "$id": "newValue"
        }
      ],
      "functions": [],
      "name": "getNameValue",
      "steps": [
        {
          "id": 1,
          "type": "method",
          "library": "Object",
          "method": "getProperty",
          "args": [
            null,
            "name"
          ],
          "view": {
            "row": 2,
            "col": 1
          }
        },
        {
          "id": 2,
          "type": "assign",
          "from": {
            "location": "incoming",
            "name": "currentValue",
            "ptr": ""
          },
          "to": {
            "location": "method",
            "name": 1,
            "ptr": "/args/0/value"
          }
        },
        {
          "id": 3,
          "type": "assign",
          "from": {
            "location": "method",
            "name": 1,
            "ptr": "/return"
          },
          "to": {
            "location": "outgoing",
            "name": "newValue",
            "ptr": ""
          }
        }
      ],
      "view": {
        "col": 1,
        "row": 4
      },
      "id": "getNameValue",
      "comments": []
    }
  ],
  "comments": [],
  "view": {
    "col": 2,
    "row": 5
  },
  "created": "2022-12-02T16:01:37.499Z",
  "createdBy": {
    "_id": "618009a031d7680dbad39d8b",
    "provenance": "local_aaa",
    "username": "admin@pronghorn"
  },
  "lastUpdated": "2022-12-02T16:01:37.499Z",
  "lastUpdatedBy": {
    "_id": "618009a031d7680dbad39d8b",
    "provenance": "local_aaa",
    "username": "admin@pronghorn"
  },
  "version": "3.17.7-2021.1.7",
  "tags": []
}